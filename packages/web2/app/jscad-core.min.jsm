var __reflectGet = Reflect.get;
var __reflectSet = Reflect.set;
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// app/jscad-regl-renderer.min.js
var require_jscad_regl_renderer_min = __commonJS({
  "app/jscad-regl-renderer.min.js"(exports, module) {
    (function(f) {
      if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = f();
      } else if (typeof define === "function" && define.amd) {
        define([], f);
      } else {
        var g;
        if (typeof window !== "undefined") {
          g = window;
        } else if (typeof global !== "undefined") {
          g = global;
        } else if (typeof self !== "undefined") {
          g = self;
        } else {
          g = this;
        }
        g.jscadReglRenderer = f();
      }
    })(function() {
      var define2, module2, exports2;
      return function() {
        function r(e, n, t) {
          function o(i2, f) {
            if (!n[i2]) {
              if (!e[i2]) {
                var c = typeof __require == "function" && __require;
                if (!f && c)
                  return c(i2, true);
                if (u)
                  return u(i2, true);
                var a = new Error("Cannot find module '" + i2 + "'");
                throw a.code = "MODULE_NOT_FOUND", a;
              }
              var p = n[i2] = { exports: {} };
              e[i2][0].call(p.exports, function(r2) {
                var n2 = e[i2][1][r2];
                return o(n2 || r2);
              }, p, p.exports, r, e, n, t);
            }
            return n[i2].exports;
          }
          for (var u = typeof __require == "function" && __require, i = 0; i < t.length; i++)
            o(t[i]);
          return o;
        }
        return r;
      }()({ 1: [function(require2, module3, exports3) {
        const flatten = (t) => t.reduce((t2, a) => Array.isArray(a) ? t2.concat(flatten(a)) : t2.concat(a), []);
        module3.exports = flatten;
      }, {}], 2: [function(require2, module3, exports3) {
        const fnNumberSort = (o, r) => o - r;
        module3.exports = fnNumberSort;
      }, {}], 3: [function(require2, module3, exports3) {
        const head = (r) => {
          if (Array.isArray(r) && r.length !== 0)
            return r[0];
        };
        module3.exports = head;
      }, {}], 4: [function(require2, module3, exports3) {
        module3.exports = { flatten: require2("./flatten"), fnNumberSort: require2("./fnNumberSort"), head: require2("./head"), insertSorted: require2("./insertSorted"), nth: require2("./nth"), padToLength: require2("./padToLength"), toArray: require2("./toArray") };
      }, { "./flatten": 1, "./fnNumberSort": 2, "./head": 3, "./insertSorted": 5, "./nth": 6, "./padToLength": 7, "./toArray": 8 }], 5: [function(require2, module3, exports3) {
        const insertSorted = (t, e, o) => {
          let r = 0, n = t.length;
          for (; n > r; ) {
            const s = Math.floor((r + n) / 2);
            o(e, t[s]) > 0 ? r = s + 1 : n = s;
          }
          return t.splice(r, 0, e), t;
        };
        module3.exports = insertSorted;
      }, {}], 6: [function(require2, module3, exports3) {
        const nth = (r, t) => {
          if (Array.isArray(r) && !(r.length < t))
            return r[t];
        };
        module3.exports = nth;
      }, {}], 7: [function(require2, module3, exports3) {
        const padToLength = (e, o, t) => {
          for (e = e.slice(); e.length < t; )
            e.push(o);
          return e;
        };
        module3.exports = padToLength;
      }, {}], 8: [function(require2, module3, exports3) {
        const toArray = (r) => Array.isArray(r) ? r : r == null ? [] : [r];
        module3.exports = toArray;
      }, {}], 9: [function(require2, module3, exports3) {
        var transform = require2("./lib/projectMat4");
        function unproject(r, t, e, o) {
          var n = e[0], u = e[1], a = e[2], c = e[3], p = t[0], f = t[1], i = t[2];
          return p -= n, f = c - f - 1, f -= u, r[0] = 2 * p / a - 1, r[1] = 2 * f / c - 1, r[2] = 2 * i - 1, transform(r, r, o);
        }
        module3.exports = unproject;
      }, { "./lib/projectMat4": 10 }], 10: [function(require2, module3, exports3) {
        function project(r, e, o) {
          var t = e[0], c = e[1], n = e[2], p = o[0], u = o[1], j = o[2], a = o[3], d = o[4], f = o[5], i = o[6], l = o[7], m = o[8], s = o[9], v = o[10], x = o[11], b = o[12], g = o[13], h = o[14], k = 1 / (t * a + c * l + n * x + o[15]);
          return r[0] = (t * p + c * d + n * m + b) * k, r[1] = (t * u + c * f + n * s + g) * k, r[2] = (t * j + c * i + n * v + h) * k, r;
        }
        module3.exports = project;
      }, {}], 11: [function(require2, module3, exports3) {
        function adjoint(n, o) {
          var t = o[0], r = o[1], a = o[2], d = o[3], e = o[4], i = o[5], u = o[6], j = o[7], c = o[8], f = o[9], l = o[10], m = o[11], p = o[12], s = o[13], v = o[14], x = o[15];
          return n[0] = i * (l * x - m * v) - f * (u * x - j * v) + s * (u * m - j * l), n[1] = -(r * (l * x - m * v) - f * (a * x - d * v) + s * (a * m - d * l)), n[2] = r * (u * x - j * v) - i * (a * x - d * v) + s * (a * j - d * u), n[3] = -(r * (u * m - j * l) - i * (a * m - d * l) + f * (a * j - d * u)), n[4] = -(e * (l * x - m * v) - c * (u * x - j * v) + p * (u * m - j * l)), n[5] = t * (l * x - m * v) - c * (a * x - d * v) + p * (a * m - d * l), n[6] = -(t * (u * x - j * v) - e * (a * x - d * v) + p * (a * j - d * u)), n[7] = t * (u * m - j * l) - e * (a * m - d * l) + c * (a * j - d * u), n[8] = e * (f * x - m * s) - c * (i * x - j * s) + p * (i * m - j * f), n[9] = -(t * (f * x - m * s) - c * (r * x - d * s) + p * (r * m - d * f)), n[10] = t * (i * x - j * s) - e * (r * x - d * s) + p * (r * j - d * i), n[11] = -(t * (i * m - j * f) - e * (r * m - d * f) + c * (r * j - d * i)), n[12] = -(e * (f * v - l * s) - c * (i * v - u * s) + p * (i * l - u * f)), n[13] = t * (f * v - l * s) - c * (r * v - a * s) + p * (r * l - a * f), n[14] = -(t * (i * v - u * s) - e * (r * v - a * s) + p * (r * u - a * i)), n[15] = t * (i * l - u * f) - e * (r * l - a * f) + c * (r * u - a * i), n;
        }
        module3.exports = adjoint;
      }, {}], 12: [function(require2, module3, exports3) {
        function clone(e) {
          var n = new Float32Array(16);
          return n[0] = e[0], n[1] = e[1], n[2] = e[2], n[3] = e[3], n[4] = e[4], n[5] = e[5], n[6] = e[6], n[7] = e[7], n[8] = e[8], n[9] = e[9], n[10] = e[10], n[11] = e[11], n[12] = e[12], n[13] = e[13], n[14] = e[14], n[15] = e[15], n;
        }
        module3.exports = clone;
      }, {}], 13: [function(require2, module3, exports3) {
        function copy(o, c) {
          return o[0] = c[0], o[1] = c[1], o[2] = c[2], o[3] = c[3], o[4] = c[4], o[5] = c[5], o[6] = c[6], o[7] = c[7], o[8] = c[8], o[9] = c[9], o[10] = c[10], o[11] = c[11], o[12] = c[12], o[13] = c[13], o[14] = c[14], o[15] = c[15], o;
        }
        module3.exports = copy;
      }, {}], 14: [function(require2, module3, exports3) {
        function create() {
          var e = new Float32Array(16);
          return e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e;
        }
        module3.exports = create;
      }, {}], 15: [function(require2, module3, exports3) {
        function determinant(e) {
          var n = e[0], t = e[1], r = e[2], a = e[3], d = e[4], i = e[5], m = e[6], o = e[7], u = e[8], c = e[9], f = e[10], l = e[11], p = e[12], s = e[13], v = e[14], x = e[15];
          return (n * i - t * d) * (f * x - l * v) - (n * m - r * d) * (c * x - l * s) + (n * o - a * d) * (c * v - f * s) + (t * m - r * i) * (u * x - l * p) - (t * o - a * i) * (u * v - f * p) + (r * o - a * m) * (u * s - c * p);
        }
        module3.exports = determinant;
      }, {}], 16: [function(require2, module3, exports3) {
        function fromQuat(r, o) {
          var t = o[0], u = o[1], a = o[2], e = o[3], f = t + t, m = u + u, n = a + a, Q = t * f, c = u * f, d = u * m, i = a * f, l = a * m, p = a * n, s = e * f, v = e * m, x = e * n;
          return r[0] = 1 - d - p, r[1] = c + x, r[2] = i - v, r[3] = 0, r[4] = c - x, r[5] = 1 - Q - p, r[6] = l + s, r[7] = 0, r[8] = i + v, r[9] = l - s, r[10] = 1 - Q - d, r[11] = 0, r[12] = 0, r[13] = 0, r[14] = 0, r[15] = 1, r;
        }
        module3.exports = fromQuat;
      }, {}], 17: [function(require2, module3, exports3) {
        function fromRotation(t, o, a) {
          var n, r, s, e = a[0], h = a[1], i = a[2], u = Math.sqrt(e * e + h * h + i * i);
          return Math.abs(u) < 1e-6 ? null : (e *= u = 1 / u, h *= u, i *= u, n = Math.sin(o), s = 1 - (r = Math.cos(o)), t[0] = e * e * s + r, t[1] = h * e * s + i * n, t[2] = i * e * s - h * n, t[3] = 0, t[4] = e * h * s - i * n, t[5] = h * h * s + r, t[6] = i * h * s + e * n, t[7] = 0, t[8] = e * i * s + h * n, t[9] = h * i * s - e * n, t[10] = i * i * s + r, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t);
        }
        module3.exports = fromRotation;
      }, {}], 18: [function(require2, module3, exports3) {
        function fromRotationTranslation(o, n, t) {
          var r = n[0], a = n[1], i = n[2], e = n[3], f = r + r, l = a + a, m = i + i, s = r * f, u = r * l, R = r * m, T = a * l, c = a * m, d = i * m, p = e * f, v = e * l, x = e * m;
          return o[0] = 1 - (T + d), o[1] = u + x, o[2] = R - v, o[3] = 0, o[4] = u - x, o[5] = 1 - (s + d), o[6] = c + p, o[7] = 0, o[8] = R + v, o[9] = c - p, o[10] = 1 - (s + T), o[11] = 0, o[12] = t[0], o[13] = t[1], o[14] = t[2], o[15] = 1, o;
        }
        module3.exports = fromRotationTranslation;
      }, {}], 19: [function(require2, module3, exports3) {
        function fromScaling(n, o) {
          return n[0] = o[0], n[1] = 0, n[2] = 0, n[3] = 0, n[4] = 0, n[5] = o[1], n[6] = 0, n[7] = 0, n[8] = 0, n[9] = 0, n[10] = o[2], n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, n;
        }
        module3.exports = fromScaling;
      }, {}], 20: [function(require2, module3, exports3) {
        function fromTranslation(n, o) {
          return n[0] = 1, n[1] = 0, n[2] = 0, n[3] = 0, n[4] = 0, n[5] = 1, n[6] = 0, n[7] = 0, n[8] = 0, n[9] = 0, n[10] = 1, n[11] = 0, n[12] = o[0], n[13] = o[1], n[14] = o[2], n[15] = 1, n;
        }
        module3.exports = fromTranslation;
      }, {}], 21: [function(require2, module3, exports3) {
        function fromXRotation(o, t) {
          var n = Math.sin(t), r = Math.cos(t);
          return o[0] = 1, o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = r, o[6] = n, o[7] = 0, o[8] = 0, o[9] = -n, o[10] = r, o[11] = 0, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1, o;
        }
        module3.exports = fromXRotation;
      }, {}], 22: [function(require2, module3, exports3) {
        function fromYRotation(o, t) {
          var n = Math.sin(t), r = Math.cos(t);
          return o[0] = r, o[1] = 0, o[2] = -n, o[3] = 0, o[4] = 0, o[5] = 1, o[6] = 0, o[7] = 0, o[8] = n, o[9] = 0, o[10] = r, o[11] = 0, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1, o;
        }
        module3.exports = fromYRotation;
      }, {}], 23: [function(require2, module3, exports3) {
        function fromZRotation(o, t) {
          var n = Math.sin(t), r = Math.cos(t);
          return o[0] = r, o[1] = n, o[2] = 0, o[3] = 0, o[4] = -n, o[5] = r, o[6] = 0, o[7] = 0, o[8] = 0, o[9] = 0, o[10] = 1, o[11] = 0, o[12] = 0, o[13] = 0, o[14] = 0, o[15] = 1, o;
        }
        module3.exports = fromZRotation;
      }, {}], 24: [function(require2, module3, exports3) {
        function frustum(u, r, t, e, f, m, n) {
          var o = 1 / (t - r), s = 1 / (f - e), a = 1 / (m - n);
          return u[0] = 2 * m * o, u[1] = 0, u[2] = 0, u[3] = 0, u[4] = 0, u[5] = 2 * m * s, u[6] = 0, u[7] = 0, u[8] = (t + r) * o, u[9] = (f + e) * s, u[10] = (n + m) * a, u[11] = -1, u[12] = 0, u[13] = 0, u[14] = n * m * 2 * a, u[15] = 0, u;
        }
        module3.exports = frustum;
      }, {}], 25: [function(require2, module3, exports3) {
        function identity(t) {
          return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t;
        }
        module3.exports = identity;
      }, {}], 26: [function(require2, module3, exports3) {
        module3.exports = { create: require2("./create"), clone: require2("./clone"), copy: require2("./copy"), identity: require2("./identity"), transpose: require2("./transpose"), invert: require2("./invert"), adjoint: require2("./adjoint"), determinant: require2("./determinant"), multiply: require2("./multiply"), translate: require2("./translate"), scale: require2("./scale"), rotate: require2("./rotate"), rotateX: require2("./rotateX"), rotateY: require2("./rotateY"), rotateZ: require2("./rotateZ"), fromRotation: require2("./fromRotation"), fromRotationTranslation: require2("./fromRotationTranslation"), fromScaling: require2("./fromScaling"), fromTranslation: require2("./fromTranslation"), fromXRotation: require2("./fromXRotation"), fromYRotation: require2("./fromYRotation"), fromZRotation: require2("./fromZRotation"), fromQuat: require2("./fromQuat"), frustum: require2("./frustum"), perspective: require2("./perspective"), perspectiveFromFieldOfView: require2("./perspectiveFromFieldOfView"), ortho: require2("./ortho"), lookAt: require2("./lookAt"), str: require2("./str") };
      }, { "./adjoint": 11, "./clone": 12, "./copy": 13, "./create": 14, "./determinant": 15, "./fromQuat": 16, "./fromRotation": 17, "./fromRotationTranslation": 18, "./fromScaling": 19, "./fromTranslation": 20, "./fromXRotation": 21, "./fromYRotation": 22, "./fromZRotation": 23, "./frustum": 24, "./identity": 25, "./invert": 27, "./lookAt": 28, "./multiply": 29, "./ortho": 30, "./perspective": 31, "./perspectiveFromFieldOfView": 32, "./rotate": 33, "./rotateX": 34, "./rotateY": 35, "./rotateZ": 36, "./scale": 37, "./str": 38, "./translate": 39, "./transpose": 40 }], 27: [function(require2, module3, exports3) {
        function invert(n, r) {
          var e = r[0], t = r[1], u = r[2], i = r[3], l = r[4], o = r[5], v = r[6], a = r[7], c = r[8], d = r[9], f = r[10], m = r[11], p = r[12], s = r[13], x = r[14], b = r[15], g = e * o - t * l, h = e * v - u * l, j = e * a - i * l, k = t * v - u * o, q = t * a - i * o, w = u * a - i * v, y = c * s - d * p, z = c * x - f * p, A = c * b - m * p, B = d * x - f * s, C = d * b - m * s, D = f * b - m * x, E = g * D - h * C + j * B + k * A - q * z + w * y;
          return E ? (E = 1 / E, n[0] = (o * D - v * C + a * B) * E, n[1] = (u * C - t * D - i * B) * E, n[2] = (s * w - x * q + b * k) * E, n[3] = (f * q - d * w - m * k) * E, n[4] = (v * A - l * D - a * z) * E, n[5] = (e * D - u * A + i * z) * E, n[6] = (x * j - p * w - b * h) * E, n[7] = (c * w - f * j + m * h) * E, n[8] = (l * C - o * A + a * y) * E, n[9] = (t * A - e * C - i * y) * E, n[10] = (p * q - s * j + b * g) * E, n[11] = (d * j - c * q - m * g) * E, n[12] = (o * z - l * B - v * y) * E, n[13] = (e * B - t * z + u * y) * E, n[14] = (s * h - p * k - x * g) * E, n[15] = (c * k - d * h + f * g) * E, n) : null;
        }
        module3.exports = invert;
      }, {}], 28: [function(require2, module3, exports3) {
        var identity = require2("./identity");
        function lookAt(t, a, e, r) {
          var i, o, s, h, n, M, d, q, u, b, l = a[0], y = a[1], k = a[2], v = r[0], A = r[1], c = r[2], f = e[0], m = e[1], p = e[2];
          return Math.abs(l - f) < 1e-6 && Math.abs(y - m) < 1e-6 && Math.abs(k - p) < 1e-6 ? identity(t) : (d = l - f, q = y - m, u = k - p, i = A * (u *= b = 1 / Math.sqrt(d * d + q * q + u * u)) - c * (q *= b), o = c * (d *= b) - v * u, s = v * q - A * d, (b = Math.sqrt(i * i + o * o + s * s)) ? (i *= b = 1 / b, o *= b, s *= b) : (i = 0, o = 0, s = 0), h = q * s - u * o, n = u * i - d * s, M = d * o - q * i, (b = Math.sqrt(h * h + n * n + M * M)) ? (h *= b = 1 / b, n *= b, M *= b) : (h = 0, n = 0, M = 0), t[0] = i, t[1] = h, t[2] = d, t[3] = 0, t[4] = o, t[5] = n, t[6] = q, t[7] = 0, t[8] = s, t[9] = M, t[10] = u, t[11] = 0, t[12] = -(i * l + o * y + s * k), t[13] = -(h * l + n * y + M * k), t[14] = -(d * l + q * y + u * k), t[15] = 1, t);
        }
        module3.exports = lookAt;
      }, { "./identity": 25 }], 29: [function(require2, module3, exports3) {
        function multiply(l, t, u) {
          var r = t[0], e = t[1], i = t[2], m = t[3], n = t[4], o = t[5], p = t[6], y = t[7], a = t[8], c = t[9], d = t[10], f = t[11], s = t[12], v = t[13], x = t[14], b = t[15], g = u[0], h = u[1], j = u[2], k = u[3];
          return l[0] = g * r + h * n + j * a + k * s, l[1] = g * e + h * o + j * c + k * v, l[2] = g * i + h * p + j * d + k * x, l[3] = g * m + h * y + j * f + k * b, g = u[4], h = u[5], j = u[6], k = u[7], l[4] = g * r + h * n + j * a + k * s, l[5] = g * e + h * o + j * c + k * v, l[6] = g * i + h * p + j * d + k * x, l[7] = g * m + h * y + j * f + k * b, g = u[8], h = u[9], j = u[10], k = u[11], l[8] = g * r + h * n + j * a + k * s, l[9] = g * e + h * o + j * c + k * v, l[10] = g * i + h * p + j * d + k * x, l[11] = g * m + h * y + j * f + k * b, g = u[12], h = u[13], j = u[14], k = u[15], l[12] = g * r + h * n + j * a + k * s, l[13] = g * e + h * o + j * c + k * v, l[14] = g * i + h * p + j * d + k * x, l[15] = g * m + h * y + j * f + k * b, l;
        }
        module3.exports = multiply;
      }, {}], 30: [function(require2, module3, exports3) {
        function ortho(o, r, t, e, n, u, h) {
          var a = 1 / (r - t), c = 1 / (e - n), d = 1 / (u - h);
          return o[0] = -2 * a, o[1] = 0, o[2] = 0, o[3] = 0, o[4] = 0, o[5] = -2 * c, o[6] = 0, o[7] = 0, o[8] = 0, o[9] = 0, o[10] = 2 * d, o[11] = 0, o[12] = (r + t) * a, o[13] = (n + e) * c, o[14] = (h + u) * d, o[15] = 1, o;
        }
        module3.exports = ortho;
      }, {}], 31: [function(require2, module3, exports3) {
        function perspective(e, t, r, p, n) {
          var a = 1 / Math.tan(t / 2), c = 1 / (p - n);
          return e[0] = a / r, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = a, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = (n + p) * c, e[11] = -1, e[12] = 0, e[13] = 0, e[14] = 2 * n * p * c, e[15] = 0, e;
        }
        module3.exports = perspective;
      }, {}], 32: [function(require2, module3, exports3) {
        function perspectiveFromFieldOfView(e, t, a, r) {
          var h = Math.tan(t.upDegrees * Math.PI / 180), i = Math.tan(t.downDegrees * Math.PI / 180), n = Math.tan(t.leftDegrees * Math.PI / 180), M = Math.tan(t.rightDegrees * Math.PI / 180), s = 2 / (n + M), o = 2 / (h + i);
          return e[0] = s, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = o, e[6] = 0, e[7] = 0, e[8] = -(n - M) * s * 0.5, e[9] = (h - i) * o * 0.5, e[10] = r / (a - r), e[11] = -1, e[12] = 0, e[13] = 0, e[14] = r * a / (a - r), e[15] = 0, e;
        }
        module3.exports = perspectiveFromFieldOfView;
      }, {}], 33: [function(require2, module3, exports3) {
        function rotate(t, a, r, e) {
          var o, n, s, h, u, M, l, c, i, b, d, f, m, p, q, v, x, g, j, k, w, y, z, A, B = e[0], C = e[1], D = e[2], E = Math.sqrt(B * B + C * C + D * D);
          return Math.abs(E) < 1e-6 ? null : (B *= E = 1 / E, C *= E, D *= E, o = Math.sin(r), s = 1 - (n = Math.cos(r)), h = a[0], u = a[1], M = a[2], l = a[3], c = a[4], i = a[5], b = a[6], d = a[7], f = a[8], m = a[9], p = a[10], q = a[11], v = B * B * s + n, x = C * B * s + D * o, g = D * B * s - C * o, j = B * C * s - D * o, k = C * C * s + n, w = D * C * s + B * o, y = B * D * s + C * o, z = C * D * s - B * o, A = D * D * s + n, t[0] = h * v + c * x + f * g, t[1] = u * v + i * x + m * g, t[2] = M * v + b * x + p * g, t[3] = l * v + d * x + q * g, t[4] = h * j + c * k + f * w, t[5] = u * j + i * k + m * w, t[6] = M * j + b * k + p * w, t[7] = l * j + d * k + q * w, t[8] = h * y + c * z + f * A, t[9] = u * y + i * z + m * A, t[10] = M * y + b * z + p * A, t[11] = l * y + d * z + q * A, a !== t && (t[12] = a[12], t[13] = a[13], t[14] = a[14], t[15] = a[15]), t);
        }
        module3.exports = rotate;
      }, {}], 34: [function(require2, module3, exports3) {
        function rotateX(t, o, r) {
          var a = Math.sin(r), e = Math.cos(r), n = o[4], s = o[5], u = o[6], c = o[7], h = o[8], i = o[9], M = o[10], X = o[11];
          return o !== t && (t[0] = o[0], t[1] = o[1], t[2] = o[2], t[3] = o[3], t[12] = o[12], t[13] = o[13], t[14] = o[14], t[15] = o[15]), t[4] = n * e + h * a, t[5] = s * e + i * a, t[6] = u * e + M * a, t[7] = c * e + X * a, t[8] = h * e - n * a, t[9] = i * e - s * a, t[10] = M * e - u * a, t[11] = X * e - c * a, t;
        }
        module3.exports = rotateX;
      }, {}], 35: [function(require2, module3, exports3) {
        function rotateY(t, o, r) {
          var a = Math.sin(r), e = Math.cos(r), n = o[0], s = o[1], u = o[2], c = o[3], h = o[8], i = o[9], M = o[10], Y = o[11];
          return o !== t && (t[4] = o[4], t[5] = o[5], t[6] = o[6], t[7] = o[7], t[12] = o[12], t[13] = o[13], t[14] = o[14], t[15] = o[15]), t[0] = n * e - h * a, t[1] = s * e - i * a, t[2] = u * e - M * a, t[3] = c * e - Y * a, t[8] = n * a + h * e, t[9] = s * a + i * e, t[10] = u * a + M * e, t[11] = c * a + Y * e, t;
        }
        module3.exports = rotateY;
      }, {}], 36: [function(require2, module3, exports3) {
        function rotateZ(t, o, r) {
          var a = Math.sin(r), e = Math.cos(r), n = o[0], s = o[1], u = o[2], c = o[3], h = o[4], i = o[5], M = o[6], Z = o[7];
          return o !== t && (t[8] = o[8], t[9] = o[9], t[10] = o[10], t[11] = o[11], t[12] = o[12], t[13] = o[13], t[14] = o[14], t[15] = o[15]), t[0] = n * e + h * a, t[1] = s * e + i * a, t[2] = u * e + M * a, t[3] = c * e + Z * a, t[4] = h * e - n * a, t[5] = i * e - s * a, t[6] = M * e - u * a, t[7] = Z * e - c * a, t;
        }
        module3.exports = rotateZ;
      }, {}], 37: [function(require2, module3, exports3) {
        function scale(e, r, a) {
          var c = a[0], l = a[1], n = a[2];
          return e[0] = r[0] * c, e[1] = r[1] * c, e[2] = r[2] * c, e[3] = r[3] * c, e[4] = r[4] * l, e[5] = r[5] * l, e[6] = r[6] * l, e[7] = r[7] * l, e[8] = r[8] * n, e[9] = r[9] * n, e[10] = r[10] * n, e[11] = r[11] * n, e[12] = r[12], e[13] = r[13], e[14] = r[14], e[15] = r[15], e;
        }
        module3.exports = scale;
      }, {}], 38: [function(require2, module3, exports3) {
        function str(t) {
          return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")";
        }
        module3.exports = str;
      }, {}], 39: [function(require2, module3, exports3) {
        function translate(t, r, a) {
          var e, n, l, o, s, u, c, d, f, i, m, p, v = a[0], x = a[1], b = a[2];
          return r === t ? (t[12] = r[0] * v + r[4] * x + r[8] * b + r[12], t[13] = r[1] * v + r[5] * x + r[9] * b + r[13], t[14] = r[2] * v + r[6] * x + r[10] * b + r[14], t[15] = r[3] * v + r[7] * x + r[11] * b + r[15]) : (e = r[0], n = r[1], l = r[2], o = r[3], s = r[4], u = r[5], c = r[6], d = r[7], f = r[8], i = r[9], m = r[10], p = r[11], t[0] = e, t[1] = n, t[2] = l, t[3] = o, t[4] = s, t[5] = u, t[6] = c, t[7] = d, t[8] = f, t[9] = i, t[10] = m, t[11] = p, t[12] = e * v + s * x + f * b + r[12], t[13] = n * v + u * x + i * b + r[13], t[14] = l * v + c * x + m * b + r[14], t[15] = o * v + d * x + p * b + r[15]), t;
        }
        module3.exports = translate;
      }, {}], 40: [function(require2, module3, exports3) {
        function transpose(e, r) {
          if (e === r) {
            var s = r[1], n = r[2], o = r[3], t = r[6], a = r[7], p = r[11];
            e[1] = r[4], e[2] = r[8], e[3] = r[12], e[4] = s, e[6] = r[9], e[7] = r[13], e[8] = n, e[9] = t, e[11] = r[14], e[12] = o, e[13] = a, e[14] = p;
          } else
            e[0] = r[0], e[1] = r[4], e[2] = r[8], e[3] = r[12], e[4] = r[1], e[5] = r[5], e[6] = r[9], e[7] = r[13], e[8] = r[2], e[9] = r[6], e[10] = r[10], e[11] = r[14], e[12] = r[3], e[13] = r[7], e[14] = r[11], e[15] = r[15];
          return e;
        }
        module3.exports = transpose;
      }, {}], 41: [function(require2, module3, exports3) {
        function add(d, e, n) {
          return d[0] = e[0] + n[0], d[1] = e[1] + n[1], d[2] = e[2] + n[2], d;
        }
        module3.exports = add;
      }, {}], 42: [function(require2, module3, exports3) {
        module3.exports = angle;
        var fromValues = require2("./fromValues"), normalize = require2("./normalize"), dot = require2("./dot");
        function angle(r, e) {
          var a = fromValues(r[0], r[1], r[2]), o = fromValues(e[0], e[1], e[2]);
          normalize(a, a), normalize(o, o);
          var l = dot(a, o);
          return l > 1 ? 0 : Math.acos(l);
        }
      }, { "./dot": 52, "./fromValues": 58, "./normalize": 69 }], 43: [function(require2, module3, exports3) {
        function ceil(e, c) {
          return e[0] = Math.ceil(c[0]), e[1] = Math.ceil(c[1]), e[2] = Math.ceil(c[2]), e;
        }
        module3.exports = ceil;
      }, {}], 44: [function(require2, module3, exports3) {
        function clone(e) {
          var n = new Float32Array(3);
          return n[0] = e[0], n[1] = e[1], n[2] = e[2], n;
        }
        module3.exports = clone;
      }, {}], 45: [function(require2, module3, exports3) {
        function copy(o, c) {
          return o[0] = c[0], o[1] = c[1], o[2] = c[2], o;
        }
        module3.exports = copy;
      }, {}], 46: [function(require2, module3, exports3) {
        function create() {
          var e = new Float32Array(3);
          return e[0] = 0, e[1] = 0, e[2] = 0, e;
        }
        module3.exports = create;
      }, {}], 47: [function(require2, module3, exports3) {
        function cross(r, o, s) {
          var c = o[0], e = o[1], n = o[2], t = s[0], u = s[1], a = s[2];
          return r[0] = e * a - n * u, r[1] = n * t - c * a, r[2] = c * u - e * t, r;
        }
        module3.exports = cross;
      }, {}], 48: [function(require2, module3, exports3) {
        module3.exports = require2("./distance");
      }, { "./distance": 49 }], 49: [function(require2, module3, exports3) {
        function distance(t, e) {
          var n = e[0] - t[0], r = e[1] - t[1], a = e[2] - t[2];
          return Math.sqrt(n * n + r * r + a * a);
        }
        module3.exports = distance;
      }, {}], 50: [function(require2, module3, exports3) {
        module3.exports = require2("./divide");
      }, { "./divide": 51 }], 51: [function(require2, module3, exports3) {
        function divide(d, e, i) {
          return d[0] = e[0] / i[0], d[1] = e[1] / i[1], d[2] = e[2] / i[2], d;
        }
        module3.exports = divide;
      }, {}], 52: [function(require2, module3, exports3) {
        function dot(o, t) {
          return o[0] * t[0] + o[1] * t[1] + o[2] * t[2];
        }
        module3.exports = dot;
      }, {}], 53: [function(require2, module3, exports3) {
        module3.exports = 1e-6;
      }, {}], 54: [function(require2, module3, exports3) {
        module3.exports = equals;
        var EPSILON = require2("./epsilon");
        function equals(a, t) {
          var s = a[0], h = a[1], M = a[2], b = t[0], e = t[1], r = t[2];
          return Math.abs(s - b) <= EPSILON * Math.max(1, Math.abs(s), Math.abs(b)) && Math.abs(h - e) <= EPSILON * Math.max(1, Math.abs(h), Math.abs(e)) && Math.abs(M - r) <= EPSILON * Math.max(1, Math.abs(M), Math.abs(r));
        }
      }, { "./epsilon": 53 }], 55: [function(require2, module3, exports3) {
        function exactEquals(e, t) {
          return e[0] === t[0] && e[1] === t[1] && e[2] === t[2];
        }
        module3.exports = exactEquals;
      }, {}], 56: [function(require2, module3, exports3) {
        function floor(o, r) {
          return o[0] = Math.floor(r[0]), o[1] = Math.floor(r[1]), o[2] = Math.floor(r[2]), o;
        }
        module3.exports = floor;
      }, {}], 57: [function(require2, module3, exports3) {
        module3.exports = forEach;
        var vec = require2("./create")();
        function forEach(e, c, r, v, t, a) {
          var n, o;
          for (c || (c = 3), r || (r = 0), o = v ? Math.min(v * c + r, e.length) : e.length, n = r; n < o; n += c)
            vec[0] = e[n], vec[1] = e[n + 1], vec[2] = e[n + 2], t(vec, vec, a), e[n] = vec[0], e[n + 1] = vec[1], e[n + 2] = vec[2];
          return e;
        }
      }, { "./create": 46 }], 58: [function(require2, module3, exports3) {
        function fromValues(r, e, o) {
          var a = new Float32Array(3);
          return a[0] = r, a[1] = e, a[2] = o, a;
        }
        module3.exports = fromValues;
      }, {}], 59: [function(require2, module3, exports3) {
        module3.exports = { EPSILON: require2("./epsilon"), create: require2("./create"), clone: require2("./clone"), angle: require2("./angle"), fromValues: require2("./fromValues"), copy: require2("./copy"), set: require2("./set"), equals: require2("./equals"), exactEquals: require2("./exactEquals"), add: require2("./add"), subtract: require2("./subtract"), sub: require2("./sub"), multiply: require2("./multiply"), mul: require2("./mul"), divide: require2("./divide"), div: require2("./div"), min: require2("./min"), max: require2("./max"), floor: require2("./floor"), ceil: require2("./ceil"), round: require2("./round"), scale: require2("./scale"), scaleAndAdd: require2("./scaleAndAdd"), distance: require2("./distance"), dist: require2("./dist"), squaredDistance: require2("./squaredDistance"), sqrDist: require2("./sqrDist"), length: require2("./length"), len: require2("./len"), squaredLength: require2("./squaredLength"), sqrLen: require2("./sqrLen"), negate: require2("./negate"), inverse: require2("./inverse"), normalize: require2("./normalize"), dot: require2("./dot"), cross: require2("./cross"), lerp: require2("./lerp"), random: require2("./random"), transformMat4: require2("./transformMat4"), transformMat3: require2("./transformMat3"), transformQuat: require2("./transformQuat"), rotateX: require2("./rotateX"), rotateY: require2("./rotateY"), rotateZ: require2("./rotateZ"), forEach: require2("./forEach") };
      }, { "./add": 41, "./angle": 42, "./ceil": 43, "./clone": 44, "./copy": 45, "./create": 46, "./cross": 47, "./dist": 48, "./distance": 49, "./div": 50, "./divide": 51, "./dot": 52, "./epsilon": 53, "./equals": 54, "./exactEquals": 55, "./floor": 56, "./forEach": 57, "./fromValues": 58, "./inverse": 60, "./len": 61, "./length": 62, "./lerp": 63, "./max": 64, "./min": 65, "./mul": 66, "./multiply": 67, "./negate": 68, "./normalize": 69, "./random": 70, "./rotateX": 71, "./rotateY": 72, "./rotateZ": 73, "./round": 74, "./scale": 75, "./scaleAndAdd": 76, "./set": 77, "./sqrDist": 78, "./sqrLen": 79, "./squaredDistance": 80, "./squaredLength": 81, "./sub": 82, "./subtract": 83, "./transformMat3": 84, "./transformMat4": 85, "./transformQuat": 86 }], 60: [function(require2, module3, exports3) {
        function inverse(e, n) {
          return e[0] = 1 / n[0], e[1] = 1 / n[1], e[2] = 1 / n[2], e;
        }
        module3.exports = inverse;
      }, {}], 61: [function(require2, module3, exports3) {
        module3.exports = require2("./length");
      }, { "./length": 62 }], 62: [function(require2, module3, exports3) {
        function length(t) {
          var e = t[0], n = t[1], r = t[2];
          return Math.sqrt(e * e + n * n + r * r);
        }
        module3.exports = length;
      }, {}], 63: [function(require2, module3, exports3) {
        function lerp(r, e, l, n) {
          var o = e[0], p = e[1], t = e[2];
          return r[0] = o + n * (l[0] - o), r[1] = p + n * (l[1] - p), r[2] = t + n * (l[2] - t), r;
        }
        module3.exports = lerp;
      }, {}], 64: [function(require2, module3, exports3) {
        function max(a, m, t) {
          return a[0] = Math.max(m[0], t[0]), a[1] = Math.max(m[1], t[1]), a[2] = Math.max(m[2], t[2]), a;
        }
        module3.exports = max;
      }, {}], 65: [function(require2, module3, exports3) {
        function min(n, i, m) {
          return n[0] = Math.min(i[0], m[0]), n[1] = Math.min(i[1], m[1]), n[2] = Math.min(i[2], m[2]), n;
        }
        module3.exports = min;
      }, {}], 66: [function(require2, module3, exports3) {
        module3.exports = require2("./multiply");
      }, { "./multiply": 67 }], 67: [function(require2, module3, exports3) {
        function multiply(l, t, u) {
          return l[0] = t[0] * u[0], l[1] = t[1] * u[1], l[2] = t[2] * u[2], l;
        }
        module3.exports = multiply;
      }, {}], 68: [function(require2, module3, exports3) {
        function negate(e, n) {
          return e[0] = -n[0], e[1] = -n[1], e[2] = -n[2], e;
        }
        module3.exports = negate;
      }, {}], 69: [function(require2, module3, exports3) {
        function normalize(r, e) {
          var n = e[0], o = e[1], t = e[2], a = n * n + o * o + t * t;
          return a > 0 && (a = 1 / Math.sqrt(a), r[0] = e[0] * a, r[1] = e[1] * a, r[2] = e[2] * a), r;
        }
        module3.exports = normalize;
      }, {}], 70: [function(require2, module3, exports3) {
        function random(a, t) {
          t = t || 1;
          var r = 2 * Math.random() * Math.PI, n = 2 * Math.random() - 1, o = Math.sqrt(1 - n * n) * t;
          return a[0] = Math.cos(r) * o, a[1] = Math.sin(r) * o, a[2] = n * t, a;
        }
        module3.exports = random;
      }, {}], 71: [function(require2, module3, exports3) {
        function rotateX(t, o, r, a) {
          var e = r[1], n = r[2], s = o[1] - e, u = o[2] - n, c = Math.sin(a), h = Math.cos(a);
          return t[0] = o[0], t[1] = e + s * h - u * c, t[2] = n + s * c + u * h, t;
        }
        module3.exports = rotateX;
      }, {}], 72: [function(require2, module3, exports3) {
        function rotateY(t, o, r, a) {
          var e = r[0], n = r[2], s = o[0] - e, u = o[2] - n, c = Math.sin(a), h = Math.cos(a);
          return t[0] = e + u * c + s * h, t[1] = o[1], t[2] = n + u * h - s * c, t;
        }
        module3.exports = rotateY;
      }, {}], 73: [function(require2, module3, exports3) {
        function rotateZ(t, o, r, a) {
          var e = r[0], n = r[1], s = o[0] - e, u = o[1] - n, c = Math.sin(a), h = Math.cos(a);
          return t[0] = e + s * h - u * c, t[1] = n + s * c + u * h, t[2] = o[2], t;
        }
        module3.exports = rotateZ;
      }, {}], 74: [function(require2, module3, exports3) {
        function round(n, o) {
          return n[0] = Math.round(o[0]), n[1] = Math.round(o[1]), n[2] = Math.round(o[2]), n;
        }
        module3.exports = round;
      }, {}], 75: [function(require2, module3, exports3) {
        function scale(e, c, l) {
          return e[0] = c[0] * l, e[1] = c[1] * l, e[2] = c[2] * l, e;
        }
        module3.exports = scale;
      }, {}], 76: [function(require2, module3, exports3) {
        function scaleAndAdd(d, e, n, A) {
          return d[0] = e[0] + n[0] * A, d[1] = e[1] + n[1] * A, d[2] = e[2] + n[2] * A, d;
        }
        module3.exports = scaleAndAdd;
      }, {}], 77: [function(require2, module3, exports3) {
        function set(e, t, n, o) {
          return e[0] = t, e[1] = n, e[2] = o, e;
        }
        module3.exports = set;
      }, {}], 78: [function(require2, module3, exports3) {
        module3.exports = require2("./squaredDistance");
      }, { "./squaredDistance": 80 }], 79: [function(require2, module3, exports3) {
        module3.exports = require2("./squaredLength");
      }, { "./squaredLength": 81 }], 80: [function(require2, module3, exports3) {
        function squaredDistance(e, r) {
          var a = r[0] - e[0], n = r[1] - e[1], s = r[2] - e[2];
          return a * a + n * n + s * s;
        }
        module3.exports = squaredDistance;
      }, {}], 81: [function(require2, module3, exports3) {
        function squaredLength(e) {
          var r = e[0], n = e[1], t = e[2];
          return r * r + n * n + t * t;
        }
        module3.exports = squaredLength;
      }, {}], 82: [function(require2, module3, exports3) {
        module3.exports = require2("./subtract");
      }, { "./subtract": 83 }], 83: [function(require2, module3, exports3) {
        function subtract(t, r, u) {
          return t[0] = r[0] - u[0], t[1] = r[1] - u[1], t[2] = r[2] - u[2], t;
        }
        module3.exports = subtract;
      }, {}], 84: [function(require2, module3, exports3) {
        function transformMat3(r, t, a) {
          var n = t[0], o = t[1], e = t[2];
          return r[0] = n * a[0] + o * a[3] + e * a[6], r[1] = n * a[1] + o * a[4] + e * a[7], r[2] = n * a[2] + o * a[5] + e * a[8], r;
        }
        module3.exports = transformMat3;
      }, {}], 85: [function(require2, module3, exports3) {
        function transformMat4(r, t, a) {
          var n = t[0], o = t[1], e = t[2], f = a[3] * n + a[7] * o + a[11] * e + a[15];
          return f = f || 1, r[0] = (a[0] * n + a[4] * o + a[8] * e + a[12]) / f, r[1] = (a[1] * n + a[5] * o + a[9] * e + a[13]) / f, r[2] = (a[2] * n + a[6] * o + a[10] * e + a[14]) / f, r;
        }
        module3.exports = transformMat4;
      }, {}], 86: [function(require2, module3, exports3) {
        function transformQuat(r, t, a) {
          var n = t[0], o = t[1], u = t[2], e = a[0], f = a[1], m = a[2], s = a[3], Q = s * n + f * u - m * o, c = s * o + m * n - e * u, d = s * u + e * o - f * n, i = -e * n - f * o - m * u;
          return r[0] = Q * s + i * -e + c * -m - d * -f, r[1] = c * s + i * -f + d * -e - Q * -m, r[2] = d * s + i * -m + Q * -f - c * -e, r;
        }
        module3.exports = transformQuat;
      }, {}], 87: [function(require2, module3, exports3) {
        !function(e, t) {
          typeof exports3 == "object" && typeof module3 != "undefined" ? module3.exports = t() : typeof define2 == "function" && define2.amd ? define2(t) : e.createREGL = t();
        }(this, function() {
          function e(e2, t2) {
            this.id = W++, this.type = e2, this.data = t2;
          }
          function t(e2) {
            return "[" + function e3(t2) {
              if (t2.length === 0)
                return [];
              var r2 = t2.charAt(0), n2 = t2.charAt(t2.length - 1);
              if (1 < t2.length && r2 === n2 && (r2 === '"' || r2 === "'"))
                return ['"' + t2.substr(1, t2.length - 2).replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'];
              if (r2 = /\[(false|true|null|\d+|'[^']*'|"[^"]*")\]/.exec(t2))
                return e3(t2.substr(0, r2.index)).concat(e3(r2[1])).concat(e3(t2.substr(r2.index + r2[0].length)));
              if ((r2 = t2.split(".")).length === 1)
                return ['"' + t2.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'];
              for (t2 = [], n2 = 0; n2 < r2.length; ++n2)
                t2 = t2.concat(e3(r2[n2]));
              return t2;
            }(e2).join("][") + "]";
          }
          function r(e2) {
            return typeof e2 == "string" ? e2.split() : e2;
          }
          function n(e2) {
            return typeof e2 == "string" ? document.querySelector(e2) : e2;
          }
          function i(e2) {
            var t2, i2, a2, f2, o2 = e2 || {};
            e2 = {};
            var u2 = [], s2 = [], c2 = typeof window == "undefined" ? 1 : window.devicePixelRatio, l2 = false, p2 = function(e3) {
            }, h2 = function() {
            };
            if (typeof o2 == "string" ? t2 = document.querySelector(o2) : typeof o2 == "object" && (typeof o2.nodeName == "string" && typeof o2.appendChild == "function" && typeof o2.getBoundingClientRect == "function" ? t2 = o2 : typeof o2.drawArrays == "function" || typeof o2.drawElements == "function" ? a2 = (f2 = o2).canvas : ("gl" in o2 ? f2 = o2.gl : "canvas" in o2 ? a2 = n(o2.canvas) : "container" in o2 && (i2 = n(o2.container)), "attributes" in o2 && (e2 = o2.attributes), "extensions" in o2 && (u2 = r(o2.extensions)), "optionalExtensions" in o2 && (s2 = r(o2.optionalExtensions)), "onDone" in o2 && (p2 = o2.onDone), "profile" in o2 && (l2 = !!o2.profile), "pixelRatio" in o2 && (c2 = +o2.pixelRatio))), t2 && (t2.nodeName.toLowerCase() === "canvas" ? a2 = t2 : i2 = t2), !f2) {
              if (!a2) {
                if (!(t2 = function(e3, t3, r2) {
                  function n2() {
                    var t4 = window.innerWidth, n3 = window.innerHeight;
                    e3 !== document.body && (t4 = (n3 = e3.getBoundingClientRect()).right - n3.left, n3 = n3.bottom - n3.top), a3.width = r2 * t4, a3.height = r2 * n3, H(a3.style, { width: t4 + "px", height: n3 + "px" });
                  }
                  var i3, a3 = document.createElement("canvas");
                  return H(a3.style, { border: 0, margin: 0, padding: 0, top: 0, left: 0 }), e3.appendChild(a3), e3 === document.body && (a3.style.position = "absolute", H(e3.style, { margin: 0, padding: 0 })), e3 !== document.body && typeof ResizeObserver == "function" ? (i3 = new ResizeObserver(function() {
                    setTimeout(n2);
                  })).observe(e3) : window.addEventListener("resize", n2, false), n2(), { canvas: a3, onDestroy: function() {
                    i3 ? i3.disconnect() : window.removeEventListener("resize", n2), e3.removeChild(a3);
                  } };
                }(i2 || document.body, 0, c2)))
                  return null;
                a2 = t2.canvas, h2 = t2.onDestroy;
              }
              e2.premultipliedAlpha === void 0 && (e2.premultipliedAlpha = true), f2 = function(e3, t3) {
                function r2(r3) {
                  try {
                    return e3.getContext(r3, t3);
                  } catch (e4) {
                    return null;
                  }
                }
                return r2("webgl") || r2("experimental-webgl") || r2("webgl-experimental");
              }(a2, e2);
            }
            return f2 ? { gl: f2, canvas: a2, container: i2, extensions: u2, optionalExtensions: s2, pixelRatio: c2, profile: l2, onDone: p2, onDestroy: h2 } : (h2(), p2("webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org"), null);
          }
          function a(e2, t2) {
            for (var r2 = Array(e2), n2 = 0; n2 < e2; ++n2)
              r2[n2] = t2(n2);
            return r2;
          }
          function f(e2) {
            var t2, r2;
            return t2 = (65535 < e2) << 4, t2 |= r2 = (255 < (e2 >>>= t2)) << 3, (t2 |= r2 = (15 < (e2 >>>= r2)) << 2) | (r2 = (3 < (e2 >>>= r2)) << 1) | e2 >>> r2 >> 1;
          }
          function o() {
            function e2(e3) {
              e: {
                for (var t3 = 16; 268435456 >= t3; t3 *= 16)
                  if (e3 <= t3) {
                    e3 = t3;
                    break e;
                  }
                e3 = 0;
              }
              return 0 < (t3 = r2[f(e3) >> 2]).length ? t3.pop() : new ArrayBuffer(e3);
            }
            function t2(e3) {
              r2[f(e3.byteLength) >> 2].push(e3);
            }
            var r2 = a(8, function() {
              return [];
            });
            return { alloc: e2, free: t2, allocType: function(t3, r3) {
              var n2 = null;
              switch (t3) {
                case 5120:
                  n2 = new Int8Array(e2(r3), 0, r3);
                  break;
                case 5121:
                  n2 = new Uint8Array(e2(r3), 0, r3);
                  break;
                case 5122:
                  n2 = new Int16Array(e2(2 * r3), 0, r3);
                  break;
                case 5123:
                  n2 = new Uint16Array(e2(2 * r3), 0, r3);
                  break;
                case 5124:
                  n2 = new Int32Array(e2(4 * r3), 0, r3);
                  break;
                case 5125:
                  n2 = new Uint32Array(e2(4 * r3), 0, r3);
                  break;
                case 5126:
                  n2 = new Float32Array(e2(4 * r3), 0, r3);
                  break;
                default:
                  return null;
              }
              return n2.length !== r3 ? n2.subarray(0, r3) : n2;
            }, freeType: function(e3) {
              t2(e3.buffer);
            } };
          }
          function u(e2) {
            return !!e2 && typeof e2 == "object" && Array.isArray(e2.shape) && Array.isArray(e2.stride) && typeof e2.offset == "number" && e2.shape.length === e2.stride.length && (Array.isArray(e2.data) || Y(e2.data));
          }
          function s(e2, t2, r2, n2, i2, a2) {
            for (var f2 = 0; f2 < t2; ++f2)
              for (var o2 = e2[f2], u2 = 0; u2 < r2; ++u2)
                for (var s2 = o2[u2], c2 = 0; c2 < n2; ++c2)
                  i2[a2++] = s2[c2];
          }
          function c(e2) {
            return 0 | K[Object.prototype.toString.call(e2)];
          }
          function l(e2, t2) {
            for (var r2 = 0; r2 < t2.length; ++r2)
              e2[r2] = t2[r2];
          }
          function p(e2, t2, r2, n2, i2, a2, f2) {
            for (var o2 = 0, u2 = 0; u2 < r2; ++u2)
              for (var s2 = 0; s2 < n2; ++s2)
                e2[o2++] = t2[i2 * u2 + a2 * s2 + f2];
          }
          function h(e2, t2, r2, n2) {
            function i2(t3) {
              this.id = s2++, this.buffer = e2.createBuffer(), this.type = t3, this.usage = 35044, this.byteLength = 0, this.dimension = 1, this.dtype = 5121, this.persistentData = null, r2.profile && (this.stats = { size: 0 });
            }
            function a2(t3, r3, n3) {
              t3.byteLength = r3.byteLength, e2.bufferData(t3.type, r3, n3);
            }
            function f2(e3, t3, r3, n3, i3, f3) {
              if (e3.usage = r3, Array.isArray(t3)) {
                if (e3.dtype = n3 || 5126, 0 < t3.length)
                  if (Array.isArray(t3[0])) {
                    i3 = te(t3);
                    for (var o3 = n3 = 1; o3 < i3.length; ++o3)
                      n3 *= i3[o3];
                    e3.dimension = n3, a2(e3, t3 = ee(t3, i3, e3.dtype), r3), f3 ? e3.persistentData = t3 : Q.freeType(t3);
                  } else
                    typeof t3[0] == "number" ? (e3.dimension = i3, l(i3 = Q.allocType(e3.dtype, t3.length), t3), a2(e3, i3, r3), f3 ? e3.persistentData = i3 : Q.freeType(i3)) : Y(t3[0]) && (e3.dimension = t3[0].length, e3.dtype = n3 || c(t3[0]) || 5126, a2(e3, t3 = ee(t3, [t3.length, t3[0].length], e3.dtype), r3), f3 ? e3.persistentData = t3 : Q.freeType(t3));
              } else if (Y(t3))
                e3.dtype = n3 || c(t3), e3.dimension = i3, a2(e3, t3, r3), f3 && (e3.persistentData = new Uint8Array(new Uint8Array(t3.buffer)));
              else if (u(t3)) {
                i3 = t3.shape;
                var s3 = t3.stride, h3 = (o3 = t3.offset, 0), d3 = 0, b2 = 0, m2 = 0;
                i3.length === 1 ? (h3 = i3[0], d3 = 1, b2 = s3[0], m2 = 0) : i3.length === 2 && (h3 = i3[0], d3 = i3[1], b2 = s3[0], m2 = s3[1]), e3.dtype = n3 || c(t3.data) || 5126, e3.dimension = d3, p(i3 = Q.allocType(e3.dtype, h3 * d3), t3.data, h3, d3, b2, m2, o3), a2(e3, i3, r3), f3 ? e3.persistentData = i3 : Q.freeType(i3);
              } else
                t3 instanceof ArrayBuffer && (e3.dtype = 5121, e3.dimension = i3, a2(e3, t3, r3), f3 && (e3.persistentData = new Uint8Array(new Uint8Array(t3))));
            }
            function o2(r3) {
              t2.bufferCount--, n2(r3), e2.deleteBuffer(r3.buffer), r3.buffer = null, delete h2[r3.id];
            }
            var s2 = 0, h2 = {};
            i2.prototype.bind = function() {
              e2.bindBuffer(this.type, this.buffer);
            }, i2.prototype.destroy = function() {
              o2(this);
            };
            var d2 = [];
            return r2.profile && (t2.getTotalBufferSize = function() {
              var e3 = 0;
              return Object.keys(h2).forEach(function(t3) {
                e3 += h2[t3].stats.size;
              }), e3;
            }), { create: function(n3, a3, s3, d3) {
              function b2(t3) {
                var n4 = 35044, i3 = null, a4 = 0, o3 = 0, s4 = 1;
                return Array.isArray(t3) || Y(t3) || u(t3) || t3 instanceof ArrayBuffer ? i3 = t3 : typeof t3 == "number" ? a4 = 0 | t3 : t3 && ("data" in t3 && (i3 = t3.data), "usage" in t3 && (n4 = $[t3.usage]), "type" in t3 && (o3 = Z[t3.type]), "dimension" in t3 && (s4 = 0 | t3.dimension), "length" in t3 && (a4 = 0 | t3.length)), m2.bind(), i3 ? f2(m2, i3, n4, o3, s4, d3) : (a4 && e2.bufferData(m2.type, a4, n4), m2.dtype = o3 || 5121, m2.usage = n4, m2.dimension = s4, m2.byteLength = a4), r2.profile && (m2.stats.size = m2.byteLength * re[m2.dtype]), b2;
              }
              t2.bufferCount++;
              var m2 = new i2(a3);
              return h2[m2.id] = m2, s3 || b2(n3), b2._reglType = "buffer", b2._buffer = m2, b2.subdata = function(t3, r3) {
                var n4, i3 = 0 | (r3 || 0);
                if (m2.bind(), Y(t3) || t3 instanceof ArrayBuffer)
                  e2.bufferSubData(m2.type, i3, t3);
                else if (Array.isArray(t3)) {
                  if (0 < t3.length)
                    if (typeof t3[0] == "number") {
                      var a4 = Q.allocType(m2.dtype, t3.length);
                      l(a4, t3), e2.bufferSubData(m2.type, i3, a4), Q.freeType(a4);
                    } else
                      (Array.isArray(t3[0]) || Y(t3[0])) && (n4 = te(t3), a4 = ee(t3, n4, m2.dtype), e2.bufferSubData(m2.type, i3, a4), Q.freeType(a4));
                } else if (u(t3)) {
                  n4 = t3.shape;
                  var f3 = t3.stride, o3 = a4 = 0, s4 = 0, h3 = 0;
                  n4.length === 1 ? (a4 = n4[0], o3 = 1, s4 = f3[0], h3 = 0) : n4.length === 2 && (a4 = n4[0], o3 = n4[1], s4 = f3[0], h3 = f3[1]), n4 = Array.isArray(t3.data) ? m2.dtype : c(t3.data), p(n4 = Q.allocType(n4, a4 * o3), t3.data, a4, o3, s4, h3, t3.offset), e2.bufferSubData(m2.type, i3, n4), Q.freeType(n4);
                }
                return b2;
              }, r2.profile && (b2.stats = m2.stats), b2.destroy = function() {
                o2(m2);
              }, b2;
            }, createStream: function(e3, t3) {
              var r3 = d2.pop();
              return r3 || (r3 = new i2(e3)), r3.bind(), f2(r3, t3, 35040, 0, 1, false), r3;
            }, destroyStream: function(e3) {
              d2.push(e3);
            }, clear: function() {
              X(h2).forEach(o2), d2.forEach(o2);
            }, getBuffer: function(e3) {
              return e3 && e3._buffer instanceof i2 ? e3._buffer : null;
            }, restore: function() {
              X(h2).forEach(function(t3) {
                t3.buffer = e2.createBuffer(), e2.bindBuffer(t3.type, t3.buffer), e2.bufferData(t3.type, t3.persistentData || t3.byteLength, t3.usage);
              });
            }, _initBuffer: f2 };
          }
          function d(e2, t2, r2, n2) {
            function i2(e3) {
              this.id = s2++, o2[this.id] = this, this.buffer = e3, this.primType = 4, this.type = this.vertCount = 0;
            }
            function a2(n3, i3, a3, f3, o3, s3, c3) {
              var l3;
              if (n3.buffer.bind(), i3 ? ((l3 = c3) || Y(i3) && (!u(i3) || Y(i3.data)) || (l3 = t2.oes_element_index_uint ? 5125 : 5123), r2._initBuffer(n3.buffer, i3, a3, l3, 3)) : (e2.bufferData(34963, s3, a3), n3.buffer.dtype = l3 || 5121, n3.buffer.usage = a3, n3.buffer.dimension = 3, n3.buffer.byteLength = s3), l3 = c3, !c3) {
                switch (n3.buffer.dtype) {
                  case 5121:
                  case 5120:
                    l3 = 5121;
                    break;
                  case 5123:
                  case 5122:
                    l3 = 5123;
                    break;
                  case 5125:
                  case 5124:
                    l3 = 5125;
                }
                n3.buffer.dtype = l3;
              }
              n3.type = l3, 0 > (i3 = o3) && (i3 = n3.buffer.byteLength, l3 === 5123 ? i3 >>= 1 : l3 === 5125 && (i3 >>= 2)), n3.vertCount = i3, i3 = f3, 0 > f3 && (i3 = 4, (f3 = n3.buffer.dimension) === 1 && (i3 = 0), f3 === 2 && (i3 = 1), f3 === 3 && (i3 = 4)), n3.primType = i3;
            }
            function f2(e3) {
              n2.elementsCount--, delete o2[e3.id], e3.buffer.destroy(), e3.buffer = null;
            }
            var o2 = {}, s2 = 0, c2 = { uint8: 5121, uint16: 5123 };
            t2.oes_element_index_uint && (c2.uint32 = 5125), i2.prototype.bind = function() {
              this.buffer.bind();
            };
            var l2 = [];
            return { create: function(e3, t3) {
              function o3(e4) {
                if (e4)
                  if (typeof e4 == "number")
                    s3(e4), l3.primType = 4, l3.vertCount = 0 | e4, l3.type = 5121;
                  else {
                    var t4 = null, r3 = 35044, n3 = -1, i3 = -1, f3 = 0, p2 = 0;
                    Array.isArray(e4) || Y(e4) || u(e4) ? t4 = e4 : ("data" in e4 && (t4 = e4.data), "usage" in e4 && (r3 = $[e4.usage]), "primitive" in e4 && (n3 = ne[e4.primitive]), "count" in e4 && (i3 = 0 | e4.count), "type" in e4 && (p2 = c2[e4.type]), "length" in e4 ? f3 = 0 | e4.length : (f3 = i3, p2 === 5123 || p2 === 5122 ? f3 *= 2 : p2 !== 5125 && p2 !== 5124 || (f3 *= 4))), a2(l3, t4, r3, n3, i3, f3, p2);
                  }
                else
                  s3(), l3.primType = 4, l3.vertCount = 0, l3.type = 5121;
                return o3;
              }
              var s3 = r2.create(null, 34963, true), l3 = new i2(s3._buffer);
              return n2.elementsCount++, o3(e3), o3._reglType = "elements", o3._elements = l3, o3.subdata = function(e4, t4) {
                return s3.subdata(e4, t4), o3;
              }, o3.destroy = function() {
                f2(l3);
              }, o3;
            }, createStream: function(e3) {
              var t3 = l2.pop();
              return t3 || (t3 = new i2(r2.create(null, 34963, true, false)._buffer)), a2(t3, e3, 35040, -1, -1, 0, 0), t3;
            }, destroyStream: function(e3) {
              l2.push(e3);
            }, getElements: function(e3) {
              return typeof e3 == "function" && e3._elements instanceof i2 ? e3._elements : null;
            }, clear: function() {
              X(o2).forEach(f2);
            } };
          }
          function b(e2) {
            for (var t2 = Q.allocType(5123, e2.length), r2 = 0; r2 < e2.length; ++r2)
              if (isNaN(e2[r2]))
                t2[r2] = 65535;
              else if (1 / 0 === e2[r2])
                t2[r2] = 31744;
              else if (-1 / 0 === e2[r2])
                t2[r2] = 64512;
              else {
                ie[0] = e2[r2];
                var n2 = (a2 = ae[0]) >>> 31 << 15, i2 = (a2 << 1 >>> 24) - 127, a2 = a2 >> 13 & 1023;
                t2[r2] = -24 > i2 ? n2 : -14 > i2 ? n2 + (a2 + 1024 >> -14 - i2) : 15 < i2 ? n2 + 31744 : n2 + (i2 + 15 << 10) + a2;
              }
            return t2;
          }
          function m(e2) {
            return Array.isArray(e2) || Y(e2);
          }
          function g(e2) {
            return "[object " + e2 + "]";
          }
          function y(e2) {
            return Array.isArray(e2) && (e2.length === 0 || typeof e2[0] == "number");
          }
          function v(e2) {
            return !(!Array.isArray(e2) || e2.length === 0 || !m(e2[0]));
          }
          function x(e2) {
            return Object.prototype.toString.call(e2);
          }
          function w(e2) {
            if (!e2)
              return false;
            var t2 = x(e2);
            return 0 <= be.indexOf(t2) || (y(e2) || v(e2) || u(e2));
          }
          function A(e2, t2) {
            e2.type === 36193 ? (e2.data = b(t2), Q.freeType(t2)) : e2.data = t2;
          }
          function k(e2, t2, r2, n2, i2, a2) {
            if (e2 = ge[e2] !== void 0 ? ge[e2] : ue[e2] * me[t2], a2 && (e2 *= 6), i2) {
              for (n2 = 0; 1 <= r2; )
                n2 += e2 * r2 * r2, r2 /= 2;
              return n2;
            }
            return e2 * r2 * n2;
          }
          function _(e2, t2, r2, n2, i2, a2, f2) {
            function o2() {
              this.format = this.internalformat = 6408, this.type = 5121, this.flipY = this.premultiplyAlpha = this.compressed = false, this.unpackAlignment = 1, this.colorSpace = 37444, this.channels = this.height = this.width = 0;
            }
            function s2(e3, t3) {
              e3.internalformat = t3.internalformat, e3.format = t3.format, e3.type = t3.type, e3.compressed = t3.compressed, e3.premultiplyAlpha = t3.premultiplyAlpha, e3.flipY = t3.flipY, e3.unpackAlignment = t3.unpackAlignment, e3.colorSpace = t3.colorSpace, e3.width = t3.width, e3.height = t3.height, e3.channels = t3.channels;
            }
            function c2(e3, t3) {
              if (typeof t3 == "object" && t3) {
                "premultiplyAlpha" in t3 && (e3.premultiplyAlpha = t3.premultiplyAlpha), "flipY" in t3 && (e3.flipY = t3.flipY), "alignment" in t3 && (e3.unpackAlignment = t3.alignment), "colorSpace" in t3 && (e3.colorSpace = U2[t3.colorSpace]), "type" in t3 && (e3.type = N2[t3.type]);
                var r3 = e3.width, n3 = e3.height, i3 = e3.channels, a3 = false;
                "shape" in t3 ? (r3 = t3.shape[0], n3 = t3.shape[1], t3.shape.length === 3 && (i3 = t3.shape[2], a3 = true)) : ("radius" in t3 && (r3 = n3 = t3.radius), "width" in t3 && (r3 = t3.width), "height" in t3 && (n3 = t3.height), "channels" in t3 && (i3 = t3.channels, a3 = true)), e3.width = 0 | r3, e3.height = 0 | n3, e3.channels = 0 | i3, r3 = false, "format" in t3 && (r3 = t3.format, n3 = e3.internalformat = q2[r3], e3.format = ae2[n3], r3 in N2 && !("type" in t3) && (e3.type = N2[r3]), r3 in G2 && (e3.compressed = true), r3 = true), !a3 && r3 ? e3.channels = ue[e3.format] : a3 && !r3 && e3.channels !== oe[e3.format] && (e3.format = e3.internalformat = oe[e3.channels]);
              }
            }
            function l2(t3) {
              e2.pixelStorei(37440, t3.flipY), e2.pixelStorei(37441, t3.premultiplyAlpha), e2.pixelStorei(37443, t3.colorSpace), e2.pixelStorei(3317, t3.unpackAlignment);
            }
            function p2() {
              o2.call(this), this.yOffset = this.xOffset = 0, this.data = null, this.needsFree = false, this.element = null, this.needsCopy = false;
            }
            function h2(e3, t3) {
              var r3 = null;
              if (w(t3) ? r3 = t3 : t3 && (c2(e3, t3), "x" in t3 && (e3.xOffset = 0 | t3.x), "y" in t3 && (e3.yOffset = 0 | t3.y), w(t3.data) && (r3 = t3.data)), t3.copy) {
                var n3 = i2.viewportWidth, a3 = i2.viewportHeight;
                e3.width = e3.width || n3 - e3.xOffset, e3.height = e3.height || a3 - e3.yOffset, e3.needsCopy = true;
              } else if (r3) {
                if (Y(r3))
                  e3.channels = e3.channels || 4, e3.data = r3, "type" in t3 || e3.type !== 5121 || (e3.type = 0 | K[Object.prototype.toString.call(r3)]);
                else if (y(r3)) {
                  switch (e3.channels = e3.channels || 4, a3 = (n3 = r3).length, e3.type) {
                    case 5121:
                    case 5123:
                    case 5125:
                    case 5126:
                      (a3 = Q.allocType(e3.type, a3)).set(n3), e3.data = a3;
                      break;
                    case 36193:
                      e3.data = b(n3);
                  }
                  e3.alignment = 1, e3.needsFree = true;
                } else if (u(r3)) {
                  n3 = r3.data, Array.isArray(n3) || e3.type !== 5121 || (e3.type = 0 | K[Object.prototype.toString.call(n3)]);
                  a3 = r3.shape;
                  var f3, o3, s3, l3, p3 = r3.stride;
                  a3.length === 3 ? (s3 = a3[2], l3 = p3[2]) : l3 = s3 = 1, f3 = a3[0], o3 = a3[1], a3 = p3[0], p3 = p3[1], e3.alignment = 1, e3.width = f3, e3.height = o3, e3.channels = s3, e3.format = e3.internalformat = oe[s3], e3.needsFree = true, f3 = l3, r3 = r3.offset, s3 = e3.width, l3 = e3.height, o3 = e3.channels;
                  for (var h3 = Q.allocType(e3.type === 36193 ? 5126 : e3.type, s3 * l3 * o3), d3 = 0, g3 = 0; g3 < l3; ++g3)
                    for (var k2 = 0; k2 < s3; ++k2)
                      for (var _3 = 0; _3 < o3; ++_3)
                        h3[d3++] = n3[a3 * k2 + p3 * g3 + f3 * _3 + r3];
                  A(e3, h3);
                } else if (x(r3) === se || x(r3) === ce || x(r3) === le)
                  x(r3) === se || x(r3) === ce ? e3.element = r3 : e3.element = r3.canvas, e3.width = e3.element.width, e3.height = e3.element.height, e3.channels = 4;
                else if (x(r3) === pe)
                  e3.element = r3, e3.width = r3.width, e3.height = r3.height, e3.channels = 4;
                else if (x(r3) === he)
                  e3.element = r3, e3.width = r3.naturalWidth, e3.height = r3.naturalHeight, e3.channels = 4;
                else if (x(r3) === de)
                  e3.element = r3, e3.width = r3.videoWidth, e3.height = r3.videoHeight, e3.channels = 4;
                else if (v(r3)) {
                  for (n3 = e3.width || r3[0].length, a3 = e3.height || r3.length, p3 = e3.channels, p3 = m(r3[0][0]) ? p3 || r3[0][0].length : p3 || 1, f3 = J.shape(r3), s3 = 1, l3 = 0; l3 < f3.length; ++l3)
                    s3 *= f3[l3];
                  s3 = Q.allocType(e3.type === 36193 ? 5126 : e3.type, s3), J.flatten(r3, f3, "", s3), A(e3, s3), e3.alignment = 1, e3.width = n3, e3.height = a3, e3.channels = p3, e3.format = e3.internalformat = oe[p3], e3.needsFree = true;
                }
              } else
                e3.width = e3.width || 1, e3.height = e3.height || 1, e3.channels = e3.channels || 4;
            }
            function d2(t3, r3, i3, a3, f3) {
              var o3 = t3.element, u2 = t3.data, s3 = t3.internalformat, c3 = t3.format, p3 = t3.type, h3 = t3.width, d3 = t3.height;
              l2(t3), o3 ? e2.texSubImage2D(r3, f3, i3, a3, c3, p3, o3) : t3.compressed ? e2.compressedTexSubImage2D(r3, f3, i3, a3, s3, h3, d3, u2) : t3.needsCopy ? (n2(), e2.copyTexSubImage2D(r3, f3, i3, a3, t3.xOffset, t3.yOffset, h3, d3)) : e2.texSubImage2D(r3, f3, i3, a3, h3, d3, c3, p3, u2);
            }
            function g2() {
              return be2.pop() || new p2();
            }
            function _2(e3) {
              e3.needsFree && Q.freeType(e3.data), p2.call(e3), be2.push(e3);
            }
            function O2() {
              o2.call(this), this.genMipmaps = false, this.mipmapHint = 4352, this.mipmask = 0, this.images = Array(16);
            }
            function E2(e3, t3, r3) {
              var n3 = e3.images[0] = g2();
              e3.mipmask = 1, n3.width = e3.width = t3, n3.height = e3.height = r3, n3.channels = e3.channels = 4;
            }
            function T2(e3, t3) {
              var r3 = null;
              if (w(t3))
                s2(r3 = e3.images[0] = g2(), e3), h2(r3, t3), e3.mipmask = 1;
              else if (c2(e3, t3), Array.isArray(t3.mipmap))
                for (var n3 = t3.mipmap, i3 = 0; i3 < n3.length; ++i3)
                  s2(r3 = e3.images[i3] = g2(), e3), r3.width >>= i3, r3.height >>= i3, h2(r3, n3[i3]), e3.mipmask |= 1 << i3;
              else
                s2(r3 = e3.images[0] = g2(), e3), h2(r3, t3), e3.mipmask = 1;
              s2(e3, e3.images[0]);
            }
            function D2(t3, r3) {
              for (var i3 = t3.images, a3 = 0; a3 < i3.length && i3[a3]; ++a3) {
                var f3 = i3[a3], o3 = r3, u2 = a3, s3 = f3.element, c3 = f3.data, p3 = f3.internalformat, h3 = f3.format, d3 = f3.type, b2 = f3.width, m2 = f3.height;
                l2(f3), s3 ? e2.texImage2D(o3, u2, h3, h3, d3, s3) : f3.compressed ? e2.compressedTexImage2D(o3, u2, p3, b2, m2, 0, c3) : f3.needsCopy ? (n2(), e2.copyTexImage2D(o3, u2, h3, f3.xOffset, f3.yOffset, b2, m2, 0)) : e2.texImage2D(o3, u2, h3, b2, m2, 0, h3, d3, c3 || null);
              }
            }
            function S2() {
              var e3 = me2.pop() || new O2();
              o2.call(e3);
              for (var t3 = e3.mipmask = 0; 16 > t3; ++t3)
                e3.images[t3] = null;
              return e3;
            }
            function j2(e3) {
              for (var t3 = e3.images, r3 = 0; r3 < t3.length; ++r3)
                t3[r3] && _2(t3[r3]), t3[r3] = null;
              me2.push(e3);
            }
            function C2() {
              this.magFilter = this.minFilter = 9728, this.wrapT = this.wrapS = 33071, this.anisotropic = 1, this.genMipmaps = false, this.mipmapHint = 4352;
            }
            function F2(e3, t3) {
              "min" in t3 && (e3.minFilter = W2[t3.min], 0 <= fe.indexOf(e3.minFilter) && !("faces" in t3) && (e3.genMipmaps = true)), "mag" in t3 && (e3.magFilter = R2[t3.mag]);
              var r3 = e3.wrapS, n3 = e3.wrapT;
              if ("wrap" in t3) {
                var i3 = t3.wrap;
                typeof i3 == "string" ? r3 = n3 = M2[i3] : Array.isArray(i3) && (r3 = M2[i3[0]], n3 = M2[i3[1]]);
              } else
                "wrapS" in t3 && (r3 = M2[t3.wrapS]), "wrapT" in t3 && (n3 = M2[t3.wrapT]);
              if (e3.wrapS = r3, e3.wrapT = n3, "anisotropic" in t3 && (e3.anisotropic = t3.anisotropic), "mipmap" in t3) {
                switch (r3 = false, typeof t3.mipmap) {
                  case "string":
                    e3.mipmapHint = L2[t3.mipmap], r3 = e3.genMipmaps = true;
                    break;
                  case "boolean":
                    r3 = e3.genMipmaps = t3.mipmap;
                    break;
                  case "object":
                    e3.genMipmaps = false, r3 = true;
                }
                !r3 || "min" in t3 || (e3.minFilter = 9984);
              }
            }
            function V2(r3, n3) {
              e2.texParameteri(n3, 10241, r3.minFilter), e2.texParameteri(n3, 10240, r3.magFilter), e2.texParameteri(n3, 10242, r3.wrapS), e2.texParameteri(n3, 10243, r3.wrapT), t2.ext_texture_filter_anisotropic && e2.texParameteri(n3, 34046, r3.anisotropic), r3.genMipmaps && (e2.hint(33170, r3.mipmapHint), e2.generateMipmap(n3));
            }
            function B2(t3) {
              o2.call(this), this.mipmask = 0, this.internalformat = 6408, this.id = ge2++, this.refCount = 1, this.target = t3, this.texture = e2.createTexture(), this.unit = -1, this.bindCount = 0, this.texInfo = new C2(), f2.profile && (this.stats = { size: 0 });
            }
            function z2(t3) {
              e2.activeTexture(33984), e2.bindTexture(t3.target, t3.texture);
            }
            function P2() {
              var t3 = xe2[0];
              t3 ? e2.bindTexture(t3.target, t3.texture) : e2.bindTexture(3553, null);
            }
            function I2(t3) {
              var r3 = t3.texture, n3 = t3.unit, i3 = t3.target;
              0 <= n3 && (e2.activeTexture(33984 + n3), e2.bindTexture(i3, null), xe2[n3] = null), e2.deleteTexture(r3), t3.texture = null, t3.params = null, t3.pixels = null, t3.refCount = 0, delete ye2[t3.id], a2.textureCount--;
            }
            var L2 = { "don't care": 4352, "dont care": 4352, nice: 4354, fast: 4353 }, M2 = { repeat: 10497, clamp: 33071, mirror: 33648 }, R2 = { nearest: 9728, linear: 9729 }, W2 = H({ mipmap: 9987, "nearest mipmap nearest": 9984, "linear mipmap nearest": 9985, "nearest mipmap linear": 9986, "linear mipmap linear": 9987 }, R2), U2 = { none: 0, browser: 37444 }, N2 = { uint8: 5121, rgba4: 32819, rgb565: 33635, "rgb5 a1": 32820 }, q2 = { alpha: 6406, luminance: 6409, "luminance alpha": 6410, rgb: 6407, rgba: 6408, rgba4: 32854, "rgb5 a1": 32855, rgb565: 36194 }, G2 = {};
            t2.ext_srgb && (q2.srgb = 35904, q2.srgba = 35906), t2.oes_texture_float && (N2.float32 = N2.float = 5126), t2.oes_texture_half_float && (N2.float16 = N2["half float"] = 36193), t2.webgl_depth_texture && (H(q2, { depth: 6402, "depth stencil": 34041 }), H(N2, { uint16: 5123, uint32: 5125, "depth stencil": 34042 })), t2.webgl_compressed_texture_s3tc && H(G2, { "rgb s3tc dxt1": 33776, "rgba s3tc dxt1": 33777, "rgba s3tc dxt3": 33778, "rgba s3tc dxt5": 33779 }), t2.webgl_compressed_texture_atc && H(G2, { "rgb atc": 35986, "rgba atc explicit alpha": 35987, "rgba atc interpolated alpha": 34798 }), t2.webgl_compressed_texture_pvrtc && H(G2, { "rgb pvrtc 4bppv1": 35840, "rgb pvrtc 2bppv1": 35841, "rgba pvrtc 4bppv1": 35842, "rgba pvrtc 2bppv1": 35843 }), t2.webgl_compressed_texture_etc1 && (G2["rgb etc1"] = 36196);
            var Z2 = Array.prototype.slice.call(e2.getParameter(34467));
            Object.keys(G2).forEach(function(e3) {
              var t3 = G2[e3];
              0 <= Z2.indexOf(t3) && (q2[e3] = t3);
            });
            var $2 = Object.keys(q2);
            r2.textureFormats = $2;
            var ee2 = [];
            Object.keys(q2).forEach(function(e3) {
              ee2[q2[e3]] = e3;
            });
            var te2 = [];
            Object.keys(N2).forEach(function(e3) {
              te2[N2[e3]] = e3;
            });
            var re2 = [];
            Object.keys(R2).forEach(function(e3) {
              re2[R2[e3]] = e3;
            });
            var ne2 = [];
            Object.keys(W2).forEach(function(e3) {
              ne2[W2[e3]] = e3;
            });
            var ie2 = [];
            Object.keys(M2).forEach(function(e3) {
              ie2[M2[e3]] = e3;
            });
            var ae2 = $2.reduce(function(e3, r3) {
              var n3 = q2[r3];
              return n3 === 6409 || n3 === 6406 || n3 === 6409 || n3 === 6410 || n3 === 6402 || n3 === 34041 || t2.ext_srgb && (n3 === 35904 || n3 === 35906) ? e3[n3] = n3 : n3 === 32855 || 0 <= r3.indexOf("rgba") ? e3[n3] = 6408 : e3[n3] = 6407, e3;
            }, {}), be2 = [], me2 = [], ge2 = 0, ye2 = {}, ve2 = r2.maxTextureUnits, xe2 = Array(ve2).map(function() {
              return null;
            });
            return H(B2.prototype, { bind: function() {
              this.bindCount += 1;
              var t3 = this.unit;
              if (0 > t3) {
                for (var r3 = 0; r3 < ve2; ++r3) {
                  var n3 = xe2[r3];
                  if (n3) {
                    if (0 < n3.bindCount)
                      continue;
                    n3.unit = -1;
                  }
                  xe2[r3] = this, t3 = r3;
                  break;
                }
                f2.profile && a2.maxTextureUnits < t3 + 1 && (a2.maxTextureUnits = t3 + 1), this.unit = t3, e2.activeTexture(33984 + t3), e2.bindTexture(this.target, this.texture);
              }
              return t3;
            }, unbind: function() {
              --this.bindCount;
            }, decRef: function() {
              0 >= --this.refCount && I2(this);
            } }), f2.profile && (a2.getTotalTextureSize = function() {
              var e3 = 0;
              return Object.keys(ye2).forEach(function(t3) {
                e3 += ye2[t3].stats.size;
              }), e3;
            }), { create2D: function(t3, r3) {
              function n3(e3, t4) {
                var r4 = i3.texInfo;
                C2.call(r4);
                var a3 = S2();
                return typeof e3 == "number" ? E2(a3, 0 | e3, typeof t4 == "number" ? 0 | t4 : 0 | e3) : e3 ? (F2(r4, e3), T2(a3, e3)) : E2(a3, 1, 1), r4.genMipmaps && (a3.mipmask = (a3.width << 1) - 1), i3.mipmask = a3.mipmask, s2(i3, a3), i3.internalformat = a3.internalformat, n3.width = a3.width, n3.height = a3.height, z2(i3), D2(a3, 3553), V2(r4, 3553), P2(), j2(a3), f2.profile && (i3.stats.size = k(i3.internalformat, i3.type, a3.width, a3.height, r4.genMipmaps, false)), n3.format = ee2[i3.internalformat], n3.type = te2[i3.type], n3.mag = re2[r4.magFilter], n3.min = ne2[r4.minFilter], n3.wrapS = ie2[r4.wrapS], n3.wrapT = ie2[r4.wrapT], n3;
              }
              var i3 = new B2(3553);
              return ye2[i3.id] = i3, a2.textureCount++, n3(t3, r3), n3.subimage = function(e3, t4, r4, a3) {
                t4 |= 0, r4 |= 0, a3 |= 0;
                var f3 = g2();
                return s2(f3, i3), f3.width = 0, f3.height = 0, h2(f3, e3), f3.width = f3.width || (i3.width >> a3) - t4, f3.height = f3.height || (i3.height >> a3) - r4, z2(i3), d2(f3, 3553, t4, r4, a3), P2(), _2(f3), n3;
              }, n3.resize = function(t4, r4) {
                var a3 = 0 | t4, o3 = 0 | r4 || a3;
                if (a3 === i3.width && o3 === i3.height)
                  return n3;
                n3.width = i3.width = a3, n3.height = i3.height = o3, z2(i3);
                for (var u2 = 0; i3.mipmask >> u2; ++u2) {
                  var s3 = a3 >> u2, c3 = o3 >> u2;
                  if (!s3 || !c3)
                    break;
                  e2.texImage2D(3553, u2, i3.format, s3, c3, 0, i3.format, i3.type, null);
                }
                return P2(), f2.profile && (i3.stats.size = k(i3.internalformat, i3.type, a3, o3, false, false)), n3;
              }, n3._reglType = "texture2d", n3._texture = i3, f2.profile && (n3.stats = i3.stats), n3.destroy = function() {
                i3.decRef();
              }, n3;
            }, createCube: function(t3, r3, n3, i3, o3, u2) {
              function l3(e3, t4, r4, n4, i4, a3) {
                var o4, u3 = p3.texInfo;
                for (C2.call(u3), o4 = 0; 6 > o4; ++o4)
                  b2[o4] = S2();
                if (typeof e3 != "number" && e3) {
                  if (typeof e3 == "object")
                    if (t4)
                      T2(b2[0], e3), T2(b2[1], t4), T2(b2[2], r4), T2(b2[3], n4), T2(b2[4], i4), T2(b2[5], a3);
                    else if (F2(u3, e3), c2(p3, e3), "faces" in e3)
                      for (e3 = e3.faces, o4 = 0; 6 > o4; ++o4)
                        s2(b2[o4], p3), T2(b2[o4], e3[o4]);
                    else
                      for (o4 = 0; 6 > o4; ++o4)
                        T2(b2[o4], e3);
                } else
                  for (e3 = 0 | e3 || 1, o4 = 0; 6 > o4; ++o4)
                    E2(b2[o4], e3, e3);
                for (s2(p3, b2[0]), p3.mipmask = u3.genMipmaps ? (b2[0].width << 1) - 1 : b2[0].mipmask, p3.internalformat = b2[0].internalformat, l3.width = b2[0].width, l3.height = b2[0].height, z2(p3), o4 = 0; 6 > o4; ++o4)
                  D2(b2[o4], 34069 + o4);
                for (V2(u3, 34067), P2(), f2.profile && (p3.stats.size = k(p3.internalformat, p3.type, l3.width, l3.height, u3.genMipmaps, true)), l3.format = ee2[p3.internalformat], l3.type = te2[p3.type], l3.mag = re2[u3.magFilter], l3.min = ne2[u3.minFilter], l3.wrapS = ie2[u3.wrapS], l3.wrapT = ie2[u3.wrapT], o4 = 0; 6 > o4; ++o4)
                  j2(b2[o4]);
                return l3;
              }
              var p3 = new B2(34067);
              ye2[p3.id] = p3, a2.cubeCount++;
              var b2 = Array(6);
              return l3(t3, r3, n3, i3, o3, u2), l3.subimage = function(e3, t4, r4, n4, i4) {
                r4 |= 0, n4 |= 0, i4 |= 0;
                var a3 = g2();
                return s2(a3, p3), a3.width = 0, a3.height = 0, h2(a3, t4), a3.width = a3.width || (p3.width >> i4) - r4, a3.height = a3.height || (p3.height >> i4) - n4, z2(p3), d2(a3, 34069 + e3, r4, n4, i4), P2(), _2(a3), l3;
              }, l3.resize = function(t4) {
                if ((t4 |= 0) !== p3.width) {
                  l3.width = p3.width = t4, l3.height = p3.height = t4, z2(p3);
                  for (var r4 = 0; 6 > r4; ++r4)
                    for (var n4 = 0; p3.mipmask >> n4; ++n4)
                      e2.texImage2D(34069 + r4, n4, p3.format, t4 >> n4, t4 >> n4, 0, p3.format, p3.type, null);
                  return P2(), f2.profile && (p3.stats.size = k(p3.internalformat, p3.type, l3.width, l3.height, false, true)), l3;
                }
              }, l3._reglType = "textureCube", l3._texture = p3, f2.profile && (l3.stats = p3.stats), l3.destroy = function() {
                p3.decRef();
              }, l3;
            }, clear: function() {
              for (var t3 = 0; t3 < ve2; ++t3)
                e2.activeTexture(33984 + t3), e2.bindTexture(3553, null), xe2[t3] = null;
              X(ye2).forEach(I2), a2.cubeCount = 0, a2.textureCount = 0;
            }, getTexture: function(e3) {
              return null;
            }, restore: function() {
              for (var t3 = 0; t3 < ve2; ++t3) {
                var r3 = xe2[t3];
                r3 && (r3.bindCount = 0, r3.unit = -1, xe2[t3] = null);
              }
              X(ye2).forEach(function(t4) {
                t4.texture = e2.createTexture(), e2.bindTexture(t4.target, t4.texture);
                for (var r4 = 0; 32 > r4; ++r4)
                  if ((t4.mipmask & 1 << r4) != 0)
                    if (t4.target === 3553)
                      e2.texImage2D(3553, r4, t4.internalformat, t4.width >> r4, t4.height >> r4, 0, t4.internalformat, t4.type, null);
                    else
                      for (var n3 = 0; 6 > n3; ++n3)
                        e2.texImage2D(34069 + n3, r4, t4.internalformat, t4.width >> r4, t4.height >> r4, 0, t4.internalformat, t4.type, null);
                V2(t4.texInfo, t4.target);
              });
            } };
          }
          function O(e2, t2, r2, n2, i2, a2) {
            function f2(e3, t3, r3) {
              this.target = e3, this.texture = t3, this.renderbuffer = r3;
              var n3 = e3 = 0;
              t3 ? (e3 = t3.width, n3 = t3.height) : r3 && (e3 = r3.width, n3 = r3.height), this.width = e3, this.height = n3;
            }
            function o2(e3) {
              e3 && (e3.texture && e3.texture._texture.decRef(), e3.renderbuffer && e3.renderbuffer._renderbuffer.decRef());
            }
            function u2(e3, t3, r3) {
              e3 && (e3.texture ? e3.texture._texture.refCount += 1 : e3.renderbuffer._renderbuffer.refCount += 1);
            }
            function s2(t3, r3) {
              r3 && (r3.texture ? e2.framebufferTexture2D(36160, t3, r3.target, r3.texture._texture.texture, 0) : e2.framebufferRenderbuffer(36160, t3, 36161, r3.renderbuffer._renderbuffer.renderbuffer));
            }
            function c2(e3) {
              var t3 = 3553, r3 = null, n3 = null, i3 = e3;
              return typeof e3 == "object" && (i3 = e3.data, "target" in e3 && (t3 = 0 | e3.target)), (e3 = i3._reglType) === "texture2d" ? r3 = i3 : e3 === "textureCube" ? r3 = i3 : e3 === "renderbuffer" && (n3 = i3, t3 = 36161), new f2(t3, r3, n3);
            }
            function l2(e3, t3, r3, a3, o3) {
              return r3 ? ((e3 = n2.create2D({ width: e3, height: t3, format: a3, type: o3 }))._texture.refCount = 0, new f2(3553, e3, null)) : ((e3 = i2.create({ width: e3, height: t3, format: a3 }))._renderbuffer.refCount = 0, new f2(36161, null, e3));
            }
            function p2(e3) {
              return e3 && (e3.texture || e3.renderbuffer);
            }
            function h2(e3, t3, r3) {
              e3 && (e3.texture ? e3.texture.resize(t3, r3) : e3.renderbuffer && e3.renderbuffer.resize(t3, r3), e3.width = t3, e3.height = r3);
            }
            function d2() {
              this.id = k2++, _2[this.id] = this, this.framebuffer = e2.createFramebuffer(), this.height = this.width = 0, this.colorAttachments = [], this.depthStencilAttachment = this.stencilAttachment = this.depthAttachment = null;
            }
            function b2(e3) {
              e3.colorAttachments.forEach(o2), o2(e3.depthAttachment), o2(e3.stencilAttachment), o2(e3.depthStencilAttachment);
            }
            function m2(t3) {
              e2.deleteFramebuffer(t3.framebuffer), t3.framebuffer = null, a2.framebufferCount--, delete _2[t3.id];
            }
            function g2(t3) {
              var n3;
              e2.bindFramebuffer(36160, t3.framebuffer);
              var i3 = t3.colorAttachments;
              for (n3 = 0; n3 < i3.length; ++n3)
                s2(36064 + n3, i3[n3]);
              for (n3 = i3.length; n3 < r2.maxColorAttachments; ++n3)
                e2.framebufferTexture2D(36160, 36064 + n3, 3553, null, 0);
              e2.framebufferTexture2D(36160, 33306, 3553, null, 0), e2.framebufferTexture2D(36160, 36096, 3553, null, 0), e2.framebufferTexture2D(36160, 36128, 3553, null, 0), s2(36096, t3.depthAttachment), s2(36128, t3.stencilAttachment), s2(33306, t3.depthStencilAttachment), e2.checkFramebufferStatus(36160), e2.isContextLost(), e2.bindFramebuffer(36160, v2.next ? v2.next.framebuffer : null), v2.cur = v2.next, e2.getError();
            }
            function y2(e3, t3) {
              function r3(e4, t4) {
                var i3, a3 = 0, f3 = 0, o3 = true, s3 = true;
                i3 = null;
                var h3 = true, d3 = "rgba", m3 = "uint8", y3 = 1, v3 = null, A3 = null, k3 = null, _3 = false;
                typeof e4 == "number" ? (a3 = 0 | e4, f3 = 0 | t4 || a3) : e4 ? ("shape" in e4 ? (a3 = (f3 = e4.shape)[0], f3 = f3[1]) : ("radius" in e4 && (a3 = f3 = e4.radius), "width" in e4 && (a3 = e4.width), "height" in e4 && (f3 = e4.height)), ("color" in e4 || "colors" in e4) && (i3 = e4.color || e4.colors, Array.isArray(i3)), i3 || ("colorCount" in e4 && (y3 = 0 | e4.colorCount), "colorTexture" in e4 && (h3 = !!e4.colorTexture, d3 = "rgba4"), "colorType" in e4 && (m3 = e4.colorType, !h3) && (m3 === "half float" || m3 === "float16" ? d3 = "rgba16f" : m3 !== "float" && m3 !== "float32" || (d3 = "rgba32f")), "colorFormat" in e4 && (d3 = e4.colorFormat, 0 <= x2.indexOf(d3) ? h3 = true : 0 <= w2.indexOf(d3) && (h3 = false))), ("depthTexture" in e4 || "depthStencilTexture" in e4) && (_3 = !(!e4.depthTexture && !e4.depthStencilTexture)), "depth" in e4 && (typeof e4.depth == "boolean" ? o3 = e4.depth : (v3 = e4.depth, s3 = false)), "stencil" in e4 && (typeof e4.stencil == "boolean" ? s3 = e4.stencil : (A3 = e4.stencil, o3 = false)), "depthStencil" in e4 && (typeof e4.depthStencil == "boolean" ? o3 = s3 = e4.depthStencil : (k3 = e4.depthStencil, s3 = o3 = false))) : a3 = f3 = 1;
                var O2 = null, E2 = null, T2 = null, D2 = null;
                if (Array.isArray(i3))
                  O2 = i3.map(c2);
                else if (i3)
                  O2 = [c2(i3)];
                else
                  for (O2 = Array(y3), i3 = 0; i3 < y3; ++i3)
                    O2[i3] = l2(a3, f3, h3, d3, m3);
                for (a3 = a3 || O2[0].width, f3 = f3 || O2[0].height, v3 ? E2 = c2(v3) : o3 && !s3 && (E2 = l2(a3, f3, _3, "depth", "uint32")), A3 ? T2 = c2(A3) : s3 && !o3 && (T2 = l2(a3, f3, false, "stencil", "uint8")), k3 ? D2 = c2(k3) : !v3 && !A3 && s3 && o3 && (D2 = l2(a3, f3, _3, "depth stencil", "depth stencil")), o3 = null, i3 = 0; i3 < O2.length; ++i3)
                  u2(O2[i3]), O2[i3] && O2[i3].texture && (s3 = xe[O2[i3].texture._texture.format] * we[O2[i3].texture._texture.type], o3 === null && (o3 = s3));
                return u2(E2), u2(T2), u2(D2), b2(n3), n3.width = a3, n3.height = f3, n3.colorAttachments = O2, n3.depthAttachment = E2, n3.stencilAttachment = T2, n3.depthStencilAttachment = D2, r3.color = O2.map(p2), r3.depth = p2(E2), r3.stencil = p2(T2), r3.depthStencil = p2(D2), r3.width = n3.width, r3.height = n3.height, g2(n3), r3;
              }
              var n3 = new d2();
              return a2.framebufferCount++, r3(e3, t3), H(r3, { resize: function(e4, t4) {
                var i3 = Math.max(0 | e4, 1), a3 = Math.max(0 | t4 || i3, 1);
                if (i3 === n3.width && a3 === n3.height)
                  return r3;
                for (var f3 = n3.colorAttachments, o3 = 0; o3 < f3.length; ++o3)
                  h2(f3[o3], i3, a3);
                return h2(n3.depthAttachment, i3, a3), h2(n3.stencilAttachment, i3, a3), h2(n3.depthStencilAttachment, i3, a3), n3.width = r3.width = i3, n3.height = r3.height = a3, g2(n3), r3;
              }, _reglType: "framebuffer", _framebuffer: n3, destroy: function() {
                m2(n3), b2(n3);
              }, use: function(e4) {
                v2.setFBO({ framebuffer: r3 }, e4);
              } });
            }
            var v2 = { cur: null, next: null, dirty: false, setFBO: null }, x2 = ["rgba"], w2 = ["rgba4", "rgb565", "rgb5 a1"];
            t2.ext_srgb && w2.push("srgba"), t2.ext_color_buffer_half_float && w2.push("rgba16f", "rgb16f"), t2.webgl_color_buffer_float && w2.push("rgba32f");
            var A2 = ["uint8"];
            t2.oes_texture_half_float && A2.push("half float", "float16"), t2.oes_texture_float && A2.push("float", "float32");
            var k2 = 0, _2 = {};
            return H(v2, { getFramebuffer: function(e3) {
              return typeof e3 == "function" && e3._reglType === "framebuffer" && (e3 = e3._framebuffer) instanceof d2 ? e3 : null;
            }, create: y2, createCube: function(e3) {
              function t3(e4) {
                var i3, a3 = { color: null }, f3 = 0, o3 = null;
                i3 = "rgba";
                var u3 = "uint8", s3 = 1;
                if (typeof e4 == "number" ? f3 = 0 | e4 : e4 ? ("shape" in e4 ? f3 = e4.shape[0] : ("radius" in e4 && (f3 = 0 | e4.radius), "width" in e4 ? f3 = 0 | e4.width : "height" in e4 && (f3 = 0 | e4.height)), ("color" in e4 || "colors" in e4) && (o3 = e4.color || e4.colors, Array.isArray(o3)), o3 || ("colorCount" in e4 && (s3 = 0 | e4.colorCount), "colorType" in e4 && (u3 = e4.colorType), "colorFormat" in e4 && (i3 = e4.colorFormat)), "depth" in e4 && (a3.depth = e4.depth), "stencil" in e4 && (a3.stencil = e4.stencil), "depthStencil" in e4 && (a3.depthStencil = e4.depthStencil)) : f3 = 1, o3)
                  if (Array.isArray(o3))
                    for (e4 = [], i3 = 0; i3 < o3.length; ++i3)
                      e4[i3] = o3[i3];
                  else
                    e4 = [o3];
                else
                  for (e4 = Array(s3), o3 = { radius: f3, format: i3, type: u3 }, i3 = 0; i3 < s3; ++i3)
                    e4[i3] = n2.createCube(o3);
                for (a3.color = Array(e4.length), i3 = 0; i3 < e4.length; ++i3)
                  s3 = e4[i3], f3 = f3 || s3.width, a3.color[i3] = { target: 34069, data: e4[i3] };
                for (i3 = 0; 6 > i3; ++i3) {
                  for (s3 = 0; s3 < e4.length; ++s3)
                    a3.color[s3].target = 34069 + i3;
                  0 < i3 && (a3.depth = r3[0].depth, a3.stencil = r3[0].stencil, a3.depthStencil = r3[0].depthStencil), r3[i3] ? r3[i3](a3) : r3[i3] = y2(a3);
                }
                return H(t3, { width: f3, height: f3, color: e4 });
              }
              var r3 = Array(6);
              return t3(e3), H(t3, { faces: r3, resize: function(e4) {
                var n3 = 0 | e4;
                if (n3 === t3.width)
                  return t3;
                var i3 = t3.color;
                for (e4 = 0; e4 < i3.length; ++e4)
                  i3[e4].resize(n3);
                for (e4 = 0; 6 > e4; ++e4)
                  r3[e4].resize(n3);
                return t3.width = t3.height = n3, t3;
              }, _reglType: "framebufferCube", destroy: function() {
                r3.forEach(function(e4) {
                  e4.destroy();
                });
              } });
            }, clear: function() {
              X(_2).forEach(m2);
            }, restore: function() {
              v2.cur = null, v2.next = null, v2.dirty = true, X(_2).forEach(function(t3) {
                t3.framebuffer = e2.createFramebuffer(), g2(t3);
              });
            } });
          }
          function E() {
            this.w = this.z = this.y = this.x = this.state = 0, this.buffer = null, this.size = 0, this.normalized = false, this.type = 5126, this.divisor = this.stride = this.offset = 0;
          }
          function T(e2, t2, r2, n2, i2) {
            function a2() {
              this.id = ++s2, this.attributes = [];
              var e3 = t2.oes_vertex_array_object;
              this.vao = e3 ? e3.createVertexArrayOES() : null, c2[this.id] = this, this.buffers = [];
            }
            var f2 = r2.maxAttributes, o2 = Array(f2);
            for (r2 = 0; r2 < f2; ++r2)
              o2[r2] = new E();
            var s2 = 0, c2 = {}, l2 = { Record: E, scope: {}, state: o2, currentVAO: null, targetVAO: null, restore: t2.oes_vertex_array_object ? function() {
              t2.oes_vertex_array_object && X(c2).forEach(function(e3) {
                e3.refresh();
              });
            } : function() {
            }, createVAO: function(e3) {
              function t3(e4) {
                for (var n3 = 0; n3 < r3.buffers.length; ++n3)
                  r3.buffers[n3].destroy();
                r3.buffers.length = 0, (n3 = r3.attributes).length = e4.length;
                for (var a3 = 0; a3 < e4.length; ++a3) {
                  var f3 = e4[a3], o3 = n3[a3] = new E();
                  Array.isArray(f3) || Y(f3) || u(f3) ? (f3 = i2.create(f3, 34962, false, true), o3.buffer = i2.getBuffer(f3), o3.size = 0 | o3.buffer.dimension, o3.normalized = false, o3.type = o3.buffer.dtype, o3.offset = 0, o3.stride = 0, o3.divisor = 0, o3.state = 1, r3.buffers.push(f3)) : i2.getBuffer(f3) ? (o3.buffer = i2.getBuffer(f3), o3.size = 0 | o3.buffer.dimension, o3.normalized = false, o3.type = o3.buffer.dtype, o3.offset = 0, o3.stride = 0, o3.divisor = 0, o3.state = 1) : i2.getBuffer(f3.buffer) ? (o3.buffer = i2.getBuffer(f3.buffer), o3.size = 0 | (+f3.size || o3.buffer.dimension), o3.normalized = !!f3.normalized || false, o3.type = "type" in f3 ? Z[f3.type] : o3.buffer.dtype, o3.offset = 0 | (f3.offset || 0), o3.stride = 0 | (f3.stride || 0), o3.divisor = 0 | (f3.divisor || 0), o3.state = 1) : "x" in f3 && (o3.x = +f3.x || 0, o3.y = +f3.y || 0, o3.z = +f3.z || 0, o3.w = +f3.w || 0, o3.state = 2);
                }
                return r3.refresh(), t3;
              }
              var r3 = new a2();
              return n2.vaoCount += 1, t3.destroy = function() {
                r3.destroy();
              }, t3._vao = r3, t3._reglType = "vao", t3(e3);
            }, getVAO: function(e3) {
              return typeof e3 == "function" && e3._vao ? e3._vao : null;
            }, destroyBuffer: function(t3) {
              for (var r3 = 0; r3 < o2.length; ++r3) {
                var n3 = o2[r3];
                n3.buffer === t3 && (e2.disableVertexAttribArray(r3), n3.buffer = null);
              }
            }, setVAO: t2.oes_vertex_array_object ? function(e3) {
              if (e3 !== l2.currentVAO) {
                var r3 = t2.oes_vertex_array_object;
                e3 ? r3.bindVertexArrayOES(e3.vao) : r3.bindVertexArrayOES(null), l2.currentVAO = e3;
              }
            } : function(r3) {
              if (r3 !== l2.currentVAO) {
                if (r3)
                  r3.bindAttrs();
                else
                  for (var n3 = t2.angle_instanced_arrays, i3 = 0; i3 < o2.length; ++i3) {
                    var a3 = o2[i3];
                    a3.buffer ? (e2.enableVertexAttribArray(i3), e2.vertexAttribPointer(i3, a3.size, a3.type, a3.normalized, a3.stride, a3.offfset), n3 && n3.vertexAttribDivisorANGLE(i3, a3.divisor)) : (e2.disableVertexAttribArray(i3), e2.vertexAttrib4f(i3, a3.x, a3.y, a3.z, a3.w));
                  }
                l2.currentVAO = r3;
              }
            }, clear: t2.oes_vertex_array_object ? function() {
              X(c2).forEach(function(e3) {
                e3.destroy();
              });
            } : function() {
            } };
            return a2.prototype.bindAttrs = function() {
              for (var r3 = t2.angle_instanced_arrays, n3 = this.attributes, i3 = 0; i3 < n3.length; ++i3) {
                var a3 = n3[i3];
                a3.buffer ? (e2.enableVertexAttribArray(i3), e2.bindBuffer(34962, a3.buffer.buffer), e2.vertexAttribPointer(i3, a3.size, a3.type, a3.normalized, a3.stride, a3.offset), r3 && r3.vertexAttribDivisorANGLE(i3, a3.divisor)) : (e2.disableVertexAttribArray(i3), e2.vertexAttrib4f(i3, a3.x, a3.y, a3.z, a3.w));
              }
              for (r3 = n3.length; r3 < f2; ++r3)
                e2.disableVertexAttribArray(r3);
            }, a2.prototype.refresh = function() {
              var e3 = t2.oes_vertex_array_object;
              e3 && (e3.bindVertexArrayOES(this.vao), this.bindAttrs(), l2.currentVAO = this);
            }, a2.prototype.destroy = function() {
              if (this.vao) {
                var e3 = t2.oes_vertex_array_object;
                this === l2.currentVAO && (l2.currentVAO = null, e3.bindVertexArrayOES(null)), e3.deleteVertexArrayOES(this.vao), this.vao = null;
              }
              c2[this.id] && (delete c2[this.id], --n2.vaoCount);
            }, l2;
          }
          function D(e2, t2, r2, n2) {
            function i2(e3, t3, r3, n3) {
              this.name = e3, this.id = t3, this.location = r3, this.info = n3;
            }
            function a2(e3, t3) {
              for (var r3 = 0; r3 < e3.length; ++r3)
                if (e3[r3].id === t3.id)
                  return void (e3[r3].location = t3.location);
              e3.push(t3);
            }
            function f2(r3, n3, i3) {
              if (!(f3 = (i3 = r3 === 35632 ? s2 : c2)[n3])) {
                var a3 = t2.str(n3), f3 = e2.createShader(r3);
                e2.shaderSource(f3, a3), e2.compileShader(f3), i3[n3] = f3;
              }
              return f3;
            }
            function o2(e3, t3) {
              this.id = h2++, this.fragId = e3, this.vertId = t3, this.program = null, this.uniforms = [], this.attributes = [], n2.profile && (this.stats = { uniformsCount: 0, attributesCount: 0 });
            }
            function u2(r3, o3, u3) {
              var s3;
              s3 = f2(35632, r3.fragId);
              var c3 = f2(35633, r3.vertId);
              if (o3 = r3.program = e2.createProgram(), e2.attachShader(o3, s3), e2.attachShader(o3, c3), u3)
                for (s3 = 0; s3 < u3.length; ++s3)
                  c3 = u3[s3], e2.bindAttribLocation(o3, c3[0], c3[1]);
              e2.linkProgram(o3), c3 = e2.getProgramParameter(o3, 35718), n2.profile && (r3.stats.uniformsCount = c3);
              var l3 = r3.uniforms;
              for (s3 = 0; s3 < c3; ++s3)
                if (u3 = e2.getActiveUniform(o3, s3))
                  if (1 < u3.size)
                    for (var p3 = 0; p3 < u3.size; ++p3) {
                      var h3 = u3.name.replace("[0]", "[" + p3 + "]");
                      a2(l3, new i2(h3, t2.id(h3), e2.getUniformLocation(o3, h3), u3));
                    }
                  else
                    a2(l3, new i2(u3.name, t2.id(u3.name), e2.getUniformLocation(o3, u3.name), u3));
              for (c3 = e2.getProgramParameter(o3, 35721), n2.profile && (r3.stats.attributesCount = c3), r3 = r3.attributes, s3 = 0; s3 < c3; ++s3)
                (u3 = e2.getActiveAttrib(o3, s3)) && a2(r3, new i2(u3.name, t2.id(u3.name), e2.getAttribLocation(o3, u3.name), u3));
            }
            var s2 = {}, c2 = {}, l2 = {}, p2 = [], h2 = 0;
            return n2.profile && (r2.getMaxUniformsCount = function() {
              var e3 = 0;
              return p2.forEach(function(t3) {
                t3.stats.uniformsCount > e3 && (e3 = t3.stats.uniformsCount);
              }), e3;
            }, r2.getMaxAttributesCount = function() {
              var e3 = 0;
              return p2.forEach(function(t3) {
                t3.stats.attributesCount > e3 && (e3 = t3.stats.attributesCount);
              }), e3;
            }), { clear: function() {
              var t3 = e2.deleteShader.bind(e2);
              X(s2).forEach(t3), s2 = {}, X(c2).forEach(t3), c2 = {}, p2.forEach(function(t4) {
                e2.deleteProgram(t4.program);
              }), p2.length = 0, l2 = {}, r2.shaderCount = 0;
            }, program: function(e3, t3, n3, i3) {
              var a3 = l2[t3];
              a3 || (a3 = l2[t3] = {});
              var f3 = a3[e3];
              return f3 && !i3 ? f3 : (t3 = new o2(t3, e3), r2.shaderCount++, u2(t3, n3, i3), f3 || (a3[e3] = t3), p2.push(t3), t3);
            }, restore: function() {
              s2 = {}, c2 = {};
              for (var e3 = 0; e3 < p2.length; ++e3)
                u2(p2[e3], null, p2[e3].attributes.map(function(e4) {
                  return [e4.location, e4.name];
                }));
            }, shader: f2, frag: -1, vert: -1 };
          }
          function S(e2, t2, r2, n2, i2, a2, f2) {
            function o2(i3) {
              var a3;
              a3 = t2.next === null ? 5121 : t2.next.colorAttachments[0].texture._texture.type;
              var f3 = 0, o3 = 0, u2 = n2.framebufferWidth, s2 = n2.framebufferHeight, c2 = null;
              return Y(i3) ? c2 = i3 : i3 && (f3 = 0 | i3.x, o3 = 0 | i3.y, u2 = 0 | (i3.width || n2.framebufferWidth - f3), s2 = 0 | (i3.height || n2.framebufferHeight - o3), c2 = i3.data || null), r2(), i3 = u2 * s2 * 4, c2 || (a3 === 5121 ? c2 = new Uint8Array(i3) : a3 === 5126 && (c2 = c2 || new Float32Array(i3))), e2.pixelStorei(3333, 4), e2.readPixels(f3, o3, u2, s2, 6408, a3, c2), c2;
            }
            return function(e3) {
              return e3 && "framebuffer" in e3 ? function(e4) {
                var r3;
                return t2.setFBO({ framebuffer: e4.framebuffer }, function() {
                  r3 = o2(e4);
                }), r3;
              }(e3) : o2(e3);
            };
          }
          function j(e2) {
            return Array.prototype.slice.call(e2);
          }
          function C(e2) {
            return j(e2).join("");
          }
          function F() {
            function e2() {
              var e3 = [], t3 = [];
              return H(function() {
                e3.push.apply(e3, j(arguments));
              }, { def: function() {
                var n3 = "v" + r2++;
                return t3.push(n3), 0 < arguments.length && (e3.push(n3, "="), e3.push.apply(e3, j(arguments)), e3.push(";")), n3;
              }, toString: function() {
                return C([0 < t3.length ? "var " + t3.join(",") + ";" : "", C(e3)]);
              } });
            }
            function t2() {
              function t3(e3, t4) {
                n3(e3, t4, "=", r3.def(e3, t4), ";");
              }
              var r3 = e2(), n3 = e2(), i3 = r3.toString, a3 = n3.toString;
              return H(function() {
                r3.apply(r3, j(arguments));
              }, { def: r3.def, entry: r3, exit: n3, save: t3, set: function(e3, n4, i4) {
                t3(e3, n4), r3(e3, n4, "=", i4, ";");
              }, toString: function() {
                return i3() + a3();
              } });
            }
            var r2 = 0, n2 = [], i2 = [], a2 = e2(), f2 = {};
            return { global: a2, link: function(e3) {
              for (var t3 = 0; t3 < i2.length; ++t3)
                if (i2[t3] === e3)
                  return n2[t3];
              return t3 = "g" + r2++, n2.push(t3), i2.push(e3), t3;
            }, block: e2, proc: function(e3, r3) {
              function n3() {
                var e4 = "a" + i3.length;
                return i3.push(e4), e4;
              }
              var i3 = [];
              r3 = r3 || 0;
              for (var a3 = 0; a3 < r3; ++a3)
                n3();
              var o2 = (a3 = t2()).toString;
              return f2[e3] = H(a3, { arg: n3, toString: function() {
                return C(["function(", i3.join(), "){", o2(), "}"]);
              } });
            }, scope: t2, cond: function() {
              var e3 = C(arguments), r3 = t2(), n3 = t2(), i3 = r3.toString, a3 = n3.toString;
              return H(r3, { then: function() {
                return r3.apply(r3, j(arguments)), this;
              }, else: function() {
                return n3.apply(n3, j(arguments)), this;
              }, toString: function() {
                var t3 = a3();
                return t3 && (t3 = "else{" + t3 + "}"), C(["if(", e3, "){", i3(), "}", t3]);
              } });
            }, compile: function() {
              var e3 = ['"use strict";', a2, "return {"];
              Object.keys(f2).forEach(function(t4) {
                e3.push('"', t4, '":', f2[t4].toString(), ",");
              }), e3.push("}");
              var t3 = C(e3).replace(/;/g, ";\n").replace(/}/g, "}\n").replace(/{/g, "{\n");
              return Function.apply(null, n2.concat(t3)).apply(null, i2);
            } };
          }
          function V(e2) {
            return Array.isArray(e2) || Y(e2) || u(e2);
          }
          function B(e2) {
            return e2.sort(function(e3, t2) {
              return e3 === "viewport" ? -1 : t2 === "viewport" ? 1 : e3 < t2 ? -1 : 1;
            });
          }
          function z(e2, t2, r2, n2) {
            this.thisDep = e2, this.contextDep = t2, this.propDep = r2, this.append = n2;
          }
          function P(e2) {
            return e2 && !(e2.thisDep || e2.contextDep || e2.propDep);
          }
          function I(e2) {
            return new z(false, false, false, e2);
          }
          function L(e2, t2) {
            var r2 = e2.type;
            return r2 === 0 ? new z(true, 1 <= (r2 = e2.data.length), 2 <= r2, t2) : r2 === 4 ? new z((r2 = e2.data).thisDep, r2.contextDep, r2.propDep, t2) : new z(r2 === 3, r2 === 2, r2 === 1, t2);
          }
          function M(e2, t2, r2, n2, i2, f2, o2, u2, s2, c2, l2, p2, h2, d2, b2) {
            function g2(e3) {
              return e3.replace(".", "_");
            }
            function y2(e3, t3, r3) {
              var n3 = g2(e3);
              re2.push(e3), te2[n3] = ee2[n3] = !!r3, ie2[n3] = t3;
            }
            function v2(e3, t3, r3) {
              var n3 = g2(e3);
              re2.push(e3), Array.isArray(r3) ? (ee2[n3] = r3.slice(), te2[n3] = r3.slice()) : ee2[n3] = te2[n3] = r3, ae2[n3] = t3;
            }
            function x2() {
              var e3 = F(), r3 = e3.link, n3 = e3.global;
              e3.id = ue2++, e3.batchId = "0";
              var i3 = r3(fe2), a2 = e3.shared = { props: "a0" };
              Object.keys(fe2).forEach(function(e4) {
                a2[e4] = n3.def(i3, ".", e4);
              });
              var f3 = e3.next = {}, o3 = e3.current = {};
              Object.keys(ae2).forEach(function(e4) {
                Array.isArray(ee2[e4]) && (f3[e4] = n3.def(a2.next, ".", e4), o3[e4] = n3.def(a2.current, ".", e4));
              });
              var u3 = e3.constants = {};
              Object.keys(oe2).forEach(function(e4) {
                u3[e4] = n3.def(JSON.stringify(oe2[e4]));
              }), e3.invoke = function(t3, n4) {
                switch (n4.type) {
                  case 0:
                    var i4 = ["this", a2.context, a2.props, e3.batchId];
                    return t3.def(r3(n4.data), ".call(", i4.slice(0, Math.max(n4.data.length + 1, 4)), ")");
                  case 1:
                    return t3.def(a2.props, n4.data);
                  case 2:
                    return t3.def(a2.context, n4.data);
                  case 3:
                    return t3.def("this", n4.data);
                  case 4:
                    return n4.data.append(e3, t3), n4.data.ref;
                }
              }, e3.attribCache = {};
              var s3 = {};
              return e3.scopeAttrib = function(e4) {
                if ((e4 = t2.id(e4)) in s3)
                  return s3[e4];
                var n4 = c2.scope[e4];
                return n4 || (n4 = c2.scope[e4] = new X2()), s3[e4] = r3(n4);
              }, e3;
            }
            function w2(e3, t3) {
              var r3 = e3.static, n3 = e3.dynamic;
              if ("framebuffer" in r3) {
                var i3 = r3.framebuffer;
                return i3 ? (i3 = u2.getFramebuffer(i3), I(function(e4, t4) {
                  var r4 = e4.link(i3), n4 = e4.shared;
                  return t4.set(n4.framebuffer, ".next", r4), n4 = n4.context, t4.set(n4, ".framebufferWidth", r4 + ".width"), t4.set(n4, ".framebufferHeight", r4 + ".height"), r4;
                })) : I(function(e4, t4) {
                  var r4 = e4.shared;
                  return t4.set(r4.framebuffer, ".next", "null"), r4 = r4.context, t4.set(r4, ".framebufferWidth", r4 + ".drawingBufferWidth"), t4.set(r4, ".framebufferHeight", r4 + ".drawingBufferHeight"), "null";
                });
              }
              if ("framebuffer" in n3) {
                var a2 = n3.framebuffer;
                return L(a2, function(e4, t4) {
                  var r4 = e4.invoke(t4, a2), n4 = e4.shared, i4 = n4.framebuffer;
                  r4 = t4.def(i4, ".getFramebuffer(", r4, ")");
                  return t4.set(i4, ".next", r4), n4 = n4.context, t4.set(n4, ".framebufferWidth", r4 + "?" + r4 + ".width:" + n4 + ".drawingBufferWidth"), t4.set(n4, ".framebufferHeight", r4 + "?" + r4 + ".height:" + n4 + ".drawingBufferHeight"), r4;
                });
              }
              return null;
            }
            function A2(e3, r3, n3) {
              function i3(e4) {
                if (e4 in a2) {
                  var r4 = t2.id(a2[e4]);
                  return (e4 = I(function() {
                    return r4;
                  })).id = r4, e4;
                }
                if (e4 in f3) {
                  var n4 = f3[e4];
                  return L(n4, function(e5, t3) {
                    var r5 = e5.invoke(t3, n4);
                    return t3.def(e5.shared.strings, ".id(", r5, ")");
                  });
                }
                return null;
              }
              var a2 = e3.static, f3 = e3.dynamic, o3 = i3("frag"), u3 = i3("vert"), s3 = null;
              return P(o3) && P(u3) ? (s3 = l2.program(u3.id, o3.id, null, n3), e3 = I(function(e4, t3) {
                return e4.link(s3);
              })) : e3 = new z(o3 && o3.thisDep || u3 && u3.thisDep, o3 && o3.contextDep || u3 && u3.contextDep, o3 && o3.propDep || u3 && u3.propDep, function(e4, t3) {
                var r4, n4, i4 = e4.shared.shader;
                return r4 = o3 ? o3.append(e4, t3) : t3.def(i4, ".", "frag"), n4 = u3 ? u3.append(e4, t3) : t3.def(i4, ".", "vert"), t3.def(i4 + ".program(" + n4 + "," + r4 + ")");
              }), { frag: o3, vert: u3, progVar: e3, program: s3 };
            }
            function k2(e3, t3) {
              function r3(e4, t4) {
                if (e4 in n3) {
                  var r4 = 0 | n3[e4];
                  return I(function(e5, n4) {
                    return t4 && (e5.OFFSET = r4), r4;
                  });
                }
                if (e4 in i3) {
                  var f3 = i3[e4];
                  return L(f3, function(e5, r5) {
                    var n4 = e5.invoke(r5, f3);
                    return t4 && (e5.OFFSET = n4), n4;
                  });
                }
                return t4 && a2 ? I(function(e5, t5) {
                  return e5.OFFSET = "0", 0;
                }) : null;
              }
              var n3 = e3.static, i3 = e3.dynamic, a2 = function() {
                if ("elements" in n3) {
                  var e4 = n3.elements;
                  V(e4) ? e4 = f2.getElements(f2.create(e4, true)) : e4 && (e4 = f2.getElements(e4));
                  var t4 = I(function(t5, r5) {
                    if (e4) {
                      var n4 = t5.link(e4);
                      return t5.ELEMENTS = n4;
                    }
                    return t5.ELEMENTS = null;
                  });
                  return t4.value = e4, t4;
                }
                if ("elements" in i3) {
                  var r4 = i3.elements;
                  return L(r4, function(e5, t5) {
                    var n4 = (i4 = e5.shared).isBufferArgs, i4 = i4.elements, a3 = e5.invoke(t5, r4), f3 = t5.def("null");
                    n4 = t5.def(n4, "(", a3, ")"), a3 = e5.cond(n4).then(f3, "=", i4, ".createStream(", a3, ");").else(f3, "=", i4, ".getElements(", a3, ");");
                    return t5.entry(a3), t5.exit(e5.cond(n4).then(i4, ".destroyStream(", f3, ");")), e5.ELEMENTS = f3;
                  });
                }
                return null;
              }(), o3 = r3("offset", true);
              return { elements: a2, primitive: function() {
                if ("primitive" in n3) {
                  var e4 = n3.primitive;
                  return I(function(t5, r4) {
                    return ne[e4];
                  });
                }
                if ("primitive" in i3) {
                  var t4 = i3.primitive;
                  return L(t4, function(e5, r4) {
                    var n4 = e5.constants.primTypes, i4 = e5.invoke(r4, t4);
                    return r4.def(n4, "[", i4, "]");
                  });
                }
                return a2 ? P(a2) ? a2.value ? I(function(e5, t5) {
                  return t5.def(e5.ELEMENTS, ".primType");
                }) : I(function() {
                  return 4;
                }) : new z(a2.thisDep, a2.contextDep, a2.propDep, function(e5, t5) {
                  var r4 = e5.ELEMENTS;
                  return t5.def(r4, "?", r4, ".primType:", 4);
                }) : null;
              }(), count: function() {
                if ("count" in n3) {
                  var e4 = 0 | n3.count;
                  return I(function() {
                    return e4;
                  });
                }
                if ("count" in i3) {
                  var t4 = i3.count;
                  return L(t4, function(e5, r4) {
                    return e5.invoke(r4, t4);
                  });
                }
                return a2 ? P(a2) ? a2 ? o3 ? new z(o3.thisDep, o3.contextDep, o3.propDep, function(e5, t5) {
                  return t5.def(e5.ELEMENTS, ".vertCount-", e5.OFFSET);
                }) : I(function(e5, t5) {
                  return t5.def(e5.ELEMENTS, ".vertCount");
                }) : I(function() {
                  return -1;
                }) : new z(a2.thisDep || o3.thisDep, a2.contextDep || o3.contextDep, a2.propDep || o3.propDep, function(e5, t5) {
                  var r4 = e5.ELEMENTS;
                  return e5.OFFSET ? t5.def(r4, "?", r4, ".vertCount-", e5.OFFSET, ":-1") : t5.def(r4, "?", r4, ".vertCount:-1");
                }) : null;
              }(), instances: r3("instances", false), offset: o3 };
            }
            function _2(e3, r3) {
              var n3 = e3.static, a2 = e3.dynamic, f3 = {};
              return Object.keys(n3).forEach(function(e4) {
                var r4 = n3[e4], a3 = t2.id(e4), o3 = new X2();
                if (V(r4))
                  o3.state = 1, o3.buffer = i2.getBuffer(i2.create(r4, 34962, false, true)), o3.type = 0;
                else if (s3 = i2.getBuffer(r4))
                  o3.state = 1, o3.buffer = s3, o3.type = 0;
                else if ("constant" in r4) {
                  var u3 = r4.constant;
                  o3.buffer = "null", o3.state = 2, typeof u3 == "number" ? o3.x = u3 : Ae.forEach(function(e5, t3) {
                    t3 < u3.length && (o3[e5] = u3[t3]);
                  });
                } else {
                  var s3 = V(r4.buffer) ? i2.getBuffer(i2.create(r4.buffer, 34962, false, true)) : i2.getBuffer(r4.buffer), c3 = 0 | r4.offset, l3 = 0 | r4.stride, p3 = 0 | r4.size, h3 = !!r4.normalized, d3 = 0;
                  "type" in r4 && (d3 = Z[r4.type]), r4 = 0 | r4.divisor, o3.buffer = s3, o3.state = 1, o3.size = p3, o3.normalized = h3, o3.type = d3 || s3.dtype, o3.offset = c3, o3.stride = l3, o3.divisor = r4;
                }
                f3[e4] = I(function(e5, t3) {
                  var r5 = e5.attribCache;
                  if (a3 in r5)
                    return r5[a3];
                  var n4 = { isStream: false };
                  return Object.keys(o3).forEach(function(e6) {
                    n4[e6] = o3[e6];
                  }), o3.buffer && (n4.buffer = e5.link(o3.buffer), n4.type = n4.type || n4.buffer + ".dtype"), r5[a3] = n4;
                });
              }), Object.keys(a2).forEach(function(e4) {
                var t3 = a2[e4];
                f3[e4] = L(t3, function(e5, r4) {
                  function n4(e6) {
                    r4(u3[e6], "=", i3, ".", e6, "|0;");
                  }
                  var i3 = e5.invoke(r4, t3), a3 = e5.shared, f4 = e5.constants, o3 = a3.isBufferArgs, u3 = (a3 = a3.buffer, { isStream: r4.def(false) }), s3 = new X2();
                  s3.state = 1, Object.keys(s3).forEach(function(e6) {
                    u3[e6] = r4.def("" + s3[e6]);
                  });
                  var c3 = u3.buffer, l3 = u3.type;
                  return r4("if(", o3, "(", i3, ")){", u3.isStream, "=true;", c3, "=", a3, ".createStream(", 34962, ",", i3, ");", l3, "=", c3, ".dtype;", "}else{", c3, "=", a3, ".getBuffer(", i3, ");", "if(", c3, "){", l3, "=", c3, ".dtype;", '}else if("constant" in ', i3, "){", u3.state, "=", 2, ";", "if(typeof " + i3 + '.constant === "number"){', u3[Ae[0]], "=", i3, ".constant;", Ae.slice(1).map(function(e6) {
                    return u3[e6];
                  }).join("="), "=0;", "}else{", Ae.map(function(e6, t4) {
                    return u3[e6] + "=" + i3 + ".constant.length>" + t4 + "?" + i3 + ".constant[" + t4 + "]:0;";
                  }).join(""), "}}else{", "if(", o3, "(", i3, ".buffer)){", c3, "=", a3, ".createStream(", 34962, ",", i3, ".buffer);", "}else{", c3, "=", a3, ".getBuffer(", i3, ".buffer);", "}", l3, '="type" in ', i3, "?", f4.glTypes, "[", i3, ".type]:", c3, ".dtype;", u3.normalized, "=!!", i3, ".normalized;"), n4("size"), n4("offset"), n4("stride"), n4("divisor"), r4("}}"), r4.exit("if(", u3.isStream, "){", a3, ".destroyStream(", c3, ");", "}"), u3;
                });
              }), f3;
            }
            function O2(e3, t3, n3, i3, f3) {
              function o3(e4) {
                var t4 = s3[e4];
                t4 && (p3[e4] = t4);
              }
              var u3 = function(e4, t4) {
                if (typeof (r3 = e4.static).frag == "string" && typeof r3.vert == "string") {
                  if (0 < Object.keys(t4.dynamic).length)
                    return null;
                  var r3 = t4.static, n4 = Object.keys(r3);
                  if (0 < n4.length && typeof r3[n4[0]] == "number") {
                    for (var i4 = [], a2 = 0; a2 < n4.length; ++a2)
                      i4.push([0 | r3[n4[a2]], n4[a2]]);
                    return i4;
                  }
                }
                return null;
              }(e3, t3), s3 = function(e4, t4, r3) {
                function n4(e5) {
                  if (e5 in i4) {
                    var r4 = i4[e5];
                    e5 = true;
                    var n5, f5, o4 = 0 | r4.x, u4 = 0 | r4.y;
                    return "width" in r4 ? n5 = 0 | r4.width : e5 = false, "height" in r4 ? f5 = 0 | r4.height : e5 = false, new z(!e5 && t4 && t4.thisDep, !e5 && t4 && t4.contextDep, !e5 && t4 && t4.propDep, function(e6, t5) {
                      var i5 = e6.shared.context, a3 = n5;
                      "width" in r4 || (a3 = t5.def(i5, ".", "framebufferWidth", "-", o4));
                      var s5 = f5;
                      return "height" in r4 || (s5 = t5.def(i5, ".", "framebufferHeight", "-", u4)), [o4, u4, a3, s5];
                    });
                  }
                  if (e5 in a2) {
                    var s4 = a2[e5];
                    return e5 = L(s4, function(e6, t5) {
                      var r5 = e6.invoke(t5, s4), n6 = e6.shared.context, i5 = t5.def(r5, ".x|0"), a3 = t5.def(r5, ".y|0");
                      return [i5, a3, t5.def('"width" in ', r5, "?", r5, ".width|0:", "(", n6, ".", "framebufferWidth", "-", i5, ")"), r5 = t5.def('"height" in ', r5, "?", r5, ".height|0:", "(", n6, ".", "framebufferHeight", "-", a3, ")")];
                    }), t4 && (e5.thisDep = e5.thisDep || t4.thisDep, e5.contextDep = e5.contextDep || t4.contextDep, e5.propDep = e5.propDep || t4.propDep), e5;
                  }
                  return t4 ? new z(t4.thisDep, t4.contextDep, t4.propDep, function(e6, t5) {
                    var r5 = e6.shared.context;
                    return [0, 0, t5.def(r5, ".", "framebufferWidth"), t5.def(r5, ".", "framebufferHeight")];
                  }) : null;
                }
                var i4 = e4.static, a2 = e4.dynamic;
                if (e4 = n4("viewport")) {
                  var f4 = e4;
                  e4 = new z(e4.thisDep, e4.contextDep, e4.propDep, function(e5, t5) {
                    var r4 = f4.append(e5, t5), n5 = e5.shared.context;
                    return t5.set(n5, ".viewportWidth", r4[2]), t5.set(n5, ".viewportHeight", r4[3]), r4;
                  });
                }
                return { viewport: e4, scissor_box: n4("scissor.box") };
              }(e3, d3 = w2(e3)), l3 = k2(e3), p3 = function(e4, t4) {
                var r3 = e4.static, n4 = e4.dynamic, i4 = {};
                return re2.forEach(function(e5) {
                  function t5(t6, a2) {
                    if (e5 in r3) {
                      var o4 = t6(r3[e5]);
                      i4[f4] = I(function() {
                        return o4;
                      });
                    } else if (e5 in n4) {
                      var u4 = n4[e5];
                      i4[f4] = L(u4, function(e6, t7) {
                        return a2(e6, t7, e6.invoke(t7, u4));
                      });
                    }
                  }
                  var f4 = g2(e5);
                  switch (e5) {
                    case "cull.enable":
                    case "blend.enable":
                    case "dither":
                    case "stencil.enable":
                    case "depth.enable":
                    case "scissor.enable":
                    case "polygonOffset.enable":
                    case "sample.alpha":
                    case "sample.enable":
                    case "depth.mask":
                      return t5(function(e6) {
                        return e6;
                      }, function(e6, t6, r4) {
                        return r4;
                      });
                    case "depth.func":
                      return t5(function(e6) {
                        return Oe[e6];
                      }, function(e6, t6, r4) {
                        return t6.def(e6.constants.compareFuncs, "[", r4, "]");
                      });
                    case "depth.range":
                      return t5(function(e6) {
                        return e6;
                      }, function(e6, t6, r4) {
                        return [t6.def("+", r4, "[0]"), t6 = t6.def("+", r4, "[1]")];
                      });
                    case "blend.func":
                      return t5(function(e6) {
                        return [_e["srcRGB" in e6 ? e6.srcRGB : e6.src], _e["dstRGB" in e6 ? e6.dstRGB : e6.dst], _e["srcAlpha" in e6 ? e6.srcAlpha : e6.src], _e["dstAlpha" in e6 ? e6.dstAlpha : e6.dst]];
                      }, function(e6, t6, r4) {
                        function n5(e7, n6) {
                          return t6.def('"', e7, n6, '" in ', r4, "?", r4, ".", e7, n6, ":", r4, ".", e7);
                        }
                        e6 = e6.constants.blendFuncs;
                        var i5 = n5("src", "RGB"), a2 = n5("dst", "RGB"), f5 = (i5 = t6.def(e6, "[", i5, "]"), t6.def(e6, "[", n5("src", "Alpha"), "]"));
                        return [i5, a2 = t6.def(e6, "[", a2, "]"), f5, e6 = t6.def(e6, "[", n5("dst", "Alpha"), "]")];
                      });
                    case "blend.equation":
                      return t5(function(e6) {
                        return typeof e6 == "string" ? [J2[e6], J2[e6]] : typeof e6 == "object" ? [J2[e6.rgb], J2[e6.alpha]] : void 0;
                      }, function(e6, t6, r4) {
                        var n5 = e6.constants.blendEquations, i5 = t6.def(), a2 = t6.def();
                        return (e6 = e6.cond("typeof ", r4, '==="string"')).then(i5, "=", a2, "=", n5, "[", r4, "];"), e6.else(i5, "=", n5, "[", r4, ".rgb];", a2, "=", n5, "[", r4, ".alpha];"), t6(e6), [i5, a2];
                      });
                    case "blend.color":
                      return t5(function(e6) {
                        return a(4, function(t6) {
                          return +e6[t6];
                        });
                      }, function(e6, t6, r4) {
                        return a(4, function(e7) {
                          return t6.def("+", r4, "[", e7, "]");
                        });
                      });
                    case "stencil.mask":
                      return t5(function(e6) {
                        return 0 | e6;
                      }, function(e6, t6, r4) {
                        return t6.def(r4, "|0");
                      });
                    case "stencil.func":
                      return t5(function(e6) {
                        return [Oe[e6.cmp || "keep"], e6.ref || 0, "mask" in e6 ? e6.mask : -1];
                      }, function(e6, t6, r4) {
                        return [e6 = t6.def('"cmp" in ', r4, "?", e6.constants.compareFuncs, "[", r4, ".cmp]", ":", 7680), t6.def(r4, ".ref|0"), t6 = t6.def('"mask" in ', r4, "?", r4, ".mask|0:-1")];
                      });
                    case "stencil.opFront":
                    case "stencil.opBack":
                      return t5(function(t6) {
                        return [e5 === "stencil.opBack" ? 1029 : 1028, Ee[t6.fail || "keep"], Ee[t6.zfail || "keep"], Ee[t6.zpass || "keep"]];
                      }, function(t6, r4, n5) {
                        function i5(e6) {
                          return r4.def('"', e6, '" in ', n5, "?", a2, "[", n5, ".", e6, "]:", 7680);
                        }
                        var a2 = t6.constants.stencilOps;
                        return [e5 === "stencil.opBack" ? 1029 : 1028, i5("fail"), i5("zfail"), i5("zpass")];
                      });
                    case "polygonOffset.offset":
                      return t5(function(e6) {
                        return [0 | e6.factor, 0 | e6.units];
                      }, function(e6, t6, r4) {
                        return [t6.def(r4, ".factor|0"), t6 = t6.def(r4, ".units|0")];
                      });
                    case "cull.face":
                      return t5(function(e6) {
                        var t6 = 0;
                        return e6 === "front" ? t6 = 1028 : e6 === "back" && (t6 = 1029), t6;
                      }, function(e6, t6, r4) {
                        return t6.def(r4, '==="front"?', 1028, ":", 1029);
                      });
                    case "lineWidth":
                      return t5(function(e6) {
                        return e6;
                      }, function(e6, t6, r4) {
                        return r4;
                      });
                    case "frontFace":
                      return t5(function(e6) {
                        return Te[e6];
                      }, function(e6, t6, r4) {
                        return t6.def(r4 + '==="cw"?2304:2305');
                      });
                    case "colorMask":
                      return t5(function(e6) {
                        return e6.map(function(e7) {
                          return !!e7;
                        });
                      }, function(e6, t6, r4) {
                        return a(4, function(e7) {
                          return "!!" + r4 + "[" + e7 + "]";
                        });
                      });
                    case "sample.coverage":
                      return t5(function(e6) {
                        return ["value" in e6 ? e6.value : 1, !!e6.invert];
                      }, function(e6, t6, r4) {
                        return [t6.def('"value" in ', r4, "?+", r4, ".value:1"), t6 = t6.def("!!", r4, ".invert")];
                      });
                  }
                }), i4;
              }(e3), h3 = A2(e3, 0, u3);
              o3("viewport"), o3(g2("scissor.box"));
              var d3, b3 = 0 < Object.keys(p3).length;
              if ((d3 = { framebuffer: d3, draw: l3, shader: h3, state: p3, dirty: b3, scopeVAO: null, drawVAO: null, useVAO: false, attributes: {} }).profile = function(e4) {
                var t4, r3 = e4.static;
                if (e4 = e4.dynamic, "profile" in r3) {
                  var n4 = !!r3.profile;
                  (t4 = I(function(e5, t5) {
                    return n4;
                  })).enable = n4;
                } else if ("profile" in e4) {
                  var i4 = e4.profile;
                  t4 = L(i4, function(e5, t5) {
                    return e5.invoke(t5, i4);
                  });
                }
                return t4;
              }(e3), d3.uniforms = function(e4, t4) {
                var r3 = e4.static, n4 = e4.dynamic, i4 = {};
                return Object.keys(r3).forEach(function(e5) {
                  var t5, n5 = r3[e5];
                  if (typeof n5 == "number" || typeof n5 == "boolean")
                    t5 = I(function() {
                      return n5;
                    });
                  else if (typeof n5 == "function") {
                    var f4 = n5._reglType;
                    f4 === "texture2d" || f4 === "textureCube" ? t5 = I(function(e6) {
                      return e6.link(n5);
                    }) : f4 !== "framebuffer" && f4 !== "framebufferCube" || (t5 = I(function(e6) {
                      return e6.link(n5.color[0]);
                    }));
                  } else
                    m(n5) && (t5 = I(function(e6) {
                      return e6.global.def("[", a(n5.length, function(e7) {
                        return n5[e7];
                      }), "]");
                    }));
                  t5.value = n5, i4[e5] = t5;
                }), Object.keys(n4).forEach(function(e5) {
                  var t5 = n4[e5];
                  i4[e5] = L(t5, function(e6, r4) {
                    return e6.invoke(r4, t5);
                  });
                }), i4;
              }(n3), d3.drawVAO = d3.scopeVAO = function(e4, t4) {
                var r3 = e4.static, n4 = e4.dynamic;
                if ("vao" in r3) {
                  var i4 = r3.vao;
                  return i4 !== null && c2.getVAO(i4) === null && (i4 = c2.createVAO(i4)), I(function(e5) {
                    return e5.link(c2.getVAO(i4));
                  });
                }
                if ("vao" in n4) {
                  var a2 = n4.vao;
                  return L(a2, function(e5, t5) {
                    var r4 = e5.invoke(t5, a2);
                    return t5.def(e5.shared.vao + ".getVAO(" + r4 + ")");
                  });
                }
                return null;
              }(e3), !d3.drawVAO && h3.program && !u3 && r2.angle_instanced_arrays) {
                var y3 = true;
                if (e3 = h3.program.attributes.map(function(e4) {
                  return e4 = t3.static[e4], y3 = y3 && !!e4, e4;
                }), y3 && 0 < e3.length) {
                  var v3 = c2.getVAO(c2.createVAO(e3));
                  d3.drawVAO = new z(null, null, null, function(e4, t4) {
                    return e4.link(v3);
                  }), d3.useVAO = true;
                }
              }
              return u3 ? d3.useVAO = true : d3.attributes = _2(t3), d3.context = function(e4) {
                var t4 = e4.static, r3 = e4.dynamic, n4 = {};
                return Object.keys(t4).forEach(function(e5) {
                  var r4 = t4[e5];
                  n4[e5] = I(function(e6, t5) {
                    return typeof r4 == "number" || typeof r4 == "boolean" ? "" + r4 : e6.link(r4);
                  });
                }), Object.keys(r3).forEach(function(e5) {
                  var t5 = r3[e5];
                  n4[e5] = L(t5, function(e6, r4) {
                    return e6.invoke(r4, t5);
                  });
                }), n4;
              }(i3), d3;
            }
            function E2(e3, t3, r3) {
              var n3 = e3.shared.context, i3 = e3.scope();
              Object.keys(r3).forEach(function(a2) {
                t3.save(n3, "." + a2), i3(n3, ".", a2, "=", r3[a2].append(e3, t3), ";");
              }), t3(i3);
            }
            function T2(e3, t3, r3, n3) {
              var i3, a2 = (o3 = e3.shared).gl, f3 = o3.framebuffer;
              $2 && (i3 = t3.def(o3.extensions, ".webgl_draw_buffers"));
              var o3 = (u3 = e3.constants).drawBuffer, u3 = u3.backBuffer;
              e3 = r3 ? r3.append(e3, t3) : t3.def(f3, ".next"), n3 || t3("if(", e3, "!==", f3, ".cur){"), t3("if(", e3, "){", a2, ".bindFramebuffer(", 36160, ",", e3, ".framebuffer);"), $2 && t3(i3, ".drawBuffersWEBGL(", o3, "[", e3, ".colorAttachments.length]);"), t3("}else{", a2, ".bindFramebuffer(", 36160, ",null);"), $2 && t3(i3, ".drawBuffersWEBGL(", u3, ");"), t3("}", f3, ".cur=", e3, ";"), n3 || t3("}");
            }
            function D2(e3, t3, r3) {
              var n3 = e3.shared, i3 = n3.gl, f3 = e3.current, o3 = e3.next, u3 = n3.current, s3 = n3.next, c3 = e3.cond(u3, ".dirty");
              re2.forEach(function(t4) {
                var n4, l3;
                if (!((t4 = g2(t4)) in r3.state))
                  if (t4 in o3) {
                    n4 = o3[t4], l3 = f3[t4];
                    var p3 = a(ee2[t4].length, function(e4) {
                      return c3.def(n4, "[", e4, "]");
                    });
                    c3(e3.cond(p3.map(function(e4, t5) {
                      return e4 + "!==" + l3 + "[" + t5 + "]";
                    }).join("||")).then(i3, ".", ae2[t4], "(", p3, ");", p3.map(function(e4, t5) {
                      return l3 + "[" + t5 + "]=" + e4;
                    }).join(";"), ";"));
                  } else
                    n4 = c3.def(s3, ".", t4), p3 = e3.cond(n4, "!==", u3, ".", t4), c3(p3), t4 in ie2 ? p3(e3.cond(n4).then(i3, ".enable(", ie2[t4], ");").else(i3, ".disable(", ie2[t4], ");"), u3, ".", t4, "=", n4, ";") : p3(i3, ".", ae2[t4], "(", n4, ");", u3, ".", t4, "=", n4, ";");
              }), Object.keys(r3.state).length === 0 && c3(u3, ".dirty=false;"), t3(c3);
            }
            function S2(e3, t3, r3, n3) {
              var i3 = e3.shared, a2 = e3.current, f3 = i3.current, o3 = i3.gl;
              B(Object.keys(r3)).forEach(function(i4) {
                var u3 = r3[i4];
                if (!n3 || n3(u3)) {
                  var s3 = u3.append(e3, t3);
                  if (ie2[i4]) {
                    var c3 = ie2[i4];
                    P(u3) ? t3(o3, s3 ? ".enable(" : ".disable(", c3, ");") : t3(e3.cond(s3).then(o3, ".enable(", c3, ");").else(o3, ".disable(", c3, ");")), t3(f3, ".", i4, "=", s3, ";");
                  } else if (m(s3)) {
                    var l3 = a2[i4];
                    t3(o3, ".", ae2[i4], "(", s3, ");", s3.map(function(e4, t4) {
                      return l3 + "[" + t4 + "]=" + e4;
                    }).join(";"), ";");
                  } else
                    t3(o3, ".", ae2[i4], "(", s3, ");", f3, ".", i4, "=", s3, ";");
                }
              });
            }
            function j2(e3, t3) {
              K2 && (e3.instancing = t3.def(e3.shared.extensions, ".angle_instanced_arrays"));
            }
            function C2(e3, t3, r3, n3, i3) {
              function a2() {
                return typeof performance == "undefined" ? "Date.now()" : "performance.now()";
              }
              function f3(e4) {
                e4(s3 = t3.def(), "=", a2(), ";"), typeof i3 == "string" ? e4(p3, ".count+=", i3, ";") : e4(p3, ".count++;"), d2 && (n3 ? e4(c3 = t3.def(), "=", b3, ".getNumPendingQueries();") : e4(b3, ".beginQuery(", p3, ");"));
              }
              function o3(e4) {
                e4(p3, ".cpuTime+=", a2(), "-", s3, ";"), d2 && (n3 ? e4(b3, ".pushScopeStats(", c3, ",", b3, ".getNumPendingQueries(),", p3, ");") : e4(b3, ".endQuery();"));
              }
              function u3(e4) {
                var r4 = t3.def(h3, ".profile");
                t3(h3, ".profile=", e4, ";"), t3.exit(h3, ".profile=", r4, ";");
              }
              var s3, c3, l3 = e3.shared, p3 = e3.stats, h3 = l3.current, b3 = l3.timer;
              if (r3 = r3.profile) {
                if (P(r3))
                  return void (r3.enable ? (f3(t3), o3(t3.exit), u3("true")) : u3("false"));
                u3(r3 = r3.append(e3, t3));
              } else
                r3 = t3.def(h3, ".profile");
              f3(l3 = e3.block()), t3("if(", r3, "){", l3, "}"), o3(e3 = e3.block()), t3.exit("if(", r3, "){", e3, "}");
            }
            function M2(e3, t3, r3, n3, i3) {
              function a2(r4, n4, i4) {
                function a3() {
                  t3("if(!", c3, ".buffer){", u3, ".enableVertexAttribArray(", s3, ");}");
                  var r5, a4 = i4.type;
                  r5 = i4.size ? t3.def(i4.size, "||", n4) : n4, t3("if(", c3, ".type!==", a4, "||", c3, ".size!==", r5, "||", h3.map(function(e4) {
                    return c3 + "." + e4 + "!==" + i4[e4];
                  }).join("||"), "){", u3, ".bindBuffer(", 34962, ",", l3, ".buffer);", u3, ".vertexAttribPointer(", [s3, r5, a4, i4.normalized, i4.stride, i4.offset], ");", c3, ".type=", a4, ";", c3, ".size=", r5, ";", h3.map(function(e4) {
                    return c3 + "." + e4 + "=" + i4[e4] + ";";
                  }).join(""), "}"), K2 && (a4 = i4.divisor, t3("if(", c3, ".divisor!==", a4, "){", e3.instancing, ".vertexAttribDivisorANGLE(", [s3, a4], ");", c3, ".divisor=", a4, ";}"));
                }
                function o3() {
                  t3("if(", c3, ".buffer){", u3, ".disableVertexAttribArray(", s3, ");", c3, ".buffer=null;", "}if(", Ae.map(function(e4, t4) {
                    return c3 + "." + e4 + "!==" + p3[t4];
                  }).join("||"), "){", u3, ".vertexAttrib4f(", s3, ",", p3, ");", Ae.map(function(e4, t4) {
                    return c3 + "." + e4 + "=" + p3[t4] + ";";
                  }).join(""), "}");
                }
                var u3 = f3.gl, s3 = t3.def(r4, ".location"), c3 = t3.def(f3.attributes, "[", s3, "]");
                r4 = i4.state;
                var l3 = i4.buffer, p3 = [i4.x, i4.y, i4.z, i4.w], h3 = ["buffer", "normalized", "offset", "stride"];
                r4 === 1 ? a3() : r4 === 2 ? o3() : (t3("if(", r4, "===", 1, "){"), a3(), t3("}else{"), o3(), t3("}"));
              }
              var f3 = e3.shared;
              n3.forEach(function(n4) {
                var f4, o3 = n4.name, u3 = r3.attributes[o3];
                if (u3) {
                  if (!i3(u3))
                    return;
                  f4 = u3.append(e3, t3);
                } else {
                  if (!i3(De))
                    return;
                  var s3 = e3.scopeAttrib(o3);
                  f4 = {}, Object.keys(new X2()).forEach(function(e4) {
                    f4[e4] = t3.def(s3, ".", e4);
                  });
                }
                a2(e3.link(n4), function(e4) {
                  switch (e4) {
                    case 35664:
                    case 35667:
                    case 35671:
                      return 2;
                    case 35665:
                    case 35668:
                    case 35672:
                      return 3;
                    case 35666:
                    case 35669:
                    case 35673:
                      return 4;
                    default:
                      return 1;
                  }
                }(n4.info.type), f4);
              });
            }
            function R2(e3, r3, n3, i3, f3) {
              for (var o3, u3 = e3.shared, s3 = u3.gl, c3 = 0; c3 < i3.length; ++c3) {
                var l3, p3 = (b3 = i3[c3]).name, h3 = b3.info.type, d3 = n3.uniforms[p3], b3 = e3.link(b3) + ".location";
                if (d3) {
                  if (!f3(d3))
                    continue;
                  if (P(d3)) {
                    if (p3 = d3.value, h3 === 35678 || h3 === 35680)
                      r3(s3, ".uniform1i(", b3, ",", (h3 = e3.link(p3._texture || p3.color[0]._texture)) + ".bind());"), r3.exit(h3, ".unbind();");
                    else if (h3 === 35674 || h3 === 35675 || h3 === 35676)
                      d3 = 2, h3 === 35675 ? d3 = 3 : h3 === 35676 && (d3 = 4), r3(s3, ".uniformMatrix", d3, "fv(", b3, ",false,", p3 = e3.global.def("new Float32Array([" + Array.prototype.slice.call(p3) + "])"), ");");
                    else {
                      switch (h3) {
                        case 5126:
                          o3 = "1f";
                          break;
                        case 35664:
                          o3 = "2f";
                          break;
                        case 35665:
                          o3 = "3f";
                          break;
                        case 35666:
                          o3 = "4f";
                          break;
                        case 35670:
                        case 5124:
                          o3 = "1i";
                          break;
                        case 35671:
                        case 35667:
                          o3 = "2i";
                          break;
                        case 35672:
                        case 35668:
                          o3 = "3i";
                          break;
                        case 35673:
                          o3 = "4i";
                          break;
                        case 35669:
                          o3 = "4i";
                      }
                      r3(s3, ".uniform", o3, "(", b3, ",", m(p3) ? Array.prototype.slice.call(p3) : p3, ");");
                    }
                    continue;
                  }
                  l3 = d3.append(e3, r3);
                } else {
                  if (!f3(De))
                    continue;
                  l3 = r3.def(u3.uniforms, "[", t2.id(p3), "]");
                }
                switch (h3 === 35678 ? r3("if(", l3, "&&", l3, '._reglType==="framebuffer"){', l3, "=", l3, ".color[0];", "}") : h3 === 35680 && r3("if(", l3, "&&", l3, '._reglType==="framebufferCube"){', l3, "=", l3, ".color[0];", "}"), p3 = 1, h3) {
                  case 35678:
                  case 35680:
                    h3 = r3.def(l3, "._texture"), r3(s3, ".uniform1i(", b3, ",", h3, ".bind());"), r3.exit(h3, ".unbind();");
                    continue;
                  case 5124:
                  case 35670:
                    o3 = "1i";
                    break;
                  case 35667:
                  case 35671:
                    o3 = "2i", p3 = 2;
                    break;
                  case 35668:
                  case 35672:
                    o3 = "3i", p3 = 3;
                    break;
                  case 35669:
                  case 35673:
                    o3 = "4i", p3 = 4;
                    break;
                  case 5126:
                    o3 = "1f";
                    break;
                  case 35664:
                    o3 = "2f", p3 = 2;
                    break;
                  case 35665:
                    o3 = "3f", p3 = 3;
                    break;
                  case 35666:
                    o3 = "4f", p3 = 4;
                    break;
                  case 35674:
                    o3 = "Matrix2fv";
                    break;
                  case 35675:
                    o3 = "Matrix3fv";
                    break;
                  case 35676:
                    o3 = "Matrix4fv";
                }
                if (r3(s3, ".uniform", o3, "(", b3, ","), o3.charAt(0) === "M") {
                  b3 = Math.pow(h3 - 35674 + 2, 2);
                  var g3 = e3.global.def("new Float32Array(", b3, ")");
                  r3("false,(Array.isArray(", l3, ")||", l3, " instanceof Float32Array)?", l3, ":(", a(b3, function(e4) {
                    return g3 + "[" + e4 + "]=" + l3 + "[" + e4 + "]";
                  }), ",", g3, ")");
                } else
                  r3(1 < p3 ? a(p3, function(e4) {
                    return l3 + "[" + e4 + "]";
                  }) : l3);
                r3(");");
              }
            }
            function H2(e3, t3, r3, n3) {
              function i3(i4) {
                var a3 = p3[i4];
                return a3 ? a3.contextDep && n3.contextDynamic || a3.propDep ? a3.append(e3, r3) : a3.append(e3, t3) : t3.def(l3, ".", i4);
              }
              function a2() {
                function e4() {
                  r3(u3, ".drawElementsInstancedANGLE(", [d3, m2, g3, b3 + "<<((" + g3 + "-5121)>>1)", o3], ");");
                }
                function t4() {
                  r3(u3, ".drawArraysInstancedANGLE(", [d3, b3, m2, o3], ");");
                }
                h3 ? y3 ? e4() : (r3("if(", h3, "){"), e4(), r3("}else{"), t4(), r3("}")) : t4();
              }
              function f3() {
                function e4() {
                  r3(c3 + ".drawElements(" + [d3, m2, g3, b3 + "<<((" + g3 + "-5121)>>1)"] + ");");
                }
                function t4() {
                  r3(c3 + ".drawArrays(" + [d3, b3, m2] + ");");
                }
                h3 ? y3 ? e4() : (r3("if(", h3, "){"), e4(), r3("}else{"), t4(), r3("}")) : t4();
              }
              var o3, u3, s3 = e3.shared, c3 = s3.gl, l3 = s3.draw, p3 = n3.draw, h3 = function() {
                var i4 = p3.elements, a3 = t3;
                return i4 ? ((i4.contextDep && n3.contextDynamic || i4.propDep) && (a3 = r3), i4 = i4.append(e3, a3)) : i4 = a3.def(l3, ".", "elements"), i4 && a3("if(" + i4 + ")" + c3 + ".bindBuffer(34963," + i4 + ".buffer.buffer);"), i4;
              }(), d3 = i3("primitive"), b3 = i3("offset"), m2 = function() {
                var i4 = p3.count, a3 = t3;
                return i4 ? ((i4.contextDep && n3.contextDynamic || i4.propDep) && (a3 = r3), i4 = i4.append(e3, a3)) : i4 = a3.def(l3, ".", "count"), i4;
              }();
              if (typeof m2 == "number") {
                if (m2 === 0)
                  return;
              } else
                r3("if(", m2, "){"), r3.exit("}");
              K2 && (o3 = i3("instances"), u3 = e3.instancing);
              var g3 = h3 + ".type", y3 = p3.elements && P(p3.elements);
              K2 && (typeof o3 != "number" || 0 <= o3) ? typeof o3 == "string" ? (r3("if(", o3, ">0){"), a2(), r3("}else if(", o3, "<0){"), f3(), r3("}")) : a2() : f3();
            }
            function W2(e3, t3, r3, n3, i3) {
              return i3 = (t3 = x2()).proc("body", i3), K2 && (t3.instancing = i3.def(t3.shared.extensions, ".angle_instanced_arrays")), e3(t3, i3, r3, n3), t3.compile().body;
            }
            function N2(e3, t3, r3, n3) {
              j2(e3, t3), r3.useVAO ? r3.drawVAO ? t3(e3.shared.vao, ".setVAO(", r3.drawVAO.append(e3, t3), ");") : t3(e3.shared.vao, ".setVAO(", e3.shared.vao, ".targetVAO);") : (t3(e3.shared.vao, ".setVAO(null);"), M2(e3, t3, r3, n3.attributes, function() {
                return true;
              })), R2(e3, t3, r3, n3.uniforms, function() {
                return true;
              }), H2(e3, t3, t3, r3);
            }
            function q2(e3, t3, r3, n3) {
              function i3() {
                return true;
              }
              e3.batchId = "a1", j2(e3, t3), M2(e3, t3, r3, n3.attributes, i3), R2(e3, t3, r3, n3.uniforms, i3), H2(e3, t3, t3, r3);
            }
            function Q2(e3, t3, r3, n3) {
              function i3(e4) {
                return e4.contextDep && f3 || e4.propDep;
              }
              function a2(e4) {
                return !i3(e4);
              }
              j2(e3, t3);
              var f3 = r3.contextDep, o3 = t3.def(), u3 = t3.def();
              e3.shared.props = u3, e3.batchId = o3;
              var s3 = e3.scope(), c3 = e3.scope();
              t3(s3.entry, "for(", o3, "=0;", o3, "<", "a1", ";++", o3, "){", u3, "=", "a0", "[", o3, "];", c3, "}", s3.exit), r3.needsContext && E2(e3, c3, r3.context), r3.needsFramebuffer && T2(e3, c3, r3.framebuffer), S2(e3, c3, r3.state, i3), r3.profile && i3(r3.profile) && C2(e3, c3, r3, false, true), n3 ? (r3.useVAO ? r3.drawVAO ? i3(r3.drawVAO) ? c3(e3.shared.vao, ".setVAO(", r3.drawVAO.append(e3, c3), ");") : s3(e3.shared.vao, ".setVAO(", r3.drawVAO.append(e3, s3), ");") : s3(e3.shared.vao, ".setVAO(", e3.shared.vao, ".targetVAO);") : (s3(e3.shared.vao, ".setVAO(null);"), M2(e3, s3, r3, n3.attributes, a2), M2(e3, c3, r3, n3.attributes, i3)), R2(e3, s3, r3, n3.uniforms, a2), R2(e3, c3, r3, n3.uniforms, i3), H2(e3, s3, c3, r3)) : (t3 = e3.global.def("{}"), n3 = r3.shader.progVar.append(e3, c3), u3 = c3.def(n3, ".id"), s3 = c3.def(t3, "[", u3, "]"), c3(e3.shared.gl, ".useProgram(", n3, ".program);", "if(!", s3, "){", s3, "=", t3, "[", u3, "]=", e3.link(function(t4) {
                return W2(q2, e3, r3, t4, 2);
              }), "(", n3, ");}", s3, ".call(this,a0[", o3, "],", o3, ");"));
            }
            function G2(e3, r3) {
              function n3(t3) {
                var n4 = r3.shader[t3];
                n4 && i3.set(a2.shader, "." + t3, n4.append(e3, i3));
              }
              var i3 = e3.proc("scope", 3);
              e3.batchId = "a2";
              var a2 = e3.shared, f3 = a2.current;
              E2(e3, i3, r3.context), r3.framebuffer && r3.framebuffer.append(e3, i3), B(Object.keys(r3.state)).forEach(function(t3) {
                var n4 = r3.state[t3].append(e3, i3);
                m(n4) ? n4.forEach(function(r4, n5) {
                  i3.set(e3.next[t3], "[" + n5 + "]", r4);
                }) : i3.set(a2.next, "." + t3, n4);
              }), C2(e3, i3, r3, true, true), ["elements", "offset", "count", "instances", "primitive"].forEach(function(t3) {
                var n4 = r3.draw[t3];
                n4 && i3.set(a2.draw, "." + t3, "" + n4.append(e3, i3));
              }), Object.keys(r3.uniforms).forEach(function(n4) {
                i3.set(a2.uniforms, "[" + t2.id(n4) + "]", r3.uniforms[n4].append(e3, i3));
              }), Object.keys(r3.attributes).forEach(function(t3) {
                var n4 = r3.attributes[t3].append(e3, i3), a3 = e3.scopeAttrib(t3);
                Object.keys(new X2()).forEach(function(e4) {
                  i3.set(a3, "." + e4, n4[e4]);
                });
              }), r3.scopeVAO && i3.set(a2.vao, ".targetVAO", r3.scopeVAO.append(e3, i3)), n3("vert"), n3("frag"), 0 < Object.keys(r3.state).length && (i3(f3, ".dirty=true;"), i3.exit(f3, ".dirty=true;")), i3("a1(", e3.shared.context, ",a0,", e3.batchId, ");");
            }
            function Y2(e3, t3, r3) {
              var n3 = t3.static[r3];
              if (n3 && function(e4) {
                if (typeof e4 == "object" && !m(e4)) {
                  for (var t4 = Object.keys(e4), r4 = 0; r4 < t4.length; ++r4)
                    if (U.isDynamic(e4[t4[r4]]))
                      return true;
                  return false;
                }
              }(n3)) {
                var i3 = e3.global, a2 = Object.keys(n3), f3 = false, o3 = false, u3 = false, s3 = e3.global.def("{}");
                a2.forEach(function(t4) {
                  var r4 = n3[t4];
                  if (U.isDynamic(r4))
                    typeof r4 == "function" && (r4 = n3[t4] = U.unbox(r4)), t4 = L(r4, null), f3 = f3 || t4.thisDep, u3 = u3 || t4.propDep, o3 = o3 || t4.contextDep;
                  else {
                    switch (i3(s3, ".", t4, "="), typeof r4) {
                      case "number":
                        i3(r4);
                        break;
                      case "string":
                        i3('"', r4, '"');
                        break;
                      case "object":
                        Array.isArray(r4) && i3("[", r4.join(), "]");
                        break;
                      default:
                        i3(e3.link(r4));
                    }
                    i3(";");
                  }
                }), t3.dynamic[r3] = new U.DynamicVariable(4, { thisDep: f3, contextDep: o3, propDep: u3, ref: s3, append: function(e4, t4) {
                  a2.forEach(function(r4) {
                    var i4 = n3[r4];
                    U.isDynamic(i4) && (i4 = e4.invoke(t4, i4), t4(s3, ".", r4, "=", i4, ";"));
                  });
                } }), delete t3.static[r3];
              }
            }
            var X2 = c2.Record, J2 = { add: 32774, subtract: 32778, "reverse subtract": 32779 };
            r2.ext_blend_minmax && (J2.min = 32775, J2.max = 32776);
            var K2 = r2.angle_instanced_arrays, $2 = r2.webgl_draw_buffers, ee2 = { dirty: true, profile: b2.profile }, te2 = {}, re2 = [], ie2 = {}, ae2 = {};
            y2("dither", 3024), y2("blend.enable", 3042), v2("blend.color", "blendColor", [0, 0, 0, 0]), v2("blend.equation", "blendEquationSeparate", [32774, 32774]), v2("blend.func", "blendFuncSeparate", [1, 0, 1, 0]), y2("depth.enable", 2929, true), v2("depth.func", "depthFunc", 513), v2("depth.range", "depthRange", [0, 1]), v2("depth.mask", "depthMask", true), v2("colorMask", "colorMask", [true, true, true, true]), y2("cull.enable", 2884), v2("cull.face", "cullFace", 1029), v2("frontFace", "frontFace", 2305), v2("lineWidth", "lineWidth", 1), y2("polygonOffset.enable", 32823), v2("polygonOffset.offset", "polygonOffset", [0, 0]), y2("sample.alpha", 32926), y2("sample.enable", 32928), v2("sample.coverage", "sampleCoverage", [1, false]), y2("stencil.enable", 2960), v2("stencil.mask", "stencilMask", -1), v2("stencil.func", "stencilFunc", [519, 0, -1]), v2("stencil.opFront", "stencilOpSeparate", [1028, 7680, 7680, 7680]), v2("stencil.opBack", "stencilOpSeparate", [1029, 7680, 7680, 7680]), y2("scissor.enable", 3089), v2("scissor.box", "scissor", [0, 0, e2.drawingBufferWidth, e2.drawingBufferHeight]), v2("viewport", "viewport", [0, 0, e2.drawingBufferWidth, e2.drawingBufferHeight]);
            var fe2 = { gl: e2, context: h2, strings: t2, next: te2, current: ee2, draw: p2, elements: f2, buffer: i2, shader: l2, attributes: c2.state, vao: c2, uniforms: s2, framebuffer: u2, extensions: r2, timer: d2, isBufferArgs: V }, oe2 = { primTypes: ne, compareFuncs: Oe, blendFuncs: _e, blendEquations: J2, stencilOps: Ee, glTypes: Z, orientationType: Te };
            $2 && (oe2.backBuffer = [1029], oe2.drawBuffer = a(n2.maxDrawbuffers, function(e3) {
              return e3 === 0 ? [0] : a(e3, function(e4) {
                return 36064 + e4;
              });
            }));
            var ue2 = 0;
            return { next: te2, current: ee2, procs: function() {
              var e3 = x2(), t3 = e3.proc("poll"), i3 = e3.proc("refresh"), f3 = e3.block();
              t3(f3), i3(f3);
              var o3, u3 = e3.shared, s3 = u3.gl, c3 = u3.next, l3 = u3.current;
              f3(l3, ".dirty=false;"), T2(e3, t3), T2(e3, i3, null, true), K2 && (o3 = e3.link(K2)), r2.oes_vertex_array_object && i3(e3.link(r2.oes_vertex_array_object), ".bindVertexArrayOES(null);");
              for (var p3 = 0; p3 < n2.maxAttributes; ++p3) {
                var h3 = i3.def(u3.attributes, "[", p3, "]"), d3 = e3.cond(h3, ".buffer");
                d3.then(s3, ".enableVertexAttribArray(", p3, ");", s3, ".bindBuffer(", 34962, ",", h3, ".buffer.buffer);", s3, ".vertexAttribPointer(", p3, ",", h3, ".size,", h3, ".type,", h3, ".normalized,", h3, ".stride,", h3, ".offset);").else(s3, ".disableVertexAttribArray(", p3, ");", s3, ".vertexAttrib4f(", p3, ",", h3, ".x,", h3, ".y,", h3, ".z,", h3, ".w);", h3, ".buffer=null;"), i3(d3), K2 && i3(o3, ".vertexAttribDivisorANGLE(", p3, ",", h3, ".divisor);");
              }
              return i3(e3.shared.vao, ".currentVAO=null;", e3.shared.vao, ".setVAO(", e3.shared.vao, ".targetVAO);"), Object.keys(ie2).forEach(function(r3) {
                var n3 = ie2[r3], a2 = f3.def(c3, ".", r3), o4 = e3.block();
                o4("if(", a2, "){", s3, ".enable(", n3, ")}else{", s3, ".disable(", n3, ")}", l3, ".", r3, "=", a2, ";"), i3(o4), t3("if(", a2, "!==", l3, ".", r3, "){", o4, "}");
              }), Object.keys(ae2).forEach(function(r3) {
                var n3, o4, u4 = ae2[r3], p4 = ee2[r3], h4 = e3.block();
                h4(s3, ".", u4, "("), m(p4) ? (u4 = p4.length, n3 = e3.global.def(c3, ".", r3), o4 = e3.global.def(l3, ".", r3), h4(a(u4, function(e4) {
                  return n3 + "[" + e4 + "]";
                }), ");", a(u4, function(e4) {
                  return o4 + "[" + e4 + "]=" + n3 + "[" + e4 + "];";
                }).join("")), t3("if(", a(u4, function(e4) {
                  return n3 + "[" + e4 + "]!==" + o4 + "[" + e4 + "]";
                }).join("||"), "){", h4, "}")) : (n3 = f3.def(c3, ".", r3), o4 = f3.def(l3, ".", r3), h4(n3, ");", l3, ".", r3, "=", n3, ";"), t3("if(", n3, "!==", o4, "){", h4, "}")), i3(h4);
              }), e3.compile();
            }(), compile: function(e3, t3, r3, n3, i3) {
              var a2 = x2();
              return a2.stats = a2.link(i3), Object.keys(t3.static).forEach(function(e4) {
                Y2(a2, t3, e4);
              }), ke.forEach(function(t4) {
                Y2(a2, e3, t4);
              }), r3 = O2(e3, t3, r3, n3), function(e4, t4) {
                var r4 = e4.proc("draw", 1);
                j2(e4, r4), E2(e4, r4, t4.context), T2(e4, r4, t4.framebuffer), D2(e4, r4, t4), S2(e4, r4, t4.state), C2(e4, r4, t4, false, true);
                var n4 = t4.shader.progVar.append(e4, r4);
                if (r4(e4.shared.gl, ".useProgram(", n4, ".program);"), t4.shader.program)
                  N2(e4, r4, t4, t4.shader.program);
                else {
                  r4(e4.shared.vao, ".setVAO(null);");
                  var i4 = e4.global.def("{}"), a3 = r4.def(n4, ".id"), f3 = r4.def(i4, "[", a3, "]");
                  r4(e4.cond(f3).then(f3, ".call(this,a0);").else(f3, "=", i4, "[", a3, "]=", e4.link(function(r5) {
                    return W2(N2, e4, t4, r5, 1);
                  }), "(", n4, ");", f3, ".call(this,a0);"));
                }
                0 < Object.keys(t4.state).length && r4(e4.shared.current, ".dirty=true;");
              }(a2, r3), G2(a2, r3), function(e4, t4) {
                function r4(e5) {
                  return e5.contextDep && i4 || e5.propDep;
                }
                var n4 = e4.proc("batch", 2);
                e4.batchId = "0", j2(e4, n4);
                var i4 = false, a3 = true;
                Object.keys(t4.context).forEach(function(e5) {
                  i4 = i4 || t4.context[e5].propDep;
                }), i4 || (E2(e4, n4, t4.context), a3 = false);
                var f3 = false;
                if ((o3 = t4.framebuffer) ? (o3.propDep ? i4 = f3 = true : o3.contextDep && i4 && (f3 = true), f3 || T2(e4, n4, o3)) : T2(e4, n4, null), t4.state.viewport && t4.state.viewport.propDep && (i4 = true), D2(e4, n4, t4), S2(e4, n4, t4.state, function(e5) {
                  return !r4(e5);
                }), t4.profile && r4(t4.profile) || C2(e4, n4, t4, false, "a1"), t4.contextDep = i4, t4.needsContext = a3, t4.needsFramebuffer = f3, (a3 = t4.shader.progVar).contextDep && i4 || a3.propDep)
                  Q2(e4, n4, t4, null);
                else if (a3 = a3.append(e4, n4), n4(e4.shared.gl, ".useProgram(", a3, ".program);"), t4.shader.program)
                  Q2(e4, n4, t4, t4.shader.program);
                else {
                  n4(e4.shared.vao, ".setVAO(null);");
                  var o3 = e4.global.def("{}"), u3 = (f3 = n4.def(a3, ".id"), n4.def(o3, "[", f3, "]"));
                  n4(e4.cond(u3).then(u3, ".call(this,a0,a1);").else(u3, "=", o3, "[", f3, "]=", e4.link(function(r5) {
                    return W2(Q2, e4, t4, r5, 2);
                  }), "(", a3, ");", u3, ".call(this,a0,a1);"));
                }
                0 < Object.keys(t4.state).length && n4(e4.shared.current, ".dirty=true;");
              }(a2, r3), a2.compile();
            } };
          }
          function R(e2, t2) {
            for (var r2 = 0; r2 < e2.length; ++r2)
              if (e2[r2] === t2)
                return r2;
            return -1;
          }
          var H = function(e2, t2) {
            for (var r2 = Object.keys(t2), n2 = 0; n2 < r2.length; ++n2)
              e2[r2[n2]] = t2[r2[n2]];
            return e2;
          }, W = 0, U = { DynamicVariable: e, define: function(r2, n2) {
            return new e(r2, t(n2 + ""));
          }, isDynamic: function(t2) {
            return typeof t2 == "function" && !t2._reglType || t2 instanceof e;
          }, unbox: function(t2, r2) {
            return typeof t2 == "function" ? new e(0, t2) : t2;
          }, accessor: t }, N = { next: typeof requestAnimationFrame == "function" ? function(e2) {
            return requestAnimationFrame(e2);
          } : function(e2) {
            return setTimeout(e2, 16);
          }, cancel: typeof cancelAnimationFrame == "function" ? function(e2) {
            return cancelAnimationFrame(e2);
          } : clearTimeout }, q = typeof performance != "undefined" && performance.now ? function() {
            return performance.now();
          } : function() {
            return +new Date();
          }, Q = o();
          Q.zero = o();
          var G = function(e2, t2) {
            var r2 = 1;
            t2.ext_texture_filter_anisotropic && (r2 = e2.getParameter(34047));
            var n2 = 1, i2 = 1;
            t2.webgl_draw_buffers && (n2 = e2.getParameter(34852), i2 = e2.getParameter(36063));
            var a2 = !!t2.oes_texture_float;
            if (a2) {
              a2 = e2.createTexture(), e2.bindTexture(3553, a2), e2.texImage2D(3553, 0, 6408, 1, 1, 0, 6408, 5126, null);
              var f2 = e2.createFramebuffer();
              if (e2.bindFramebuffer(36160, f2), e2.framebufferTexture2D(36160, 36064, 3553, a2, 0), e2.bindTexture(3553, null), e2.checkFramebufferStatus(36160) !== 36053)
                a2 = false;
              else {
                e2.viewport(0, 0, 1, 1), e2.clearColor(1, 0, 0, 1), e2.clear(16384);
                var o2 = Q.allocType(5126, 4);
                e2.readPixels(0, 0, 1, 1, 6408, 5126, o2), e2.getError() ? a2 = false : (e2.deleteFramebuffer(f2), e2.deleteTexture(a2), a2 = o2[0] === 1), Q.freeType(o2);
              }
            }
            return o2 = true, typeof navigator != "undefined" && (/MSIE/.test(navigator.userAgent) || /Trident\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent)) || (o2 = e2.createTexture(), f2 = Q.allocType(5121, 36), e2.activeTexture(33984), e2.bindTexture(34067, o2), e2.texImage2D(34069, 0, 6408, 3, 3, 0, 6408, 5121, f2), Q.freeType(f2), e2.bindTexture(34067, null), e2.deleteTexture(o2), o2 = !e2.getError()), { colorBits: [e2.getParameter(3410), e2.getParameter(3411), e2.getParameter(3412), e2.getParameter(3413)], depthBits: e2.getParameter(3414), stencilBits: e2.getParameter(3415), subpixelBits: e2.getParameter(3408), extensions: Object.keys(t2).filter(function(e3) {
              return !!t2[e3];
            }), maxAnisotropic: r2, maxDrawbuffers: n2, maxColorAttachments: i2, pointSizeDims: e2.getParameter(33901), lineWidthDims: e2.getParameter(33902), maxViewportDims: e2.getParameter(3386), maxCombinedTextureUnits: e2.getParameter(35661), maxCubeMapSize: e2.getParameter(34076), maxRenderbufferSize: e2.getParameter(34024), maxTextureUnits: e2.getParameter(34930), maxTextureSize: e2.getParameter(3379), maxAttributes: e2.getParameter(34921), maxVertexUniforms: e2.getParameter(36347), maxVertexTextureUnits: e2.getParameter(35660), maxVaryingVectors: e2.getParameter(36348), maxFragmentUniforms: e2.getParameter(36349), glsl: e2.getParameter(35724), renderer: e2.getParameter(7937), vendor: e2.getParameter(7936), version: e2.getParameter(7938), readFloat: a2, npotTextureCube: o2 };
          }, Y = function(e2) {
            return e2 instanceof Uint8Array || e2 instanceof Uint16Array || e2 instanceof Uint32Array || e2 instanceof Int8Array || e2 instanceof Int16Array || e2 instanceof Int32Array || e2 instanceof Float32Array || e2 instanceof Float64Array || e2 instanceof Uint8ClampedArray;
          }, X = function(e2) {
            return Object.keys(e2).map(function(t2) {
              return e2[t2];
            });
          }, J = { shape: function(e2) {
            for (var t2 = []; e2.length; e2 = e2[0])
              t2.push(e2.length);
            return t2;
          }, flatten: function(e2, t2, r2, n2) {
            var i2 = 1;
            if (t2.length)
              for (var a2 = 0; a2 < t2.length; ++a2)
                i2 *= t2[a2];
            else
              i2 = 0;
            switch (r2 = n2 || Q.allocType(r2, i2), t2.length) {
              case 0:
                break;
              case 1:
                for (n2 = t2[0], t2 = 0; t2 < n2; ++t2)
                  r2[t2] = e2[t2];
                break;
              case 2:
                for (n2 = t2[0], t2 = t2[1], a2 = i2 = 0; a2 < n2; ++a2)
                  for (var f2 = e2[a2], o2 = 0; o2 < t2; ++o2)
                    r2[i2++] = f2[o2];
                break;
              case 3:
                s(e2, t2[0], t2[1], t2[2], r2, 0);
                break;
              default:
                !function e3(t3, r3, n3, i3, a3) {
                  for (var f3 = 1, o3 = n3 + 1; o3 < r3.length; ++o3)
                    f3 *= r3[o3];
                  var u2 = r3[n3];
                  if (r3.length - n3 == 4) {
                    var c2 = r3[n3 + 1], l2 = r3[n3 + 2];
                    for (r3 = r3[n3 + 3], o3 = 0; o3 < u2; ++o3)
                      s(t3[o3], c2, l2, r3, i3, a3), a3 += f3;
                  } else
                    for (o3 = 0; o3 < u2; ++o3)
                      e3(t3[o3], r3, n3 + 1, i3, a3), a3 += f3;
                }(e2, t2, 0, r2, 0);
            }
            return r2;
          } }, K = { "[object Int8Array]": 5120, "[object Int16Array]": 5122, "[object Int32Array]": 5124, "[object Uint8Array]": 5121, "[object Uint8ClampedArray]": 5121, "[object Uint16Array]": 5123, "[object Uint32Array]": 5125, "[object Float32Array]": 5126, "[object Float64Array]": 5121, "[object ArrayBuffer]": 5121 }, Z = { int8: 5120, int16: 5122, int32: 5124, uint8: 5121, uint16: 5123, uint32: 5125, float: 5126, float32: 5126 }, $ = { dynamic: 35048, stream: 35040, static: 35044 }, ee = J.flatten, te = J.shape, re = [];
          re[5120] = 1, re[5122] = 2, re[5124] = 4, re[5121] = 1, re[5123] = 2, re[5125] = 4, re[5126] = 4;
          var ne = { points: 0, point: 0, lines: 1, line: 1, triangles: 4, triangle: 4, "line loop": 2, "line strip": 3, "triangle strip": 5, "triangle fan": 6 }, ie = new Float32Array(1), ae = new Uint32Array(ie.buffer), fe = [9984, 9986, 9985, 9987], oe = [0, 6409, 6410, 6407, 6408], ue = {};
          ue[6409] = ue[6406] = ue[6402] = 1, ue[34041] = ue[6410] = 2, ue[6407] = ue[35904] = 3, ue[6408] = ue[35906] = 4;
          var se = g("HTMLCanvasElement"), ce = g("OffscreenCanvas"), le = g("CanvasRenderingContext2D"), pe = g("ImageBitmap"), he = g("HTMLImageElement"), de = g("HTMLVideoElement"), be = Object.keys(K).concat([se, ce, le, pe, he, de]), me = [];
          me[5121] = 1, me[5126] = 4, me[36193] = 2, me[5123] = 2, me[5125] = 4;
          var ge = [];
          ge[32854] = 2, ge[32855] = 2, ge[36194] = 2, ge[34041] = 4, ge[33776] = 0.5, ge[33777] = 0.5, ge[33778] = 1, ge[33779] = 1, ge[35986] = 0.5, ge[35987] = 1, ge[34798] = 1, ge[35840] = 0.5, ge[35841] = 0.25, ge[35842] = 0.5, ge[35843] = 0.25, ge[36196] = 0.5;
          var ye = [];
          ye[32854] = 2, ye[32855] = 2, ye[36194] = 2, ye[33189] = 2, ye[36168] = 1, ye[34041] = 4, ye[35907] = 4, ye[34836] = 16, ye[34842] = 8, ye[34843] = 6;
          var ve = function(e2, t2, r2, n2, i2) {
            function a2(e3) {
              this.id = s2++, this.refCount = 1, this.renderbuffer = e3, this.format = 32854, this.height = this.width = 0, i2.profile && (this.stats = { size: 0 });
            }
            function f2(t3) {
              var r3 = t3.renderbuffer;
              e2.bindRenderbuffer(36161, null), e2.deleteRenderbuffer(r3), t3.renderbuffer = null, t3.refCount = 0, delete c2[t3.id], n2.renderbufferCount--;
            }
            var o2 = { rgba4: 32854, rgb565: 36194, "rgb5 a1": 32855, depth: 33189, stencil: 36168, "depth stencil": 34041 };
            t2.ext_srgb && (o2.srgba = 35907), t2.ext_color_buffer_half_float && (o2.rgba16f = 34842, o2.rgb16f = 34843), t2.webgl_color_buffer_float && (o2.rgba32f = 34836);
            var u2 = [];
            Object.keys(o2).forEach(function(e3) {
              u2[o2[e3]] = e3;
            });
            var s2 = 0, c2 = {};
            return a2.prototype.decRef = function() {
              0 >= --this.refCount && f2(this);
            }, i2.profile && (n2.getTotalRenderbufferSize = function() {
              var e3 = 0;
              return Object.keys(c2).forEach(function(t3) {
                e3 += c2[t3].stats.size;
              }), e3;
            }), { create: function(t3, r3) {
              function f3(t4, r4) {
                var n3 = 0, a3 = 0, c3 = 32854;
                if (typeof t4 == "object" && t4 ? ("shape" in t4 ? (n3 = 0 | (a3 = t4.shape)[0], a3 = 0 | a3[1]) : ("radius" in t4 && (n3 = a3 = 0 | t4.radius), "width" in t4 && (n3 = 0 | t4.width), "height" in t4 && (a3 = 0 | t4.height)), "format" in t4 && (c3 = o2[t4.format])) : typeof t4 == "number" ? (n3 = 0 | t4, a3 = typeof r4 == "number" ? 0 | r4 : n3) : t4 || (n3 = a3 = 1), n3 !== s3.width || a3 !== s3.height || c3 !== s3.format)
                  return f3.width = s3.width = n3, f3.height = s3.height = a3, s3.format = c3, e2.bindRenderbuffer(36161, s3.renderbuffer), e2.renderbufferStorage(36161, c3, n3, a3), i2.profile && (s3.stats.size = ye[s3.format] * s3.width * s3.height), f3.format = u2[s3.format], f3;
              }
              var s3 = new a2(e2.createRenderbuffer());
              return c2[s3.id] = s3, n2.renderbufferCount++, f3(t3, r3), f3.resize = function(t4, r4) {
                var n3 = 0 | t4, a3 = 0 | r4 || n3;
                return n3 === s3.width && a3 === s3.height ? f3 : (f3.width = s3.width = n3, f3.height = s3.height = a3, e2.bindRenderbuffer(36161, s3.renderbuffer), e2.renderbufferStorage(36161, s3.format, n3, a3), i2.profile && (s3.stats.size = ye[s3.format] * s3.width * s3.height), f3);
              }, f3._reglType = "renderbuffer", f3._renderbuffer = s3, i2.profile && (f3.stats = s3.stats), f3.destroy = function() {
                s3.decRef();
              }, f3;
            }, clear: function() {
              X(c2).forEach(f2);
            }, restore: function() {
              X(c2).forEach(function(t3) {
                t3.renderbuffer = e2.createRenderbuffer(), e2.bindRenderbuffer(36161, t3.renderbuffer), e2.renderbufferStorage(36161, t3.format, t3.width, t3.height);
              }), e2.bindRenderbuffer(36161, null);
            } };
          }, xe = [];
          xe[6408] = 4, xe[6407] = 3;
          var we = [];
          we[5121] = 1, we[5126] = 4, we[36193] = 2;
          var Ae = ["x", "y", "z", "w"], ke = "blend.func blend.equation stencil.func stencil.opFront stencil.opBack sample.coverage viewport scissor.box polygonOffset.offset".split(" "), _e = { 0: 0, 1: 1, zero: 0, one: 1, "src color": 768, "one minus src color": 769, "src alpha": 770, "one minus src alpha": 771, "dst color": 774, "one minus dst color": 775, "dst alpha": 772, "one minus dst alpha": 773, "constant color": 32769, "one minus constant color": 32770, "constant alpha": 32771, "one minus constant alpha": 32772, "src alpha saturate": 776 }, Oe = { never: 512, less: 513, "<": 513, equal: 514, "=": 514, "==": 514, "===": 514, lequal: 515, "<=": 515, greater: 516, ">": 516, notequal: 517, "!=": 517, "!==": 517, gequal: 518, ">=": 518, always: 519 }, Ee = { 0: 0, zero: 0, keep: 7680, replace: 7681, increment: 7682, decrement: 7683, "increment wrap": 34055, "decrement wrap": 34056, invert: 5386 }, Te = { cw: 2304, ccw: 2305 }, De = new z(false, false, false, function() {
          });
          return function(e2) {
            function t2() {
              if (J2.length === 0)
                A2 && A2.update(), ee2 = null;
              else {
                ee2 = N.next(t2), l2();
                for (var e3 = J2.length - 1; 0 <= e3; --e3) {
                  var r3 = J2[e3];
                  r3 && r3(C2, null, 0);
                }
                m2.flush(), A2 && A2.update();
              }
            }
            function r2() {
              !ee2 && 0 < J2.length && (ee2 = N.next(t2));
            }
            function n2() {
              ee2 && (N.cancel(t2), ee2 = null);
            }
            function a2(e3) {
              e3.preventDefault(), n2(), K2.forEach(function(e4) {
                e4();
              });
            }
            function f2(e3) {
              m2.getError(), y2.restore(), P2.restore(), V2.restore(), I2.restore(), L2.restore(), W2.restore(), B2.restore(), A2 && A2.restore(), Q2.procs.refresh(), r2(), Z2.forEach(function(e4) {
                e4();
              });
            }
            function o2(e3) {
              function t3(e4) {
                var t4 = {}, r4 = {};
                return Object.keys(e4).forEach(function(n4) {
                  var i3 = e4[n4];
                  U.isDynamic(i3) ? r4[n4] = U.unbox(i3, n4) : t4[n4] = i3;
                }), { dynamic: r4, static: t4 };
              }
              var r3 = t3(e3.context || {}), n3 = t3(e3.uniforms || {}), i2 = t3(e3.attributes || {}), a3 = t3(function(e4) {
                function t4(e5) {
                  if (e5 in r4) {
                    var t5 = r4[e5];
                    delete r4[e5], Object.keys(t5).forEach(function(n4) {
                      r4[e5 + "." + n4] = t5[n4];
                    });
                  }
                }
                var r4 = H({}, e4);
                return delete r4.uniforms, delete r4.attributes, delete r4.context, delete r4.vao, "stencil" in r4 && r4.stencil.op && (r4.stencil.opBack = r4.stencil.opFront = r4.stencil.op, delete r4.stencil.op), t4("blend"), t4("depth"), t4("cull"), t4("stencil"), t4("polygonOffset"), t4("scissor"), t4("sample"), "vao" in e4 && (r4.vao = e4.vao), r4;
              }(e3));
              e3 = { gpuTime: 0, cpuTime: 0, count: 0 };
              var f3 = (r3 = Q2.compile(a3, i2, n3, r3, e3)).draw, o3 = r3.batch, u3 = r3.scope, s3 = [];
              return H(function(e4, t4) {
                var r4;
                if (typeof e4 == "function")
                  return u3.call(this, null, e4, 0);
                if (typeof t4 == "function")
                  if (typeof e4 == "number")
                    for (r4 = 0; r4 < e4; ++r4)
                      u3.call(this, null, t4, r4);
                  else {
                    if (!Array.isArray(e4))
                      return u3.call(this, e4, t4, 0);
                    for (r4 = 0; r4 < e4.length; ++r4)
                      u3.call(this, e4[r4], t4, r4);
                  }
                else if (typeof e4 == "number") {
                  if (0 < e4)
                    return o3.call(this, function(e5) {
                      for (; s3.length < e5; )
                        s3.push(null);
                      return s3;
                    }(0 | e4), 0 | e4);
                } else {
                  if (!Array.isArray(e4))
                    return f3.call(this, e4);
                  if (e4.length)
                    return o3.call(this, e4, e4.length);
                }
              }, { stats: e3 });
            }
            function u2(e3, t3) {
              var r3 = 0;
              Q2.procs.poll();
              var n3 = t3.color;
              n3 && (m2.clearColor(+n3[0] || 0, +n3[1] || 0, +n3[2] || 0, +n3[3] || 0), r3 |= 16384), "depth" in t3 && (m2.clearDepth(+t3.depth), r3 |= 256), "stencil" in t3 && (m2.clearStencil(0 | t3.stencil), r3 |= 1024), m2.clear(r3);
            }
            function s2(e3) {
              return J2.push(e3), r2(), { cancel: function() {
                var t3 = R(J2, e3);
                J2[t3] = function e4() {
                  var t4 = R(J2, e4);
                  J2[t4] = J2[J2.length - 1], --J2.length, 0 >= J2.length && n2();
                };
              } };
            }
            function c2() {
              var e3 = Y2.viewport, t3 = Y2.scissor_box;
              e3[0] = e3[1] = t3[0] = t3[1] = 0, C2.viewportWidth = C2.framebufferWidth = C2.drawingBufferWidth = e3[2] = t3[2] = m2.drawingBufferWidth, C2.viewportHeight = C2.framebufferHeight = C2.drawingBufferHeight = e3[3] = t3[3] = m2.drawingBufferHeight;
            }
            function l2() {
              C2.tick += 1, C2.time = b2(), c2(), Q2.procs.poll();
            }
            function p2() {
              c2(), Q2.procs.refresh(), A2 && A2.update();
            }
            function b2() {
              return (q() - k2) / 1e3;
            }
            if (!(e2 = i(e2)))
              return null;
            var m2 = e2.gl, g2 = m2.getContextAttributes();
            m2.isContextLost();
            var y2 = function(e3, t3) {
              function r3(t4) {
                var r4;
                t4 = t4.toLowerCase();
                try {
                  r4 = n3[t4] = e3.getExtension(t4);
                } catch (e4) {
                }
                return !!r4;
              }
              for (var n3 = {}, i2 = 0; i2 < t3.extensions.length; ++i2) {
                var a3 = t3.extensions[i2];
                if (!r3(a3))
                  return t3.onDestroy(), t3.onDone('"' + a3 + '" extension is not supported by the current WebGL context, try upgrading your system or a different browser'), null;
              }
              return t3.optionalExtensions.forEach(r3), { extensions: n3, restore: function() {
                Object.keys(n3).forEach(function(e4) {
                  if (n3[e4] && !r3(e4))
                    throw Error("(regl): error restoring extension " + e4);
                });
              } };
            }(m2, e2);
            if (!y2)
              return null;
            var v2 = function() {
              var e3 = { "": 0 }, t3 = [""];
              return { id: function(r3) {
                var n3 = e3[r3];
                return n3 || (n3 = e3[r3] = t3.length, t3.push(r3), n3);
              }, str: function(e4) {
                return t3[e4];
              } };
            }(), x2 = { vaoCount: 0, bufferCount: 0, elementsCount: 0, framebufferCount: 0, shaderCount: 0, textureCount: 0, cubeCount: 0, renderbufferCount: 0, maxTextureUnits: 0 }, w2 = y2.extensions, A2 = function(e3, t3) {
              function r3() {
                this.endQueryIndex = this.startQueryIndex = -1, this.sum = 0, this.stats = null;
              }
              function n3(e4, t4, n4) {
                var i3 = f3.pop() || new r3();
                i3.startQueryIndex = e4, i3.endQueryIndex = t4, i3.sum = 0, i3.stats = n4, o3.push(i3);
              }
              if (!t3.ext_disjoint_timer_query)
                return null;
              var i2 = [], a3 = [], f3 = [], o3 = [], u3 = [], s3 = [];
              return { beginQuery: function(e4) {
                var r4 = i2.pop() || t3.ext_disjoint_timer_query.createQueryEXT();
                t3.ext_disjoint_timer_query.beginQueryEXT(35007, r4), a3.push(r4), n3(a3.length - 1, a3.length, e4);
              }, endQuery: function() {
                t3.ext_disjoint_timer_query.endQueryEXT(35007);
              }, pushScopeStats: n3, update: function() {
                var e4, r4;
                if ((e4 = a3.length) !== 0) {
                  s3.length = Math.max(s3.length, e4 + 1), u3.length = Math.max(u3.length, e4 + 1), u3[0] = 0;
                  var n4 = s3[0] = 0;
                  for (r4 = e4 = 0; r4 < a3.length; ++r4) {
                    var c3 = a3[r4];
                    t3.ext_disjoint_timer_query.getQueryObjectEXT(c3, 34919) ? (n4 += t3.ext_disjoint_timer_query.getQueryObjectEXT(c3, 34918), i2.push(c3)) : a3[e4++] = c3, u3[r4 + 1] = n4, s3[r4 + 1] = e4;
                  }
                  for (a3.length = e4, r4 = e4 = 0; r4 < o3.length; ++r4) {
                    var l3 = (n4 = o3[r4]).startQueryIndex;
                    c3 = n4.endQueryIndex, n4.sum += u3[c3] - u3[l3], l3 = s3[l3], (c3 = s3[c3]) === l3 ? (n4.stats.gpuTime += n4.sum / 1e6, f3.push(n4)) : (n4.startQueryIndex = l3, n4.endQueryIndex = c3, o3[e4++] = n4);
                  }
                  o3.length = e4;
                }
              }, getNumPendingQueries: function() {
                return a3.length;
              }, clear: function() {
                i2.push.apply(i2, a3);
                for (var e4 = 0; e4 < i2.length; e4++)
                  t3.ext_disjoint_timer_query.deleteQueryEXT(i2[e4]);
                a3.length = 0, i2.length = 0;
              }, restore: function() {
                a3.length = 0, i2.length = 0;
              } };
            }(0, w2), k2 = q(), E2 = m2.drawingBufferWidth, j2 = m2.drawingBufferHeight, C2 = { tick: 0, time: 0, viewportWidth: E2, viewportHeight: j2, framebufferWidth: E2, framebufferHeight: j2, drawingBufferWidth: E2, drawingBufferHeight: j2, pixelRatio: e2.pixelRatio }, F2 = G(m2, w2), V2 = h(m2, x2, e2, function(e3) {
              return B2.destroyBuffer(e3);
            }), B2 = T(m2, w2, F2, x2, V2), z2 = d(m2, w2, V2, x2), P2 = D(m2, v2, x2, e2), I2 = _(m2, w2, F2, function() {
              Q2.procs.poll();
            }, C2, x2, e2), L2 = ve(m2, w2, 0, x2, e2), W2 = O(m2, w2, F2, I2, L2, x2), Q2 = M(m2, v2, w2, F2, V2, z2, 0, W2, {}, B2, P2, { elements: null, primitive: 4, count: -1, offset: 0, instances: -1 }, C2, A2, e2), Y2 = (v2 = S(m2, W2, Q2.procs.poll, C2), Q2.next), X2 = m2.canvas, J2 = [], K2 = [], Z2 = [], $2 = [e2.onDestroy], ee2 = null;
            X2 && (X2.addEventListener("webglcontextlost", a2, false), X2.addEventListener("webglcontextrestored", f2, false));
            var te2 = W2.setFBO = o2({ framebuffer: U.define.call(null, 1, "framebuffer") });
            return p2(), g2 = H(o2, { clear: function(e3) {
              if ("framebuffer" in e3)
                if (e3.framebuffer && e3.framebuffer_reglType === "framebufferCube")
                  for (var t3 = 0; 6 > t3; ++t3)
                    te2(H({ framebuffer: e3.framebuffer.faces[t3] }, e3), u2);
                else
                  te2(e3, u2);
              else
                u2(0, e3);
            }, prop: U.define.bind(null, 1), context: U.define.bind(null, 2), this: U.define.bind(null, 3), draw: o2({}), buffer: function(e3) {
              return V2.create(e3, 34962, false, false);
            }, elements: function(e3) {
              return z2.create(e3, false);
            }, texture: I2.create2D, cube: I2.createCube, renderbuffer: L2.create, framebuffer: W2.create, framebufferCube: W2.createCube, vao: B2.createVAO, attributes: g2, frame: s2, on: function(e3, t3) {
              var r3;
              switch (e3) {
                case "frame":
                  return s2(t3);
                case "lost":
                  r3 = K2;
                  break;
                case "restore":
                  r3 = Z2;
                  break;
                case "destroy":
                  r3 = $2;
              }
              return r3.push(t3), { cancel: function() {
                for (var e4 = 0; e4 < r3.length; ++e4)
                  if (r3[e4] === t3) {
                    r3[e4] = r3[r3.length - 1], r3.pop();
                    break;
                  }
              } };
            }, limits: F2, hasExtension: function(e3) {
              return 0 <= F2.extensions.indexOf(e3.toLowerCase());
            }, read: v2, destroy: function() {
              J2.length = 0, n2(), X2 && (X2.removeEventListener("webglcontextlost", a2), X2.removeEventListener("webglcontextrestored", f2)), P2.clear(), W2.clear(), L2.clear(), I2.clear(), z2.clear(), V2.clear(), B2.clear(), A2 && A2.clear(), $2.forEach(function(e3) {
                e3();
              });
            }, _gl: m2, _refresh: p2, poll: function() {
              l2(), A2 && A2.update();
            }, now: b2, stats: x2 }), e2.onDone(null, g2), g2;
          };
        });
      }, {}], 88: [function(require2, module3, exports3) {
        const boundingBox = (r) => {
          if (r.length === 0)
            return [[0, 0, 0], [0, 0, 0]];
          const e = Array.isArray(r) && Array.isArray(r[0]), n = e ? r[0].length : 3, o = new Array(n), t = new Array(n);
          for (let r2 = 0; r2 < n; r2 += 1)
            o[r2] = 1 / 0, t[r2] = -1 / 0;
          if (e)
            r.forEach((r2) => {
              for (let l = 0; l < n; l += 1) {
                const n2 = e ? r2[l] : r2;
                t[l] = n2 > t[l] ? n2 : t[l], o[l] = n2 < o[l] ? n2 : o[l];
              }
            });
          else
            for (let e2 = 0; e2 < r.length; e2 += n)
              for (let l = 0; l < n; l += 1) {
                const n2 = r[l + e2];
                t[l] = n2 > t[l] ? n2 : t[l], o[l] = n2 < o[l] ? n2 : o[l];
              }
          return [o, t];
        };
        module3.exports = boundingBox;
      }, {}], 89: [function(require2, module3, exports3) {
        const vec3 = require2("gl-vec3"), { flatten } = require2("@jscad/array-utils"), boundingBox = require2("./boundingBox"), computeBounds = (...e) => {
          let c;
          (e = flatten(e)).forEach((e2) => {
            let t2 = boundingBox(e2.positions);
            t2 = t2.map((c2) => vec3.transformMat4(c2, c2, e2.transforms)), c ? (vec3.min(c[0], c[0], t2[0]), vec3.max(c[1], c[1], t2[1])) : c = t2;
          });
          const t = vec3.min(vec3.create(), c[1], c[0]), a = vec3.max(vec3.create(), c[1], c[0]), n = vec3.subtract(vec3.create(), a, t);
          let r = vec3.scale(vec3.create(), n, 0.5);
          return r = vec3.add(r, t, r), { dia: vec3.distance(r, a), center: [...r], min: [...t], max: [...a], size: [...n] };
        };
        module3.exports = computeBounds;
      }, { "./boundingBox": 88, "@jscad/array-utils": 4, "gl-vec3": 59 }], 90: [function(require2, module3, exports3) {
        const vec3 = require2("gl-vec3"), mat4 = require2("gl-mat4"), fromOrthographicToPerspective = (e) => {
          const { near: t, far: r, fov: o, zoom: a } = e;
          console.log("fov", o, "zoom", a);
          const { viewport: i } = e, c = require2("./perspectiveCamera").setProjection(e, { width: i[2], height: i[3] }), { projectionType: p } = require2("./perspectiveCamera").cameraState;
          return Object.assign({}, e, c, { projectionType: p }, { near: t, far: r, fov: o });
        }, fromPerspectiveToOrthographic = (e) => {
          const { fov: t, aspect: r } = e, o = 0.3 * vec3.length(vec3.subtract([], e.position, e.target)), a = Math.tan(t) * o * r, i = Math.tan(t) * o, { near: c, far: p, viewport: s } = e, n = { zoom: 1, near: c, far: p }, v = require2("./orthographicCamera").cameraState, h = require2("./orthographicCamera").setProjection(n, { width: a, height: i });
          return Object.assign({}, v, e, h, { projectionType: v.projectionType, viewport: s });
        }, toPerspectiveView = ({ camera: e }) => {
          const t = vec3.distance(e.position, e.target), r = [t, t, t];
          return { view: mat4.lookAt(mat4.create(), r, e.target, e.up), position: r };
        }, toPresetView = (e, { camera: t }) => {
          const r = vec3.distance(t.position, t.target), o = vec3.add(vec3.create(), { top: [0, -1e-6, 1], bottom: [0, 0, -1], front: [0, 1, 0], back: [0, -1, 0], left: [-1, 0, 0], right: [1, 0, 0], undefined: [0, 0, 0] }[e].map((e2) => e2 * r), t.target);
          return { view: mat4.lookAt(mat4.create(), o, t.target, t.up), position: o };
        };
        module3.exports = { toPerspectiveView, toPresetView, fromOrthographicToPerspective, fromPerspectiveToOrthographic };
      }, { "./orthographicCamera": 91, "./perspectiveCamera": 92, "gl-mat4": 26, "gl-vec3": 59 }], 91: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), cameraState = { view: mat4.identity(new Float32Array(16)), projection: mat4.identity(new Float32Array(16)), matrix: mat4.identity(new Float32Array(16)), near: 1, far: 1300, up: [0, 0, 1], eye: new Float32Array(3), position: [150, 250, 200], target: [0, 0, 0], fov: Math.PI / 4, aspect: 1, viewport: [0, 0, 0, 0], zoom: 1, projectionType: "orthographic" }, cameraProps = {}, setProjection = (t, e) => {
          const { width: a, height: r } = e, o = a / r, i = [0, 0, a, r], n = t.zoom, c = -a * n, m = a * n, p = -r * n, s = r * n;
          return { projection: mat4.ortho([], c, m, p, s, t.near, t.far), aspect: o, viewport: i };
        };
        module3.exports = { cameraState, cameraProps, setProjection };
      }, { "gl-mat4": 26 }], 92: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), vec3 = require2("gl-vec3"), cameraState = { view: mat4.identity(new Float32Array(16)), projection: mat4.identity(new Float32Array(16)), matrix: mat4.identity(new Float32Array(16)), near: 1, far: 18e3, up: [0, 0, 1], eye: new Float32Array(3), position: [450, 550, 700], target: [0, 0, 0], fov: Math.PI / 4, aspect: 1, viewport: [0, 0, 0, 0], projectionType: "perspective" }, cameraProps = {}, defaults = Object.assign({}, cameraState, cameraProps), setProjection = (e, t, a) => {
          const r = a.width / a.height, o = mat4.perspective(mat4.identity([]), t.fov, r, t.near, t.far), i = [0, 0, a.width, a.height], c = e || {};
          return c.projection = o, c.aspect = r, c.viewport = i, c;
        }, update = (e, t) => {
          t || (t = e);
          const { position: a, target: r, up: o } = t, i = vec3.subtract([], a, r), c = vec3.add(vec3.create(), r, i), n = mat4.lookAt(mat4.create(), c, r, o), p = e || {};
          return p.position = c, p.view = n, p;
        };
        module3.exports = { cameraState, cameraProps, defaults, setProjection, update };
      }, { "gl-mat4": 26, "gl-vec3": 59 }], 93: [function(require2, module3, exports3) {
        const vec3 = require2("gl-vec3"), mat4 = require2("gl-mat4"), { max, min, sqrt, PI, sin, cos, atan2 } = Math, computeBounds = require2("../bound-utils/computeBounds"), controlsProps = { limits: { minDistance: 0.01, maxDistance: 1e4 }, drag: 0.27, EPS: 1e-6, zoomToFit: { auto: true, targets: "all", tightness: 1.5 }, userControl: { zoom: true, zoomSpeed: 1, rotate: true, rotateSpeed: 1, pan: true, panSpeed: 1 }, autoRotate: { enabled: false, speed: 1 }, autoAdjustPlanes: true }, controlsState = { thetaDelta: 0, phiDelta: 0, scale: 1 }, defaults = Object.assign({}, controlsState, controlsProps), update = ({ controls: t, camera: e }, a) => {
          const { EPS: o, drag: s } = t, { position: r, target: n } = e, c = t.up ? t.up : e.up;
          let i = t.thetaDelta;
          const l = t.phiDelta, m = t.scale, p = vec3.subtract([], r, n);
          let u, d;
          c[2] === 1 ? (u = atan2(p[0], p[1]), d = atan2(sqrt(p[0] * p[0] + p[1] * p[1]), p[2])) : (u = atan2(p[0], p[2]), d = atan2(sqrt(p[0] * p[0] + p[2] * p[2]), p[1])), t.autoRotate.enabled && t.userControl.rotate && (i += 2 * Math.PI / 60 / 60 * t.autoRotate.speed), u += i, d = max(o, min(PI - o, d += l));
          const h = max(t.limits.minDistance, min(t.limits.maxDistance, vec3.length(p) * m));
          c[2] === 1 ? (p[0] = h * sin(d) * sin(u), p[2] = h * cos(d), p[1] = h * sin(d) * cos(u)) : (p[0] = h * sin(d) * sin(u), p[1] = h * cos(d), p[2] = h * sin(d) * cos(u));
          const g = vec3.add(vec3.create(), n, p), v = mat4.lookAt(mat4.create(), g, n, c), D = 1 - max(min(s, 1), 0.01);
          return { controls: { thetaDelta: i * D, phiDelta: l * D, scale: 1, changed: vec3.distance(r, g) > 1e-3 }, camera: { position: g, view: v } };
        }, rotate = ({ controls: t, camera: e, speed: a = 1 }, o) => {
          let { thetaDelta: s, phiDelta: r } = t;
          return t.userControl.rotate && (s += o[0] * a, r += o[1] * a), { controls: { thetaDelta: s, phiDelta: r }, camera: e };
        }, zoom = ({ controls: t, camera: e, speed: a = 1 }, o = 0) => {
          let { scale: s } = t;
          if (t.userControl.zoom && e && o !== void 0 && o !== 0 && !isNaN(o)) {
            const r = (o = o / o * (Math.sign(o) === 0 ? 1 : Math.sign(o)) * a) + t.scale, n = vec3.distance(e.position, e.target) * r;
            if (n > t.limits.minDistance && n < t.limits.maxDistance && (s += o), e.projectionType === "orthographic") {
              const t2 = 0.3 * vec3.length(vec3.subtract([], e.position, e.target)), a2 = Math.tan(e.fov) * t2 * e.aspect, o2 = Math.tan(e.fov) * t2;
              e = require2("../cameras/orthographicCamera").setProjection(e, { width: a2, height: o2 });
            }
          }
          return { controls: { scale: s }, camera: e };
        }, pan = ({ controls: t, camera: e, speed: a = 1 }, o) => {
          const s = require2("camera-unproject"), { projection: r, view: n, viewport: c } = e, i = mat4.multiply([], r, n), l = mat4.invert([], i), m = [c[2], c[3], 0], p = [c[2] - o[0], c[3] + o[1], 0], u = s([], m, c, l), d = s([], p, c, l), h = vec3.distance(e.position, e.eye), g = vec3.subtract([], u, d).map((e2) => e2 * a * h * t.scale);
          return { controls: t, camera: { position: vec3.add(vec3.create(), e.position, g), target: vec3.add(vec3.create(), e.target, g) } };
        }, zoomToFit = ({ controls: t, camera: e, entities: a }) => {
          const { zoomToFit: o } = t;
          if (o.targets !== "all")
            return { controls: t, camera: e };
          if (a.length === 0)
            return { controls: t, camera: e };
          const s = a.map((t2) => t2.geometry), r = computeBounds(s), { fov: n, target: c, position: i } = e, { tightness: l } = Object.assign({}, o, controlsProps.zoomToFit), m = r.dia * l / Math.tan(n / 2) / vec3.distance(c, i);
          return { camera: { target: r.center }, controls: { scale: m } };
        }, reset = ({ controls: t, camera: e }, a) => {
          return { camera: { position: a.camera.position, target: a.camera.target, projection: mat4.perspective([], e.fov, e.aspect, e.near, e.far), view: a.camera.view }, controls: { thetaDelta: a.controls.thetaDelta, phiDelta: a.controls.phiDelta, scale: a.controls.scale } };
        }, setFocus = ({ controls: t, camera: e }, a) => {
          const o = (t2, e2) => t2.map((t3, a2) => t3 + e2[a2]), s = e.target, r = [0, 0, 0.5 * ((t2, e2) => t2.map((t3, a2) => t3 - e2[a2]))(a, s)[2]];
          return e.target = o(s, r), e.position = o(e.position, r), e;
        };
        module3.exports = { controlsProps, controlsState, defaults, update, rotate, zoom, pan, zoomToFit, reset };
      }, { "../bound-utils/computeBounds": 89, "../cameras/orthographicCamera": 91, "camera-unproject": 9, "gl-mat4": 26, "gl-vec3": 59 }], 94: [function(require2, module3, exports3) {
        const { flatten, toArray } = require2("@jscad/array-utils"), { meshColor } = require2("../rendering/renderDefaults"), geom2ToGeometries = require2("./geom2ToGeometries"), geom3ToGeometries = require2("./geom3ToGeometries"), path2ToGeometries = require2("./path2ToGeometries"), assembleEntities = (e) => {
          return e.map((e2) => {
            return { geometry: e2, visuals: { drawCmd: e2.type === "2d" ? "drawLines" : "drawMesh", show: true, transparent: e2.isTransparent, useVertexColors: true } };
          });
        }, entitiesFromSolids = (e, ...o) => {
          const r = { color: meshColor, smoothNormals: true }, { color: t, smoothNormals: s } = Object.assign({}, r, e);
          o = (o = flatten(toArray(o))).filter((e2) => e2 && e2 instanceof Object);
          const i = [];
          return o.forEach((e2) => {
            let o2 = [];
            "sides" in e2 ? o2 = geom2ToGeometries({ color: t }, e2) : "points" in e2 ? o2 = path2ToGeometries({ color: t }, e2) : "polygons" in e2 && (o2 = geom3ToGeometries({ smoothLighting: s, normalThreshold: 0.3, color: t }, e2)), i.push(...assembleEntities(o2));
          }), i;
        };
        module3.exports = entitiesFromSolids;
      }, { "../rendering/renderDefaults": 110, "./geom2ToGeometries": 95, "./geom3ToGeometries": 96, "./path2ToGeometries": 97, "@jscad/array-utils": 4 }], 95: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), maxIndex = Math.floor(32767.5), geom2ToGeometries = (o, e) => {
          let { color: t } = o;
          const r = e.sides;
          if (r.length === 0)
            return [];
          "color" in e && (t = e.color);
          const n = t[3] < 1, s = Math.floor(r.length / maxIndex) + 1, a = [];
          for (let o2 = 0; o2 < s; o2++) {
            const s2 = o2 * maxIndex, m = Math.min(s2 + maxIndex, r.length), l = [];
            for (let o3 = s2; o3 < m; o3++) {
              const e2 = r[o3];
              l.push([e2[0][0], e2[0][1], 0]), l.push([e2[1][0], e2[1][1], 0]);
            }
            const c = l.map((o3) => [0, 0, -1]), i = l.map((o3, e2) => e2), h = e.transforms ? mat4.clone(e.transforms) : mat4.create();
            a.push({ type: "2d", positions: l, normals: c, indices: i, transforms: h, color: t, isTransparent: n });
          }
          return a;
        };
        module3.exports = geom2ToGeometries;
      }, { "gl-mat4": 26 }], 96: [function(require2, module3, exports3) {
        const vec3 = require2("gl-vec3"), mat4 = require2("gl-mat4"), maxIndex = 65535, geom3ToGeometries = (o, e) => {
          let { color: t, smoothLighting: n, normalThreshold: r } = o;
          "color" in e && (t = e.color);
          const l = e.polygons, s = e.transforms ? mat4.clone(e.transforms) : mat4.create(), c = [];
          let i = 0;
          for (; i < l.length; ) {
            let o2 = 0, e2 = i;
            for (let t2 = i; t2 < l.length && !((o2 += l[t2].vertices.length) > 65535); t2++)
              e2++;
            const n2 = [], r2 = [], a = [], m = [], p = true;
            for (let o3 = i; o3 < e2; o3++) {
              const e3 = l[o3], s2 = e3.vertices, c2 = calculateNormal(e3), i2 = polygonColor(e3, t), p2 = [];
              for (let o4 = 0; o4 < s2.length; o4++) {
                const e4 = s2[o4], t2 = [e4[0], e4[1], e4[2]];
                n2.push(t2), r2.push(c2), m.push(i2);
                const l2 = n2.length - 1;
                p2.push(l2);
              }
              for (let o4 = 2; o4 < p2.length; o4++)
                a.push([p2[0], p2[o4 - 1], p2[o4]]);
            }
            const u = { type: "3d", positions: n2, normals: r2, indices: a, colors: m, transforms: s, isTransparent: p };
            c.push(u), i = e2;
          }
          return c;
        }, smoothing = () => {
          const o = [], e = [];
          let t = true;
          const n = [], r = [], l = [], s = [], c = [];
          let i = 0;
          for (let a = 0; a < o.length; a++) {
            const m = o[a], p = m.vertices, u = polygonColor(m, e), h = calculateNormal(m);
            u && u[3] !== 1 && (t = true);
            const g = [];
            for (let o2 = 0; o2 < p.length; o2++) {
              let e2;
              const t2 = p[o2], l2 = [t2[0], t2[1], t2[2]];
              {
                const o3 = { normal: h, position: l2 }, t3 = fuzyNormalAndPositionLookup(c, o3, 0.5);
                if (t3)
                  e2 = t3.index;
                else {
                  const t4 = c[o3.position], a2 = [{ normal: o3.normal, index: i }];
                  c[o3.position] = t4 ? c[o3.position].concat(a2) : a2, e2 = i, u && s.push(u), r.push(h), n.push(l2), i += 1;
                }
              }
              g.push(e2);
            }
            for (let o2 = 2; o2 < g.length; o2++)
              l.push([g[0], g[o2 - 1], g[o2]]);
          }
        }, polygonColor = (o, e) => {
          let t = e;
          return o.color && (t = o.color), t && t.length < 4 && t.push(1), t;
        }, calculateNormal = (o) => {
          if (o.plane)
            return vec3.clone(o.plane);
          const e = o.vertices, t = vec3.create();
          vec3.subtract(t, e[1], e[0]);
          const n = vec3.create();
          vec3.subtract(n, e[2], e[0]);
          const r = vec3.create();
          return vec3.cross(r, t, n), vec3.normalize(r, r), r;
        }, areNormalsSimilar = (o, e, t) => vec3.distance(o, e) <= t, fuzyNormalAndPositionLookup = (o, e, t) => {
          const n = o[e.position];
          if (n)
            for (let o2 = 0; o2 < n.length; o2++) {
              const r = n[o2].normal;
              if (areNormalsSimilar(r, e.normal, t))
                return { tupple: { position: e.position, normal: r }, index: n[o2].index };
            }
        };
        module3.exports = geom3ToGeometries;
      }, { "gl-mat4": 26, "gl-vec3": 59 }], 97: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), maxIndex = Math.floor(32767.5) - 2, path2ToGeometries = (o, t) => {
          let { color: e } = o;
          const s = t.points;
          if (s.length === 0)
            return [];
          "color" in t && (e = t.color);
          const n = e[3] < 1, r = Math.floor(s.length / maxIndex) + 1, a = [];
          for (let o2 = 0; o2 < r; o2++) {
            const l = o2 * maxIndex, m = Math.min(l + maxIndex, s.length), c = [];
            let i;
            for (let o3 = l; o3 < m; o3++) {
              const t2 = s[o3];
              i && (c.push([i[0], i[1], 0]), c.push([t2[0], t2[1], 0])), i = t2;
            }
            if (o2 + 1 === r && t.isClosed && i) {
              const o3 = s[0];
              c.push([i[0], i[1], 0]), c.push([o3[0], o3[1], 0]);
            }
            const p = c.map((o3) => [0, 0, -1]), h = c.map((o3, t2) => t2), f = t.transforms ? mat4.clone(t.transforms) : mat4.create();
            a.push({ type: "2d", positions: c, normals: p, indices: h, transforms: f, color: e, isTransparent: n });
          }
          return a;
        };
        module3.exports = path2ToGeometries;
      }, { "gl-mat4": 26 }], 98: [function(require2, module3, exports3) {
        module3.exports = { prepareRender: require2("./rendering/render"), drawCommands: { drawGrid: require2("./rendering/commands/drawGrid/multi.js"), drawAxis: require2("./rendering/commands/drawAxis"), drawMesh: require2("./rendering/commands/drawMesh"), drawLines: require2("./rendering/commands/drawLines") }, cameras: { camera: require2("./cameras/camera"), orthographic: require2("./cameras/orthographicCamera"), perspective: require2("./cameras/perspectiveCamera") }, controls: { orbit: require2("./controls/orbitControls") }, entitiesFromSolids: require2("./geometry-utils-V2/entitiesFromSolids") };
      }, { "./cameras/camera": 90, "./cameras/orthographicCamera": 91, "./cameras/perspectiveCamera": 92, "./controls/orbitControls": 93, "./geometry-utils-V2/entitiesFromSolids": 94, "./rendering/commands/drawAxis": 99, "./rendering/commands/drawGrid/multi.js": 101, "./rendering/commands/drawLines": 103, "./rendering/commands/drawMesh": 105, "./rendering/render": 108 }], 99: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), drawAxis = (t, i) => {
          let { size: o, xColor: e, yColor: l, zColor: m, lineWidth: a, alwaysVisible: n } = Object.assign({}, { xColor: [1, 0, 0, 1], yColor: [0, 1, 0, 1], zColor: [0, 0, 1, 1], size: 10, lineWidth: 3, alwaysVisible: true }, i);
          a > t.limits.lineWidthDims[1] && (a = t.limits.lineWidthDims[1]);
          const r = [0, 0, 0, o, 0, 0], d = { frag: "precision mediump float;\n    uniform vec4 color;\n    void main() {\n      gl_FragColor = color;\n    }", vert: "\n    precision mediump float;\n    attribute vec3 position;\n    uniform mat4 model, view, projection;\n    void main() {\n      gl_Position = projection * view * model * vec4(position, 1);\n    }", uniforms: { model: (t2, i2) => i2 && i2.model ? i2.model : mat4.identity([]), color: (t2, i2) => i2.color, angle: (t2, i2) => i2.angle }, attributes: { position: r }, count: r.length / 3, primitive: "line loop", lineWidth: a, depth: { enable: !n } }, s = mat4.identity([]), c = mat4.rotateZ(mat4.create(), mat4.identity([]), Math.PI / 2), p = mat4.rotateY(mat4.create(), mat4.identity([]), -Math.PI / 2), u = t(d);
          return (t2) => {
            const i2 = { model: mat4.identity([]) };
            return t2 = Object.assign({}, i2, t2), u([{ color: e, model: mat4.multiply(mat4.create(), t2.model, s) }, { color: l, model: mat4.multiply(mat4.create(), t2.model, c) }, { color: m, model: mat4.multiply(mat4.create(), t2.model, p) }]);
          };
        };
        module3.exports = drawAxis;
      }, { "gl-mat4": 26 }], 100: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), makeDrawGrid = (o, i = {}) => {
          const n = [], t = { visuals: { color: [0, 0, 1, 1], fadeOut: false }, ticks: 1, size: [16, 16], centered: false, lineWidth: 2 }, e = Object.assign({}, t.visuals, i.visuals || {}), { fadeOut: r, color: s } = e, { size: l, ticks: a, centered: c, lineWidth: d } = Object.assign({}, t, i), f = l[0], u = l[1];
          if (c) {
            const o2 = 0.5 * f, i2 = 0.5 * u, t2 = -o2 + o2 % a, e2 = -t2, r2 = -i2 + i2 % a, s2 = -r2, l2 = 0;
            for (let o3 = t2, i3 = 0; o3 <= e2; o3 += a, i3 += 1)
              i3 % l2 != 0 && (n.push(r2, o3, 0), n.push(s2, o3, 0), n.push(r2, o3, 0));
            for (let o3 = r2, i3 = 0; o3 <= s2; o3 += a, i3 += 1)
              i3 % l2 != 0 && (n.push(o3, t2, 0), n.push(o3, e2, 0), n.push(o3, t2, 0));
          } else {
            for (let o2 = 0.5 * -f; o2 <= 0.5 * f; o2 += a)
              n.push(0.5 * -u, o2, 0), n.push(0.5 * u, o2, 0), n.push(0.5 * -u, o2, 0);
            for (let o2 = 0.5 * -u; o2 <= 0.5 * u; o2 += a)
              n.push(o2, 0.5 * -f, 0), n.push(o2, 0.5 * f, 0), n.push(o2, 0.5 * -f, 0);
          }
          return o({ vert: "precision mediump float;\n\n    uniform float camNear, camFar;\n    uniform mat4 model, view, projection;\n\n    attribute vec3 position;\n    varying vec3 fragNormal, fragPosition;\n    varying vec4 worldPosition;\n\n    void main() {\n      fragPosition = position;\n      worldPosition = model * vec4(position, 1);\n      vec4 glPosition = projection * view * worldPosition;\n      gl_Position = glPosition;\n    }", frag: "precision mediump float;\n    uniform vec4 color;\n    varying vec3 fragNormal, fragPosition;\n    varying vec4 worldPosition;\n\n    uniform vec4 fogColor;\n    uniform bool fadeOut;\n    void main() {\n      float dist = .5;\n      if(fadeOut){\n        dist = distance( vec2(0.,0.), vec2(worldPosition.x, worldPosition.y));\n        dist *= 0.0025;\n        dist = sqrt(dist);\n      }\n\n      gl_FragColor = mix(color, fogColor, dist);\n    }\n    ", attributes: { position: o.buffer(n) }, count: n.length / 3, uniforms: { model: (o2, i2) => i2 && i2.model ? i2.model : mat4.identity([]), color: (o2, i2) => i2 && i2.color ? i2.color : s, fogColor: (o2, i2) => i2 && i2.color ? [i2.color[0], i2.color[1], i2.color[2], 0] : [s[0], s[1], s[2], 0], fadeOut: (o2, i2) => i2 && i2.fadeOut !== void 0 ? i2.fadeOut : r }, lineWidth: (i2, n2) => Math.min(n2 && n2.lineWidth ? n2.lineWidth : d, o.limits.lineWidthDims[1]), primitive: "lines", cull: { enable: true, face: "front" }, polygonOffset: { enable: true, offset: { factor: 1, units: 10 * Math.random() } }, blend: { enable: true, func: { src: "src alpha", dst: "one minus src alpha" } } });
        };
        module3.exports = makeDrawGrid;
      }, { "gl-mat4": 26 }], 101: [function(require2, module3, exports3) {
        const makeDrawMultiGrid = (e, i) => {
          const { size: s, ticks: r } = Object.assign({}, { size: [50, 50], ticks: [10, 1] }, i), t = require2("./index")(e, { size: s, ticks: r[0] }), u = require2("./index")(e, { size: s, ticks: r[1] });
          return (e2) => {
            t(e2), u({ color: e2.subColor, fadeOut: e2.fadeOut });
          };
        };
        module3.exports = makeDrawMultiGrid;
      }, { "./index": 100 }], 102: [function(require2, module3, exports3) {
        const vColorFrag = "\nprecision mediump float;\nuniform vec4 ucolor;\n\nvoid main () {\n  gl_FragColor = ucolor;\n}\n";
        module3.exports = { frag: vColorFrag };
      }, {}], 103: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), { meshColor } = require2("../../renderDefaults"), drawLines = (e, r = {}) => {
          const t = { color: meshColor, geometry: void 0 };
          let { geometry: o, color: s } = Object.assign({}, t, r);
          "color" in o && (s = o.color);
          const a = !!(o.indices && o.indices.length > 0), i = !!(o.normals && o.normals.length > 0);
          let l = { primitive: "lines", vert: require2("./meshShaders").vert, frag: require2("./colorOnlyShaders").frag, uniforms: { model: (e2, r2) => r2.model || o.transforms || mat4.create(), ucolor: (e2, r2) => r2 && r2.color ? r2.color : s }, attributes: { position: e.buffer({ usage: "static", type: "float", data: o.positions }) } };
          return a && (l.elements = e.elements({ usage: "static", type: "uint16", data: o.indices })), i && (l.attributes.normal = e.buffer({ usage: "static", type: "float", data: o.normals })), e(l);
        };
        module3.exports = drawLines;
      }, { "../../renderDefaults": 110, "./colorOnlyShaders": 102, "./meshShaders": 104, "gl-mat4": 26 }], 104: [function(require2, module3, exports3) {
        const meshFrag = "\nprecision mediump float;\nvarying vec3 surfaceNormal;\nuniform float ambientLightAmount;\nuniform float diffuseLightAmount;\nuniform vec4 ucolor;\nuniform vec3 lightDirection;\nuniform vec3 opacity;\n\nvarying vec4 _worldSpacePosition;\n\nuniform vec2 printableArea;\n\nvec4 errorColor = vec4(0.15, 0.15, 0.15, 0.3);\n\nvoid main () {\n  vec4 depth = gl_FragCoord;\n\n  float v = 0.8; // shadow value\n  vec4 endColor = ucolor;\n\n  vec3 ambient = ambientLightAmount * endColor.rgb;\n  float cosTheta = dot(surfaceNormal, lightDirection);\n  vec3 diffuse = diffuseLightAmount * endColor.rgb * clamp(cosTheta , 0.0, 1.0 );\n\n  float cosTheta2 = dot(surfaceNormal, vec3(-lightDirection.x, -lightDirection.y, lightDirection.z));\n  vec3 diffuse2 = diffuseLightAmount * endColor.rgb * clamp(cosTheta2 , 0.0, 1.0 );\n\n  gl_FragColor = vec4((ambient + diffuse + diffuse2 * v), endColor.a);\n}", meshVert = "\nprecision mediump float;\n\nuniform float camNear, camFar;\nuniform mat4 model, view, projection;\n\nattribute vec3 position, normal;\n\nvarying vec3 surfaceNormal, surfacePosition;\nvarying vec4 _worldSpacePosition;\n\nvoid main() {\n  surfacePosition = position;\n  surfaceNormal = normal;\n  vec4 worldSpacePosition = model * vec4(position, 1);\n  _worldSpacePosition = worldSpacePosition;\n\n  vec4 glPosition = projection * view * model * vec4(position, 1);\n  gl_Position = glPosition;\n}\n";
        module3.exports = { vert: meshVert, frag: meshFrag };
      }, {}], 105: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), { meshColor } = require2("../../renderDefaults"), drawMesh = (e, r = { extras: {} }) => {
          const t = { useVertexColors: true, dynamicCulling: false, geometry: void 0, color: meshColor };
          let { geometry: s, dynamicCulling: a, useVertexColors: o, color: l } = Object.assign({}, t, r);
          const n = e.buffer([]), i = !!(s.indices && s.indices.length > 0), c = !!(s.normals && s.normals.length > 0), m = !!(o && s.colors && s.colors.length > 0), u = a ? (e2, r2) => {
            return 1 & [r2.model[0], r2.model[5], r2.model[10]].filter((e3) => e3 < 0).length ? "front" : "back";
          } : "back";
          let d = { primitive: "triangles", vert: m ? require2("./vColorShaders").vert : require2("./meshShaders").vert, frag: m ? require2("./vColorShaders").frag : require2("./meshShaders").frag, uniforms: { model: (e2, r2) => r2.model || s.transforms || mat4.create(), ucolor: (e2, r2) => r2 && r2.color ? r2.color : l, vColorToggler: (e2, r2) => r2 && r2.useVertexColors && r2.useVertexColors === true ? 1 : 0, unormal: (e2, r2) => {
            const t2 = mat4.create(), s2 = mat4.multiply(mat4.create(), t2, r2.camera.view), a2 = mat4.create();
            return mat4.invert(a2, s2), mat4.transpose(a2, a2), a2;
          } }, attributes: { position: e.buffer({ usage: "static", type: "float", data: s.positions }), ao: n }, cull: { enable: true, face: u }, depth: { enable: true }, blend: { enable: true, func: { src: "src alpha", dst: "one minus src alpha" } } };
          return s.cells ? d.elements = s.cells : i ? d.elements = e.elements({ usage: "static", type: "uint16", data: s.indices }) : s.triangles ? d.elements = s.triangles : d.count = s.positions.length / 3, c && (d.attributes.normal = e.buffer({ usage: "static", type: "float", data: s.normals })), m && (d.attributes.color = e.buffer({ usage: "static", type: "float", data: s.colors })), e(d = Object.assign({}, d, r.extras));
        };
        module3.exports = drawMesh;
      }, { "../../renderDefaults": 110, "./meshShaders": 106, "./vColorShaders": 107, "gl-mat4": 26 }], 106: [function(require2, module3, exports3) {
        const meshFrag = "\nprecision mediump float;\nvarying vec3 surfaceNormal;\nuniform float ambientLightAmount;\nuniform float diffuseLightAmount;\nuniform vec4 ucolor;\nuniform vec3 lightDirection;\nuniform vec3 opacity;\n\nvarying vec4 _worldSpacePosition;\n\nuniform vec2 printableArea;\n\nvec4 errorColor = vec4(0.15, 0.15, 0.15, 0.3);\n\nvoid main () {\n  vec4 depth = gl_FragCoord;\n\n  float v = 0.8; // shadow value\n  vec4 endColor = ucolor;\n\n  vec3 ambient = ambientLightAmount * endColor.rgb;\n  float cosTheta = dot(surfaceNormal, lightDirection);\n  vec3 diffuse = diffuseLightAmount * endColor.rgb * clamp(cosTheta , 0.0, 1.0 );\n\n  float cosTheta2 = dot(surfaceNormal, vec3(-lightDirection.x, -lightDirection.y, lightDirection.z));\n  vec3 diffuse2 = diffuseLightAmount * endColor.rgb * clamp(cosTheta2 , 0.0, 1.0 );\n\n  gl_FragColor = vec4((ambient + diffuse + diffuse2 * v), endColor.a);\n}", meshVert = "\nprecision mediump float;\n\nuniform float camNear, camFar;\nuniform mat4 model, view, projection;\n\nattribute vec3 position, normal;\n\nvarying vec3 surfaceNormal, surfacePosition;\nvarying vec4 _worldSpacePosition;\n\nvoid main() {\n  surfacePosition = position;\n  surfaceNormal = normal;\n  vec4 worldSpacePosition = model * vec4(position, 1);\n  _worldSpacePosition = worldSpacePosition;\n\n  vec4 glPosition = projection * view * model * vec4(position, 1);\n  gl_Position = glPosition;\n}\n";
        module3.exports = { vert: meshVert, frag: meshFrag };
      }, {}], 107: [function(require2, module3, exports3) {
        const vColorVert = "\nprecision mediump float;\n\nuniform float camNear, camFar;\nuniform mat4 model, view, projection, unormal;\n\nattribute vec3 position, normal;\nattribute vec4 color;\n\nattribute float ao;\nvarying float ambientAo;\n\nvarying vec3 surfaceNormal, surfacePosition;\nvarying vec4 _worldSpacePosition;\nvarying vec4 vColor;\n\nvoid main() {\n  surfacePosition = position;\n  surfaceNormal = (unormal * vec4(normal, 1.0)).xyz; //vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);\n  vec4 worldSpacePosition = model * vec4(position, 1);\n  _worldSpacePosition = worldSpacePosition;\n  //gl_Position = projection * view * worldSpacePosition;\n\n  vColor = color;\n\n  //ambientAo = (1. - ao) * (0.5 * max(normal.x, 0.) + 0.5);\n\n  vec4 glPosition = projection * view * model * vec4(position, 1);\n  gl_Position = glPosition;\n  //gl_Position = zBufferAdjust(glPosition, camNear, camFar);\n}\n", vColorFrag = "\nprecision mediump float;\nvarying vec3 surfaceNormal, surfacePosition;\n\nuniform float ambientLightAmount;\nuniform float diffuseLightAmount;\nuniform float specularLightAmount;\n\nuniform vec3 lightDirection;\nuniform vec4 lightColor;\nuniform vec3 opacity;\nuniform float uMaterialShininess;\n\nvarying vec4 vColor;\nuniform vec4 ucolor;\nuniform float vColorToggler;\n\nuniform vec2 printableArea;\nvec4 errorColor = vec4(0.15, 0.15, 0.15, 0.3);//vec4(0.15, 0.15, 0.15, 0.3);\nvarying vec4 _worldSpacePosition;\nvarying float ambientAo;\n\nvoid main () {\n  vec4 depth = gl_FragCoord;\n  vec4 endColor = vColor * vColorToggler + ucolor * (1.0 - vColorToggler);\n\n  vec3 ambient = ambientLightAmount * endColor.rgb ; //ambientAo * \n\n  float diffuseWeight = dot(surfaceNormal, lightDirection);\n  vec3 diffuse = diffuseLightAmount * endColor.rgb * clamp(diffuseWeight , 0.0, 1.0 );\n\n  //specular\n  \n  vec4 specularColor = vec4(lightColor);\n  vec3 eyeDirection = normalize(surfacePosition.xyz);\n  vec3 reflectionDirection = reflect(-lightDirection, surfaceNormal);\n  float specularLightWeight = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);\n  vec3 specular = specularColor.rgb * specularLightWeight * specularLightAmount;\n\n  /*float light2Multiplier = 0.2;\n  float diffuseWeight2 = dot(surfaceNormal, vec3(-lightDirection.x, lightDirection.y, lightDirection.z));\n  vec3 diffuse2 = diffuseLightAmount * endColor.rgb * clamp(diffuseWeight2 , 0.0, 1.0 ) * light2Multiplier;\n\n  float light3Multiplier = 0.2;  \n  float diffuseWeight3 = dot(surfaceNormal, vec3(lightDirection.x, -lightDirection.y, lightDirection.z));\n  vec3 diffuse3 = diffuseLightAmount * endColor.rgb * clamp(diffuseWeight3 , 0.0, 1.0 ) * light3Multiplier;\n\n  float light4Multiplier = 0.2;  \n  float diffuseWeight4 = dot(surfaceNormal, vec3(-lightDirection.x, -lightDirection.y, lightDirection.z));\n  vec3 diffuse4 = diffuseLightAmount * endColor.rgb * clamp(diffuseWeight4 , 0.0, 1.0 ) * light4Multiplier;*/\n  \n  gl_FragColor = vec4((ambient + diffuse + specular), endColor.a);\n  //gl_FragColor = vec4((ambient + diffuse + diffuse2 + diffuse3 + diffuse4), endColor.a);\n}\n";
        module3.exports = { frag: vColorFrag, vert: vColorVert };
      }, {}], 108: [function(require2, module3, exports3) {
        const renderContext = require2("./renderContext"), renderDefaults = require2("./renderDefaults"), prepareRender = (e) => {
          const r = Object.assign({}, {}, e.glOptions, { onDone: (e2, r2) => {
            if (e2)
              throw e2;
          } }), n = require2("regl")(r), a = new Map();
          return function(e2) {
            var r2;
            n.poll(), (r2 = e2).rendering = Object.assign({}, renderDefaults, r2.rendering), renderContext(n)(r2, (e3) => {
              n.clear({ color: r2.rendering.background, depth: 1 }), r2.entities && r2.entities.sort((e4, r3) => {
                const n2 = "transparent" in e4.visuals && e4.visuals.transparent;
                return n2 === ("transparent" in r3.visuals && r3.visuals.transparent) ? 0 : n2 ? 1 : -1;
              }).forEach((e4) => {
                const { visuals: t } = e4;
                if ((!("show" in t) || t.show) && t.drawCmd && r2.drawCommands[t.drawCmd]) {
                  let s;
                  t.cacheId ? s = a.get(t.cacheId) : (t.cacheId = a.size, s = r2.drawCommands[t.drawCmd](n, e4), a.set(t.cacheId, s)), s({ ...e4, ...t, camera: r2.camera });
                }
              });
            });
          };
        };
        module3.exports = prepareRender;
      }, { "./renderContext": 109, "./renderDefaults": 110, "regl": 87 }], 109: [function(require2, module3, exports3) {
        const mat4 = require2("gl-mat4"), renderWrapper = (e, i = {}) => {
          const { fbo: r } = i, n = { cull: { enable: true }, context: { lightDirection: [0.2, 0.2, 1] }, uniforms: { view: (e2, i2) => i2.camera.view, eye: (e2, i2) => i2.camera.position, projection: (e2, i2) => i2.camera.projection, camNear: (e2, i2) => i2.camera.near, camFar: (e2, i2) => i2.camera.far, invertedView: (e2, i2) => mat4.invert([], i2.camera.view), lightPosition: (e2, i2) => i2 && i2.rendering && i2.rendering.lightPosition ? i2.rendering.lightPosition : [100, 200, 100], lightDirection: (e2, i2) => i2 && i2.rendering && i2.rendering.lightDirection ? i2.rendering.lightDirection : e2.lightDirection || [0, 0, 0], lightView: (e2) => mat4.lookAt([], e2.lightDirection, [0, 0, 0], [0, 0, 1]), lightProjection: mat4.ortho([], -25, -25, -20, 20, -25, 25), lightColor: (e2, i2) => i2 && i2.rendering && i2.rendering.lightColor ? i2.rendering.lightColor : [1, 0.8, 0], ambientLightAmount: (e2, i2) => i2 && i2.rendering && i2.rendering.ambientLightAmount ? i2.rendering.ambientLightAmount : 0.3, diffuseLightAmount: (e2, i2) => i2 && i2.rendering && i2.rendering.diffuseLightAmount ? i2 && i2.rendering && i2.rendering.diffuseLightAmount : 0.89, specularLightAmount: (e2, i2) => i2 && i2.rendering && i2.rendering.specularLightAmount ? i2.rendering.specularLightAmount : 0.16, uMaterialShininess: (e2, i2) => i2 && i2.rendering && i2.rendering.materialShininess ? i2.rendering.materialShininess : 8, materialAmbient: [0.5, 0.8, 0.3], materialDiffuse: [0.5, 0.8, 0.3], materialSpecular: [0.5, 0.8, 0.3] }, framebuffer: r };
          return e(Object.assign({}, n, i.extras));
        };
        module3.exports = renderWrapper;
      }, { "gl-mat4": 26 }], 110: [function(require2, module3, exports3) {
        module3.exports = { background: [1, 1, 1, 1], meshColor: [0, 0.6, 1, 1], lightColor: [1, 1, 1, 1], lightDirection: [0.2, 0.2, 1], lightPosition: [100, 200, 100], ambientLightAmount: 0.3, diffuseLightAmount: 0.89, specularLightAmount: 0.16, materialShininess: 8 };
      }, {}] }, {}, [98])(98);
    });
  }
});
export default require_jscad_regl_renderer_min();
